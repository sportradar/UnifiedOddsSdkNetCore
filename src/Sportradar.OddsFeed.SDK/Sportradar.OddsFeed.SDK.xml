<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sportradar.OddsFeed.SDK</name>
    </assembly>
    <members>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder">
            <summary>
            Defines a contract implemented by classes used to set general configuration properties
            </summary>
            <remarks>
            Types associated with <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> represent a re-factored approach to building SDK configuration and
            therefore make <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> related instances obsolete. The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/>
            and related instances cannot be removed in order not to introduce braking changes.
            </remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1">
            <summary>
            A base contract custom and general configuration builders
            </summary>
            <typeparam name="T">The type of the builder extending the interface</typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.LoadFromConfigFile">
            <summary>
            Sets the general configuration properties to values read from configuration file. Only value which can be set
            through <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> methods are set. Any values already set by methods on the current instance are overridden
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.SetDesiredLanguages(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Sets the languages in which translatable data is available
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying languages in which translatable data should be available</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.SetDefaultLanguage(System.Globalization.CultureInfo)">
            <summary>
            Sets the default language in which translatable data is available
            </summary>
            <param name="culture">A default language in which translatable data should be available</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.SetExceptionHandlingStrategy(Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Sets the value specifying how exceptions thrown in the SDK are handled.
            </summary>
            <param name="strategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum specifying how exceptions thrown in the SDK are handled</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.SetNodeId(System.Int32)">
            <summary>
            Sets the node id used to separate between SDK instances associated with the same account
            </summary>
            <param name="nodeId">The node id to be set</param>
            <remarks>MTS customer must set this value! Use only positive numbers; negative are reserved for internal use. Each sdk instance should use unique id.</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.SetDisabledProducers(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Specifies the producers which should be disabled (i.e. no recovery, ...)
            </summary>
            <param name="producerIds">The list of producer ids specifying the producers which should be disabled</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance
            </summary>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder">
            <summary>
            Defines a contract implemented by classes used to set general and custom configuration properties
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetApiHost(System.String)">
            <summary>
            Set the host name of the Sports API server
            </summary>
            <param name="apiHost">The host name of the Sports API server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetMessagingHost(System.String)">
            <summary>
            Sets the host name of the AMQP server
            </summary>
            <param name="host">The host name of the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetVirtualHost(System.String)">
            <summary>
            Sets the virtual host name of the AMQP server
            </summary>
            <param name="virtualHost">The virtual host name of the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetMessagingPort(System.Int32)">
            <summary>
            Sets the port used to connect to the AMQP server
            </summary>
            <param name="port">The port used to connect to the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetMessagingUsername(System.String)">
            <summary>
            Sets the username used to authenticate with the messaging server
            </summary>
            <param name="username">The username used to authenticate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetMessagingPassword(System.String)">
            <summary>
            Sets the password used to authenticate with the messaging server
            </summary>
            <param name="password">The password used to authenticate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.UseApiSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with Sports API
            </summary>
            <param name="useApiSsl">The value specifying whether SSL should be used to communicate with Sports API</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.UseMessagingSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with the messaging server
            </summary>
            <param name="useMessagingSsl">The value specifying whether SSL should be used to communicate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetClientAuthenticationHost(System.String)">
            <summary>
            Sets the host name of the authentication server.
            </summary>
            <param name="authenticationHost">The host name of the authentication server.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set authentication config values.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetClientAuthenticationPort(System.Int32)">
            <summary>
            Sets the port used to connect to the authentication server.
            </summary>
            <param name="port">The port used to connect to the authentication server.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set authentication config values.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder.SetClientAuthenticationUseSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with the authentication server.
            </summary>
            <param name="useSsl">The value specifying whether SSL should be used to communicate with the authentication server.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set authentication config values.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector">
            <summary>
            Defines a contract implemented by classes taking care of the 2nd step when building configuration - selecting the environment.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector.SelectReplay">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access replay server
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access replay server</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector.SelectCustom">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> allowing the properties to be set to custom values (useful for testing with non-standard AMQP)
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> with properties set to values needed to access replay server</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector.SelectEnvironment(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access specified environment
            </summary>
            <remarks>For accessing replay or custom server use SelectReplay or SelectCustom</remarks>
            <param name="ufEnvironment">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/> specifying to which environment to connect</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access production environment</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector.SelectEnvironmentFromConfigFile">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access specified environment
            </summary>
            <remarks>For accessing replay or custom server use SelectReplay or SelectCustom</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder"/> with properties set to values needed to access predefined environment</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1">
            <summary>
            Defines a contract implemented by classes used to set recovery related configuration properties
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetInactivitySeconds(System.Int32)">
            <summary>
            Sets the max time window between two consecutive alive messages before the associated producer is marked as down
            </summary>
            <param name="inactivitySeconds">the max time window between two consecutive alive messages</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetInactivitySecondsPrematch(System.Int32)">
            <summary>
            Sets the max time window between two consecutive alive messages before the associated producer is marked as down (for prematch producer)
            </summary>
            <param name="inactivitySecondsPrematch">the max time window between two consecutive alive messages</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetMaxRecoveryTime(System.Int32)">
            <summary>
            Sets the maximum time in seconds in which recovery must be completed (minimum 600 seconds)
            </summary>
            <param name="maxRecoveryTimeInSeconds">Maximum recovery time in seconds</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetMinIntervalBetweenRecoveryRequests(System.Int32)">
            <summary>
            Sets the minimal interval between recovery requests initiated by alive messages (between 20 and 180 seconds)
            </summary>
            <param name="minIntervalBetweenRecoveryRequests">The minimal interval between recovery requests initiated by alive messages (seconds)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1" /> instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetHttpClientTimeout(System.Int32)">
            <summary>
            Sets the timeout for HTTP requests for this instance of the sdk
            </summary>
            <param name="httpClientTimeout">The timeout for recovery HTTP requests</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetHttpClientRecoveryTimeout(System.Int32)">
            <summary>
            Sets the timeout for recovery HTTP requests for this instance of the sdk
            </summary>
            <param name="httpClientRecoveryTimeout">The timeout for recovery HTTP requests</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetHttpClientFastFailingTimeout(System.Int32)">
            <summary>
            Sets a timeout for HttpClient for fast api request (in seconds).
            </summary>
            <param name="httpClientFastFailingTimeout">The timeout to be set (in seconds)</param>
            <remarks>Between 1 and 30 (default 5s) - set before connection is made.</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetMaxConnectionsPerServer(System.Int32)">
            <summary>
            Sets the maximum number of concurrent connections (per server endpoint) allowed by an HttpClient object. (default: int.Max)
            </summary>
            <param name="maxConnectionsPerServer">The new maximum number of concurrent connections (per server endpoint) allowed by an HttpClient object.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetSportEventCacheTimeout(System.Int32)">
            <summary>
            Sets the timeout for cache items in SportEventCache (in hours)
            </summary>
            <param name="timeoutInHours">The timeout.</param>
            <remarks>Can be between 1 hour and 48 hours - default 12 hours (sliding expiration)</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetSportEventStatusCacheTimeout(System.Int32)">
            <summary>
            Sets the timeout for cache items in SportEventCacheStatus (in minutes)
            </summary>
            <param name="timeoutInMinutes">The timeout.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetProfileCacheTimeout(System.Int32)">
            <summary>
            Sets the profile cache timeout.
            </summary>
            <param name="timeoutInHours">The timeout.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetVariantMarketDescriptionCacheTimeout(System.Int32)">
            <summary>
            Sets the timeout for cache items in  variant market description cache (in hours)
            </summary>
            <param name="timeoutInHours">The timeout.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetIgnoreBetPalTimelineSportEventStatusCacheTimeout(System.Int32)">
            <summary>
            Sets the ignore BetPal timeline sport event status cache timeout. How long should the event id from BetPal be cached. SportEventStatus from timeline endpoint for these events are ignored.
            </summary>
            <param name="timeoutInHours">The timeout.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetIgnoreBetPalTimelineSportEventStatus(System.Boolean)">
            <summary>
            Sets the value indicating whether to ignore sport event status from timeline endpoint for sport events on BetPal producer
            </summary>
            <param name="ignore">if set to <c>true</c> ignore</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetRabbitConnectionTimeout(System.Int32)">
            <summary>
            Sets the rabbit timeout setting for connection attempts (in seconds)
            </summary>
            <param name="rabbitConnectionTimeout">The rabbit timeout setting for connection attempts (in seconds)</param>
            <remarks>Between 10 and 120 (default 30s) - set before connection is made</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetRabbitHeartbeat(System.Int32)">
            <summary>
            Sets a heartbeat timeout to use when negotiating with the rabbit server (in seconds)
            </summary>
            <param name="heartbeatInSeconds">The heartbeat timeout to use when negotiating with the rabbit server (in seconds)</param>
            <remarks>Between 10 and 180 (default 60s) - set before connection is made</remarks>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.SetStatisticsInterval(System.Int32)">
            <summary>
            Sets the interval for automatically collecting statistics (in minutes)
            </summary>
            <remarks>Setting to 0 indicates it is disabled</remarks>
            <param name="intervalInMinutes">The timeout for automatically collecting statistics (in minutes)</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> instance used to set additional values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.OmitMarketMappings(System.Boolean)">
            <summary>
            Sets the value indicating whether to ignore market mappings when fetching market descriptions from API
            </summary>
            <param name="omit">if set to <c>true</c> omit, otherwise include market mapping data</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1.EnableUsageExport(System.Boolean)">
            <summary>
            Sets the value indicating whether sdk usage (metrics) can be exported
            </summary>
            <param name="enableUsageExport">if set to <c>true</c> export is permitted, otherwise not</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter">
            <summary>
            Defines a contract implemented by classes taking care of the 1st step when building configuration - setting the token
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter.SetAccessToken(System.String)">
            <summary>
            Sets the access token used to access feed resources (AMQP broker, Sports API, ...)
            </summary>
            <param name="accessToken">The access token used to access feed resources</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector"/> instance allowing the selection of target environment</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter.SetClientAuthentication(Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData)">
            <summary>
            Sets the authentication configuration used to access feed resources.
            </summary>
            <param name="privateKeyJwtData">The authentication configuration containing credentials.</param>
            <returns>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter"/> instance allowing chaining of calls.
            </returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter.SetAccessTokenFromConfigFile">
            <summary>
            Sets the access token used to access feed resources (AMQP broker, Sports API, ...) to value read from configuration file
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector"/> instance allowing the selection of target environment</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter.BuildFromConfigFile">
            <summary>
            Gets the configuration properties from configuration file. Any values already set by methods on the current instance are overridden. Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance.
            </summary>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofAdditionalConfiguration">
            <summary>
            Defines a contract implemented by classes representing additional uof sdk configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofAdditionalConfiguration.StatisticsInterval">
            <summary>
            Gets the timeout for automatically collecting statistics
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofAdditionalConfiguration.OmitMarketMappings">
            <summary>
            Indicates if the market mapping should be included when requesting market descriptions from API
            </summary>
            <remarks>False - market mappings are included (default)</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration">
            <summary>
            Defines a contract implemented by classes representing api connection configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.Host">
            <summary>
            Gets a host name of the Sports API
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.BaseUrl">
            <summary>
            Gets the representation of Sports API URI
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.UseSsl">
            <summary>
            Gets a value indicating whether the connection to Sports API should use SSL
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.HttpClientTimeout">
            <summary>
            Gets a value specifying a timeout set for HTTP requests
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.HttpClientRecoveryTimeout">
            <summary>
            Gets a value specifying a timeout set for HTTP request for recovery endpoints
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.HttpClientFastFailingTimeout">
            <summary>
            Gets a value specifying a timeout set for fast-failing HTTP requests
            </summary>
            <remarks>Applies for API calls to endpoints: summary, competitor and player profile, draw summary, single variant markets</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.ReplayHost">
            <summary>
            Gets the URL of the feed's Replay Server REST interface
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.ReplayBaseUrl">
            <summary>
            Gets a representation of Replay Server API base url
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofApiConfiguration.MaxConnectionsPerServer">
            <summary>
            Gets the maximum number of concurrent connections (per server endpoint) allowed by an HttpClientHandler object. (default: int.Max)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration">
            <summary>
            Defines a contract implemented by classes representing sdk internal caches configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.SportEventCacheTimeout">
            <summary>
            Gets the sport event cache timeout - how long cache item is cached
            </summary>
            <value>The event cache timeout.</value>
            <remarks>Can be between 1 hour and 48 hours - default 12 hours (sliding expiration)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.SportEventStatusCacheTimeout">
            <summary>
            Gets the sport event status cache timeout - how long status is cached
            </summary>
            <value>The sport event status cache timeout.</value>
            <remarks>Can be between 1 min and 60 min - default 5 min (absolute expiration)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.ProfileCacheTimeout">
            <summary>
            Gets the competitor/player cache timeout - how long cache item is cached
            </summary>
            <value>The competitor/player cache timeout.</value>
            <remarks>Can be between 1 hour and 48 hours - default 24 hours (sliding expiration)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.VariantMarketDescriptionCacheTimeout">
            <summary>
            Gets the variant market description cache timeout - how long cache item is cached
            </summary>
            <value>The variant market description cache timeout.</value>
            <remarks>Can be between 1 hour and 24 hours - default 3 hours (sliding expiration)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.IgnoreBetPalTimelineSportEventStatusCacheTimeout">
            <summary>
            Gets the ignore BetPal timeline sport event status cache timeout - how long cache item is cached. How long should the event id from BetPal producer be cached. SportEventStatus from timeline endpoint for these events are ignored.
            </summary>
            <value>The ignore BetPal timeline sport event status timeout.</value>
            <remarks>Can be between 1 hour and 24 hours - default 3 hours (sliding expiration)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofCacheConfiguration.IgnoreBetPalTimelineSportEventStatus">
            <summary>
            Gets a value indicating whether to ignore sport event status from timeline endpoint for sport events on BetPal producer
            </summary>
            <value><c>true</c> if sport event status from timeline endpoint should be ignored, otherwise <c>false</c>.</value>
            <remarks>Default <c>false</c></remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration">
            <summary>
            Defines a contract implemented by classes representing uof sdk configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.AccessToken">
            <summary>
            Gets the access token used when accessing feed's REST interface
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Environment">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/> value specifying the environment to which to connect.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.NodeId">
            <summary>
            Gets the node identifier
            </summary>
            <remarks>MTS customer must set this value! Use only positive numbers; negative are reserved for internal use.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.DefaultLanguage">
            <summary>
            Gets a <see cref="T:System.Globalization.CultureInfo"/> specifying default languages to which translatable values will be translated
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Languages">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying languages to which translatable values will be translated
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.ExceptionHandlingStrategy">
            <summary>
            Gets the exception handling strategy
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.BookmakerDetails">
            <summary>
            Gets the bookmaker details
            </summary>
            <value>The bookmaker details</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Rabbit">
            <summary>
            Gets the settings used for rabbit connection
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Api">
            <summary>
            Gets the settings used for Sports API connection
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Producer">
            <summary>
            Gets the settings used for producer handling
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Cache">
            <summary>
            Gets the settings used for sdk caches
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Additional">
            <summary>
            Gets the additional settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Usage">
            <summary>
            Gets the settings for usage exporter
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration.Authentication">
            <summary>
            Provides the authentication configuration
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration">
            <summary>
            Defines a contract implemented by classes representing api connection configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.InactivitySeconds">
            <summary>
            Gets the maximum allowed timeout, between consecutive AMQP messages associated with the same producer.
            If this value is exceeded, the producer is considered to be down (seconds)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.InactivitySecondsPrematch">
            <summary>
            Gets the maximum allowed timeout, between consecutive AMQP messages associated for the prematch producer.
            If this value is exceeded, the producer is considered to be down (seconds)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.MaxRecoveryTime">
            <summary>
            Gets the maximum recovery time (seconds)
            </summary>
            <value>The maximum recovery time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.MinIntervalBetweenRecoveryRequests">
            <summary>
            Gets the minimal interval between recovery requests initiated by alive messages (seconds)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.DisabledProducers">
            <summary>
            Gets the comma delimited list of ids of disabled producers (default: none)
            </summary>
            <remarks></remarks>
            <value>The list of ids of disabled producers</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofProducerConfiguration.Producers">
            <summary>
            The collection of available producers (for provided access token)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration">
            <summary>
            Defines a contract implemented by classes representing rabbit connection configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.Host">
            <summary>
            Gets a value specifying the host name of the AQMP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.Port">
            <summary>
            Gets the port used for connecting to the AQMP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.Username">
            <summary>
            Gets the user name for connecting to the AQMP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.Password">
            <summary>
            Gets the password for connecting to the AQMP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.VirtualHost">
            <summary>
            Gets a value specifying the virtual host of the AQMP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.UseSsl">
            <summary>
            Gets a value specifying whether the connection to AMQP broker should use SSL encryption
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.ConnectionTimeout">
            <summary>
            Gets a rabbit timeout setting for connection attempts (in seconds)
            </summary>
            <value>A rabbit timeout setting for connection attempts (in seconds)</value>
            <remarks>Between 10 and 120 (default 30s)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofRabbitConfiguration.Heartbeat">
            <summary>
            Gets a heartbeat timeout to use when negotiating with the server (in seconds)
            </summary>
            <value>A heartbeat timeout to use when negotiating with the server (in seconds)</value>
            <remarks>Between 10 and 180 (default 60s)</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.IUofUsageConfiguration">
            <summary>
            Defines a contract implemented by classes representing additional uof sdk configuration / settings
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofUsageConfiguration.IsExportEnabled">
            <summary>
            Indicates if the sdk usage (metrics) export is enabled
            </summary>
            <remarks>Default value is true</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofUsageConfiguration.ExportIntervalInSec">
            <summary>
            Get the interval in seconds in which the usage metrics are exported
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofUsageConfiguration.ExportTimeoutInSec">
            <summary>
            Get the timeout for exporting usage metrics
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.IUofUsageConfiguration.Host">
            <summary>
            Get the host to which the usage metrics are exported
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest">
            <summary>
            Defines which messages will be provided by feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.Name">
            <summary>
            Gets the name of the message interest
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.ProducerId">
            <summary>
            Gets the routing key used to select appropriate AMQP exchange
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.IsScopeInterest">
            <summary>
            Gets the value indicating whether the current interest is a scope interest
            (live, prematch or virt)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.Events">
            <summary>
            The list of events (only used with <see cref="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.SpecificEventsOnly(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn})"/> type)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.IsEventSpecific">
            <summary>
            Gets a value indicating whether the current instance is related to only specific events
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.Scope">
            <summary>
            Gets the scopes that specific message interest covers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.#ctor(System.String,System.Int32,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> class
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.ToString">
            <summary>
            Constructs a <see cref="T:System.String"/> representation of the current instance
            </summary>
            <returns>Returns current instance represented as string</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.AllMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in all messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in all messages</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.LiveMessagesOnly">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in live messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in live messages</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.PrematchMessagesOnly">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in pre-match messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in pre-match messages</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.HighPriorityMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in hi priority messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in high priority messages</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.LowPriorityMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.VirtualSportMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages for virtual sports
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages for virtual sports</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.SpecificEventsOnly(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages associated with specific events
            </summary>
            <param name="eventIds">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the target events</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages associated with specific events</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.MessageScopes">
            <summary>
            List of <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> representing defined messages scopes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.DefinedInterests">
            <summary>
            Gets all available <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.FromScope(System.String)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> representing a scope specified by it's name.
            </summary>
            <param name="scopeName">The name of the scope</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> representing a scope specified by it's name. </returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest.IsCombinationValid(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest})">
            <summary>
            Determines whether the provided list of <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> is a valid combination of sessions
            </summary>
            <param name="interests"></param>
            <returns>True if the provided combination is valid. Otherwise false</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication">
            <summary>
            Static factory and contracts for UOF client authentication.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.PrivateKeyJwt">
            <summary>
            Returns a builder for <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt" />
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData">
            <summary>
            Authentication configuration for the UOF SDK using the Private Key JWT method.
            This corresponds to OAuth 2.0 Client Credentials with a JWT assertion signed by a private key.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData.SigningKeyId">
            <summary>
            The key ID (KID) used to sign the JWT.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData.ClientId">
            <summary>
            The client identifier used for authentication (also used in JWT "iss" and "sub" claims).
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData.PrivateKey">
            <summary>
            The private key used to sign the JWT.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt">
            <summary>
            Authentication configuration for the UOF SDK using the Private Key JWT method.
            This corresponds to OAuth 2.0 Client Credentials with a JWT assertion signed by a private key.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt.Host">
            <summary>
            The host name of the authentication server.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt.Port">
            <summary>
            The port number of the authentication server.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt.UseSsl">
            <summary>
            Indicates whether SSL (HTTPS) is used to communicate with the authentication server.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtBuilder">
            <summary>
            Builder for creating <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt" /> instances.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtBuilder.SetSigningKeyId(System.String)">
            <summary>
            Sets the signing key identifier (KID).
            </summary>
            <param name="signingKeyId">The signing key ID.</param>
            <returns>The same builder instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtBuilder.SetClientId(System.String)">
            <summary>
            Sets the client identifier.
            </summary>
            <param name="clientId">The client ID.</param>
            <returns>The same builder instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtBuilder.SetPrivateKey(Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey)">
            <summary>
            Sets the private key used to sign the JWT.
            </summary>
            <param name="privateKey">The private key.</param>
            <returns>The same builder instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtBuilder.Build">
            <summary>
            Builds the configured <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwt" /> instance.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase">
            <summary>
            A base class for classes used to dispatch messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase.Log">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for logging
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase.Dispatch``1(System.EventHandler{``0},``0,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Dispatches the <c>feed message</c>
            </summary>
            <typeparam name="T">The type of the event arguments</typeparam>
            <param name="handler">Event delegate</param>
            <param name="eventArgs">Event arguments</param>
            <param name="message">A message to dispatch</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EntityDispatcherBase.Dispatch``1(System.EventHandler{``0},``0,System.String,System.Int32)">
            <summary>
            Raises the specified sdk event (ProducerUp, ProducerDown, ...)
            </summary>
            <typeparam name="T">The type of the event arguments</typeparam>
            <param name="handler">A <see cref="T:System.EventHandler`1"/> representing the event</param>
            <param name="eventArgs">Event arguments</param>
            <param name="eventHandlerName">The name of the event</param>
            <param name="producerId">The producer id</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs">
            <summary>
            Event arguments for the alive event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.alive,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message received from the feed</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.AliveEventArgs.GetAlive">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> implementation representing the received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> representing the received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1">
            <summary>
            Event arguments for the <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetCancel"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetCancelEventArgs`1.GetBetCancel(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> implementation representing the received bet cancel message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> implementation representing the received bet cancel message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1">
            <summary>
            Event arguments for <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetSettlement"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetSettlementEventArgs`1.GetBetSettlement(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> implementation representing the received bet settlement message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> implementation representing the received bet settlement message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1">
            <summary>
            Event arguments for <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetStop"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.BetStopEventArgs`1.GetBetStop(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1"/> implementation representing the received bet stop message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1"/> implementation representing the received bet stop message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ConnectionExceptionEventArgs">
            <summary>
            Event arguments for the ConnectionException events
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.ConnectionExceptionEventArgs.#ctor(System.Exception,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ConnectionExceptionEventArgs"/> class
            </summary>
            <param name="exception">The exception that caused an error</param>
            <param name="detail">Details about the error</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.ConnectionExceptionEventArgs.Exception">
            <summary>
            The exception that caused an error
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.ConnectionExceptionEventArgs.Detail">
            <summary>
            Details about the error
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs">
            <summary>
            Event arguments for <see cref="E:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.FixtureChange"/> and <see cref="E:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.ResultChange"/> event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs.SportEvent">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.DateTime,Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventChangeEventArgs"/> class
            </summary>
            <param name="sportEventId">The sport event id</param>
            <param name="updateTime">The update time</param>
            <param name="sportEvent">The sport event object</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs">
            <summary>
            Event arguments for the EventRecoveryCompleted events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs._requestId">
            <summary>
            The identifier of the recovery request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs._eventId">
            <summary>
            The associated event identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs.#ctor(System.Int64,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs"/> class
            </summary>
            <param name="requestId">The identifier of the recovery request</param>
            <param name="eventId">The associated event identifier</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs.GetRequestId">
            <summary>
            Gets the identifier of the recovery request
            </summary>
            <returns>Returns the identifier of the recovery request</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs.GetEventId">
            <summary>
            Gets the associated event identifier
            </summary>
            <returns>Returns the associated event identifier</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.FeedCloseEventArgs">
            <summary>
            Event arguments for the FeedClose events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.FeedCloseEventArgs._reason">
            <summary>
            A reason why must feed be closed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.FeedCloseEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.FeedCloseEventArgs"/> class
            </summary>
            <param name="reason">A reason why feed must be closed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.FeedCloseEventArgs.GetReason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer status change
            </summary>
            <returns>Returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer status change</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1">
            <summary>
            Event arguments for the <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnFixtureChange"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.FixtureChangeEventArgs`1.GetFixtureChange(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/> implementation representing the received fixture change message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/> implementation representing the received fixture change message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1">
            <summary>
            Event arguments for <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnOddsChange"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.odds_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1.GetOddsChange(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> implementation representing the received odds change message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> implementation representing the received odds change message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs">
            <summary>
            Event arguments for the <see cref="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.ProducerDown"/> events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs._statusChange">
            <summary>
            a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer whose status has changed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs.#ctor(Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs"/> class
            </summary>
            <param name="producerStatusChange">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer whose status has changed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs.GetProducerStatusChange">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer status change
            </summary>
            <returns>Returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> implementation containing information about the producer status change</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs">
            <summary>
            Event arguments for the RawApiDataReceived events
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.Uri">
            <summary>
            The associated event identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.RestMessage">
            <summary>
            The rest message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.RequestParams">
            <summary>
            The parameters associated with the request (if present)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.RequestTime">
             <summary>
            The time it took for the request to execute
             </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.Language">
            <summary>
            The language associated with the request
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.#ctor(System.Uri,Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage,System.String,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs" /> class
            </summary>
            <param name="uri">The <see cref="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawApiDataEventArgs.Uri"/> used to get the api data</param>
            <param name="restMessage">The rest message</param>
            <param name="requestParams">The parameters associated with the request</param>
            <param name="requestTime">The time needed to execute request</param>
            <param name="language">The language associated with the request</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs">
            <summary>
            Event arguments for the RawFeedMessageReceived events
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs.RoutingKey">
            <summary>
            The routing key associated with the feed message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs.FeedMessage">
            <summary>
            The feed message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs.MessageInterest">
            <summary>
            Gets the associated message interest
            </summary>
            <value>The associated message interest</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs.#ctor(System.String,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RawFeedMessageEventArgs" /> class
            </summary>
            <param name="routingKey">The routing key associated with the feed message</param>
            <param name="feedMessage">The feed message</param>
            <param name="messageInterest">The associated message interest</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs">
            <summary>
            Event arguments for the RecoveryInitiated events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs._requestId">
            <summary>
            The identifier of the recovery request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs._after">
            <summary>
            The after timestamp if applied
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs._producerId">
            <summary>
            The associated producer identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs._eventId">
            <summary>
            The associated event identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.#ctor(System.Int64,System.Int32,System.Int64,Sportradar.OddsFeed.SDK.Common.Urn,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs"/> class
            </summary>
            <param name="requestId">The identifier of the recovery request</param>
            <param name="producerId">The associated producer identifier</param>
            <param name="after">The after attribute if applies</param>
            <param name="eventId">The associated event identifier</param>
            <param name="message">The message</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.GetRequestId">
            <summary>
            Gets the identifier of the recovery request
            </summary>
            <returns>Returns the identifier of the recovery request</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.GetProducerId">
            <summary>
            Gets the associated producer identifier
            </summary>
            <returns>Returns the associated producer identifier</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.GetAfterTimestamp">
            <summary>
            Gets the after timestamp if applied
            </summary>
            <returns>Returns the after timestamp if applied</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.GetEventId">
            <summary>
            Gets the associated event identifier
            </summary>
            <returns>Returns the associated event identifier</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs.GetMessage">
            <summary>
            Gets the message associated with the recovery request
            </summary>
            <returns>Returns the message associated with the recovery request</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1">
            <summary>
            Event arguments for the <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnRollbackBetCancel"/> event
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetCancelEventArgs`1.GetBetCancelRollback(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> implementation representing the received bet cancel rollback message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> implementation representing the received bet cancel rollback message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1">
            <summary>
            Event arguments for <see cref="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnRollbackBetSettlement"/> class
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance specifying the type of sport event associated with contained <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.OddsChangeEventArgs`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> message received from the feed</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages to which the received message is translated</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.RollbackBetSettlementEventArgs`1.GetBetSettlementRollback(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> implementation representing the received bet settlement rollback message translated to the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of which to translate the message or a null reference to translate the message
            to languages specified in the configuration</param>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> implementation representing the received bet settlement rollback message translated to the specified languages</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs">
            <summary>
            Event arguments for the snapshot complete message received via session message manager
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs._messageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs._feedMessage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs._interest">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session which received the message
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed message to the one dispatched to the user</param>
            <param name="feedMessage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message received from the feed</param>
            <param name="interest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session which received the message</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs.GetSnapshotCompleted">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> implementation representing the received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> representing the received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.SnapshotCompleteEventArgs.GetMessageInterest">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> from which session came the snapshot_complete message
            </summary>
            <returns>Returns the <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> from which session came the snapshot_complete message</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs">
            <summary>
            Event arguments of <see cref="E:Sportradar.OddsFeed.SDK.Api.IUofSession.OnUnparsableMessageReceived"/> event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.MessageType">
            <summary>
            Gets the <see cref="P:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.MessageType"/> member specifying the type of the unparsable message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.Producer">
            <summary>
            Gets the <see cref="T:System.String"/> representation of the producer associated with the unparsable message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.EventId">
            <summary>
            Gets the <see cref="T:System.String"/> representation of the sport event id associated with the unparsable message
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs._rawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.#ctor(Sportradar.OddsFeed.SDK.Common.Enums.MessageType,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs"/> class
            </summary>
            <param name="messageType">The <see cref="P:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.MessageType"/> member specifying the type of the unparsable message.</param>
            <param name="producer">The <see cref="T:System.String"/> representation of the producer associated with the unparsable message.</param>
            <param name="eventId">The <see cref="T:System.String"/> representation of the sport event id associated with the unparsable message.</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.EventArguments.UnparsableMessageEventArgs.GetRawMessage">
            <summary>
            Gets the raw XML message received from the feed
            </summary>
            <returns>Returns the raw XML message received from the feed</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Extended.IUofSdkExtended">
            <summary>
            Represent an extended unified odds sdk
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Extended.IUofSdkExtended.RawFeedMessageReceived">
            <summary>
            Occurs when any feed message arrives
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Extended.IUofSdkExtended.RawApiDataReceived">
            <summary>
            Occurs when data from Sports API arrives
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> implementation acting as an entry point to the odds feed service with possibility to get raw feed and api data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.Log">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.RawFeedMessageReceived">
            <summary>
            Occurs when any feed message arrives
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.RawApiDataReceived">
            <summary>
            Occurs when data from Sports API arrives
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended._dataRouterManager">
            <summary>
            The data router manager
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended._feedMessageReceiver">
            <summary>
            The feed message receiver
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.#ctor(System.IServiceProvider)">
            <summary>
            Constructs a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Extended.IUofSdkExtended"/> class
            </summary>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance including UofSdk configuration</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Extended.IUofSdkExtended" /> instance and disposes resources used by it
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Extended.UofSdkExtended.Open">
            <summary>
            Opens the current feed by opening all created sessions
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.InvalidOperationException">
            The feed is already opened
            or
            The configuration is not valid
            </exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">
            Connection to the REST-ful API failed, Probable Reason={Invalid or expired token}
            or
            Connection to the message broker failed, Probable Reason={Invalid or expired token}
            or
            </exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1">
            <summary>
            Specifies a contract defining events used for user notification
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived type specifying the type of sport associated with <see cref="T:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1"/></typeparam>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnOddsChange">
            <summary>
            Raised when a odds change message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetStop">
            <summary>
            Raised when a bet stop message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetSettlement">
            <summary>
            Raised when a bet settlement message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnRollbackBetSettlement">
            <summary>
            Raised when a rollback bet settlement is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnBetCancel">
            <summary>
            Raised when a bet cancel message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnRollbackBetCancel">
            <summary>
            Raised when a rollback bet cancel message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1.OnFixtureChange">
            <summary>
            Raised when a fixture change message is received from the feed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult">
            <summary>
            Defines possible reasons for connection failure
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.Success">
            <summary>
            Connection was successfully validated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.NoInternetConnection">
            <summary>
            The validation failed because the computer is not connected to the internet
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.ConnectionRefused">
            <summary>
            The validation failed because the target computer refueled the connection
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.Unknown">
            <summary>
            The reason for failed validation is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.Message">
            <summary>
            Gets the message associated with the current instance
            </summary>
            <value>The message.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult"/> class.
            </summary>
            <param name="message">The message associated with the current instance.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator">
            <summary>
            Used to validate connection to the message broker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator._config">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance representing odds configuration
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator._dataFetcher">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> instance used to execute http requests
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator.#ctor(Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator"/> class.
            </summary>
            <param name="config">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance representing odds configuration.</param>
            <param name="dataFetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> instance used to execute http requests</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator.ValidateConnection">
            <summary>
            Validates connection to the message broker
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidationResult"/> enum member specifying the result of validation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator.GetPublicIp">
            <summary>
            Gets the public IP of the current machine
            </summary>
            <returns>A <see cref="T:System.Net.IPAddress"/> representing the IP of the current machine or a null reference or a null reference if public IP could not be determined.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager">
            <summary>
            The implementation of data router manager
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager" />
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.RawApiDataReceived">
            <summary>
            Occurs when data from Sports API arrives
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._executionLog">
            <summary>
            The execution log
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventSummaryProvider">
            <summary>
            The sport event summary provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventFixtureProvider">
            <summary>
            The sport event fixture provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventFixtureChangeFixtureProvider">
            <summary>
            The sport event fixture provider without cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._allTournamentsForAllSportsProvider">
            <summary>
            All tournaments for all sports provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._allSportsProvider">
            <summary>
            All sports provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventsForDateProvider">
            <summary>
            The sport events for date provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventsForTournamentProvider">
            <summary>
            The sport events for tournament provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventsForRaceTournamentProvider">
            <summary>
            The sport events for race schedule tournament provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._playerProfileProvider">
            <summary>
            The player profile provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._competitorProvider">
            <summary>
            The competitor provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._simpleTeamProvider">
            <summary>
            The simple team profile provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._tournamentSeasonsProvider">
            <summary>
            The tournament seasons provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._ongoingSportEventProvider">
            <summary>
            The ongoing sport event provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportCategoriesProvider">
            <summary>
            The ongoing sport event provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._invariantMarketDescriptionsProvider">
            <summary>
            The invariant market descriptions provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._variantMarketDescriptionProvider">
            <summary>
            The variant market description provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._variantDescriptionsProvider">
            <summary>
            The variant descriptions provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._lotteryDrawSummaryProvider">
            <summary>
            The lottery draw summary provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._lotteryDrawFixtureProvider">
            <summary>
            The lottery draw fixture provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._lotteryScheduleProvider">
            <summary>
            The lottery schedule provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._lotteryListProvider">
            <summary>
            The lottery list provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._availableSelectionsProvider">
            <summary>
            The available selections provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._calculateProbabilityProvider">
            <summary>
            The calculate probability provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._calculateProbabilityFilteredProvider">
            <summary>
            The calculate probability provider (filtered)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._fixtureChangesProvider">
            <summary>
            The fixture changes provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._resultChangesProvider">
            <summary>
            The result changes provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._listSportEventProvider">
            <summary>
            The list sport events provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._availableSportTournamentsProvider">
            <summary>
            The list sport available tournaments provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventFixtureForTournamentProvider">
            <summary>
            The sport event fixture provider for when tournamentInfo is returned
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._sportEventFixtureChangeFixtureForTournamentProvider">
            <summary>
            The sport event fixture provider without cache for when tournamentInfo is returned
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._stagePeriodSummaryProvider">
            <summary>
            The stage event period summary provider
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._cacheManager">
            <summary>
            The cache manager
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._isWnsAvailable">
            <summary>
            The is WNS available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.ExceptionHandlingStrategy">
            <summary>
            The exception handling strategy
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager._defaultLocale">
            <summary>
            The exception handling strategy
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IExecutionPathDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VariantDescriptionDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityFilteredProvider,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto}},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager"/> class
            </summary>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="producerManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> used to get WNS producer</param>
            <param name="configuration">An <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used to configured instance</param>
            <param name="sportEventSummaryProvider">The sport event summary provider</param>
            <param name="sportEventFixtureProvider">The sport event fixture provider</param>
            <param name="sportEventFixtureChangeFixtureProvider">The sport event fixture provider without cache</param>
            <param name="allTournamentsForAllSportsProvider">All tournaments for all sports provider</param>
            <param name="allSportsProvider">All sports provider</param>
            <param name="sportEventsForDateProvider">The sport events for date provider</param>
            <param name="sportEventsForTournamentProvider">The sport events for tournament provider</param>
            <param name="playerProfileProvider">The player profile provider</param>
            <param name="competitorProvider">The competitor provider</param>
            <param name="simpleTeamProvider">The simple team provider</param>
            <param name="tournamentSeasonsProvider">The tournament seasons provider</param>
            <param name="ongoingSportEventProvider">The ongoing sport event provider</param>
            <param name="sportCategoriesProvider">The sport categories provider</param>
            <param name="invariantMarketDescriptionsProvider">The invariant market description provider</param>
            <param name="variantMarketDescriptionProvider">The variant market description provider</param>
            <param name="variantDescriptionsProvider">The variant descriptions provider</param>
            <param name="drawSummaryProvider">Lottery draw summary provider</param>
            <param name="drawFixtureProvider">Lottery draw fixture provider</param>
            <param name="lotteryScheduleProvider">Lottery schedule provider (single lottery with schedule)</param>
            <param name="lotteryListProvider">Lottery list provider</param>
            <param name="availableSelectionsProvider">Available selections provider</param>
            <param name="calculateProbabilityProvider">The probability calculation provider</param>
            <param name="calculateProbabilityFilteredProvider">The probability calculation provider (filtered)</param>
            <param name="fixtureChangesProvider">Fixture changes provider</param>
            <param name="resultChangesProvider">Result changes provider</param>
            <param name="listSportEventProvider">List sport events provider</param>
            <param name="availableSportTournamentsProvider">The sports available tournaments provider</param>
            <param name="sportEventFixtureForTournamentProvider">The sport event fixture provider for when tournamentInfo is returned</param>
            <param name="sportEventFixtureChangeFixtureForTournamentProvider">The sport event fixture provider without cache for when tournamentInfo is returned</param>
            <param name="stagePeriodSummaryProvider">Stage period summary provider</param>
            <param name="sportEventsForRaceTournamentProvider">The sport events for race schedule tournament provider</param>
            <remarks>Ignored _availableSelectionsProvider.RawApiDataReceived += OnRawApiDataReceived; _calculateProbabilityProvider.RawApiDataReceived += OnRawApiDataReceived;</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportEventSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions)">
            <summary>
            Get sport event summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <param name="requestOptions">Request options for fetching summaries</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportEventSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get sport event summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportEventFixtureAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get sport event fixture as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="useCachedProvider">Should the cached provider be used</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetAllTournamentsForAllSportAsync(System.Globalization.CultureInfo)">
            <summary>
            Get all tournaments for sport as an asynchronous operation.
            </summary>
            <param name="culture">The culture to be fetched</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportCategoriesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets all categories for sport endpoint
            </summary>
            <param name="id">The id of the sport to be fetched</param>
            <param name="culture">The language to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetAllSportsAsync(System.Globalization.CultureInfo)">
            <summary>
            Get all sports as an asynchronous operation.
            </summary>
            <param name="culture">The culture to be fetched</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetLiveSportEventsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the currently live sport events
            </summary>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId each belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportEventsForDateAsync(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Gets the sport events for specific date
            </summary>
            <param name="date">The date</param>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportEventsForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the sport events for specific tournament (tournament schedule)
            </summary>
            <param name="id">The id of the tournament</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The list of ids of the sport events with the sportId belonging to specified tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get player profile as an asynchronous operation.
            </summary>
            <param name="id">The id of the player</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get competitor as an asynchronous operation
            </summary>
            <param name="id">The id of the competitor</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSeasonsForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get seasons for tournament as an asynchronous operation
            </summary>
            <param name="id">The id of the tournament</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The list of ids of the seasons for specified tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetInformationAboutOngoingEventAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Get information about ongoing event as an asynchronous operation (match timeline)
            </summary>
            <param name="id">The id of the sport event</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The match timeline data object</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetMarketDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the market descriptions (static)
            </summary>
            <param name="culture">The culture to be fetched</param>
            <returns>Task</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetVariantMarketDescriptionAsync(System.Int32,System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the variant market description (dynamic, single)
            </summary>
            <param name="id">The id of the market</param>
            <param name="variant">The variant urn</param>
            <param name="culture">The culture to be fetched</param>
            <returns>Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetVariantDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the variant descriptions (static)
            </summary>
            <param name="culture">The culture to be fetched</param>
            <returns>Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetDrawSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto" /> from lottery draw summary endpoint
            </summary>
            <param name="id">The id of the draw to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>This gets called only if WNS is available</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetDrawFixtureAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto" /> from the lottery draw fixture endpoint
            </summary>
            <param name="id">The id of the draw to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>Task</returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>This gets called only if WNS is available</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetLotteryScheduleAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the lottery draw schedule
            </summary>
            <param name="lotteryId">The id of the lottery</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The lottery with its schedule</returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>This gets called only if WNS is available</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetAllLotteriesAsync(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the list of available lotteries
            </summary>
            <param name="culture">The culture to be fetched</param>
            <param name="ignoreFail">if the fail should be ignored - when user does not have access</param>
            <returns>The list of combination of id of the lottery and associated sport id</returns>
            <remarks>This gets called only if WNS is available</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetAvailableSelectionsAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Get available selections as an asynchronous operation.
            </summary>
            <param name="id">The id of the event</param>
            <returns>The available selections for event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetListOfSportEventsAsync(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of almost all events we are offering prematch odds for.
            </summary>
            <param name="startIndex">Starting record (this is an index, not time)</param>
            <param name="limit">How many records to return (max: 1000)</param>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetSportAvailableTournamentsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all the available tournaments for a specific sport
            </summary>
            <param name="sportId">The specific sport id</param>
            <param name="culture">The culture</param>
            <returns>The list of the available tournament ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetFixtureChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">The culture to be fetched</param>
            <returns>The list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetResultChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">The culture to be fetched</param>
            <returns>The list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.DataRouterManager.GetPeriodSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem,System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Common.Urn},System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Get stage event period summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <param name="competitorIds">The list of competitor ids to fetch the results for</param>
            <param name="periods">The list of period ids to fetch the results for</param>
            <returns>Task</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> which uses the HTTP requests to fetch the requested data
            </summary>
            <seealso cref="T:System.MarshalByRefObject" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.SdkHttpClient">
            <summary>
            A sdk wrapper around <see cref="T:System.Net.Http.HttpClient"/> used to invoke HTTP requests
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.ResponseHeaders">
            <summary>
            Gets the response headers
            </summary>
            <value>The response headers</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.response},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher"/> class
            </summary>
            <param name="sdkHttpClient">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient"/> used to invoke HTTP requests</param>
            <param name="responseDeserializer">The deserializer for unexpected response</param>
            <param name="connectionFailureLimit">Indicates the limit of consecutive request failures, after which it goes in "blocking mode"</param>
            <param name="connectionFailureTimeout">indicates the timeout after which comes out of "blocking mode" (in seconds)</param>
            <param name="saveResponseHeader">Indicates if the response header should be obtained</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.GetDataAsync(System.Uri)">
            <summary>
            Asynchronously gets a <see cref="T:System.IO.Stream" /> containing data fetched from the provided <see cref="T:System.Uri" />
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> which, when completed will return a <see cref="T:System.IO.Stream" /> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.GetData(System.Uri)">
            <summary>
            Gets a <see cref="T:System.IO.Stream" /> containing data fetched from the provided <see cref="T:System.Uri" />
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> which, when completed will return a <see cref="T:System.IO.Stream" /> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.PostDataAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Asynchronously gets a <see cref="T:System.IO.Stream" /> containing data fetched from the provided <see cref="T:System.Uri" />
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> of the resource to be fetched</param>
            <param name="content">A <see cref="T:System.Net.Http.HttpContent" /> to be posted to the specific <see cref="T:System.Uri" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> which, when successfully completed will return a <see cref="T:System.Net.Http.HttpResponseMessage" /></returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.RecordSuccess">
            <summary>
            Records that the request made was successful
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.RecordFailure">
            <summary>
            Records that the request ended with HttpRequestException or was taking too long and was canceled
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.HttpDataFetcher.ValidateConnection(System.Uri)">
            <summary>
            Validates if the request should be made or too many errors happens and should be omitted
            </summary>
            <param name="uri">The URI of the request to be made</param>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute request due to previous failures.</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher">
            <summary>
            Defines a contract implemented by classes used to obtain <see cref="T:System.IO.Stream"/> instances containing some data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher.GetDataAsync(System.Uri)">
            <summary>
            Asynchronously gets a <see cref="T:System.IO.Stream"/> containing data fetched from the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.IO.Stream"/> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher.GetData(System.Uri)">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing data fetched from the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.IO.Stream"/> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster">
            <summary>
            Defines a contract implemented by classes used POST request to obtain <see cref="T:System.Net.Http.HttpResponseMessage"/> instance containing status code and data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster.PostDataAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Asynchronously gets a <see cref="T:System.Net.Http.HttpResponseMessage"/> as a result of POST request send to the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be send to</param>
            <param name="content">A <see cref="T:System.Net.Http.HttpContent"/> to be posted to the specific <see cref="T:System.Uri"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/> containing status code and data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1">
            <summary>
            Defines a contract implemented by classes used to provide data specified by it's id
            </summary>
            <typeparam name="T">Specifies the type of data returned by this <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/></typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.DataFetcher">
            <summary>
            The data fetcher to make API request
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.RawApiDataReceived">
            <summary>
            Event raised when the data provider receives the api message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.GetDataAsync(System.String)">
            <summary>
            Asynchronously gets a rest response class instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.GetDataAsync(System.String[])">
            <summary>
            Asynchronously gets a rest response class instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo"/>
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.GetData(System.String)">
            <summary>
            Gets a rest response class instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1.GetData(System.String[])">
            <summary>
            Gets a rest response class instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo"/>
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProviderNamed`1">
            <summary>
            Defines a contract implemented by classes used to provide data specified by it's id
            </summary>
            <typeparam name="T">Specifies the type of data returned by this <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/></typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProviderNamed`1.DataProviderName">
            <summary>
            The name of the data provider
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager">
            <summary>
            Defines a contract for classes implementing getting information from UF Sports API
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.RawApiDataReceived">
            <summary>
            Occurs when data from Sports API arrives
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.ExceptionHandlingStrategy">
            <summary>
            The exception handling strategy
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportEventSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> or its derived type from the summary endpoint
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <param name="requestOptions">Request options for fetching summaries</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportEventSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> or its derived type from the summary endpoint
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportEventFixtureAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> from the fixture endpoint
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="useCachedProvider">Should the cached provider be used</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetAllTournamentsForAllSportAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets all tournaments for sport endpoint
            </summary>
            <param name="culture">The culture to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportCategoriesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets all categories for sport endpoint
            </summary>
            <param name="id">The id of the sport to be fetched</param>
            <param name="culture">The language to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetAllSportsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets all available sports endpoint
            </summary>
            <param name="culture">The culture to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetLiveSportEventsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the currently live sport events
            </summary>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId each belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportEventsForDateAsync(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Gets the sport events for specific date
            </summary>
            <param name="date">The date</param>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportEventsForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the sport events for specific tournament
            </summary>
            <param name="id">The id of the tournament</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The list of ids of the sport events with the sportId belonging to specified tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the player profile endpoint
            </summary>
            <param name="id">The id of the player</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the competitor endpoint
            </summary>
            <param name="id">The id of the competitor</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSeasonsForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the seasons for tournament
            </summary>
            <param name="id">The id of the tournament</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The list of ids of the seasons for specified tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetInformationAboutOngoingEventAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the information about ongoing sport event (timeline)
            </summary>
            <param name="id">The id of the sport event</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The match timeline data object</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetMarketDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the market descriptions (static list of market descriptions)
            </summary>
            <param name="culture">The culture to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetVariantMarketDescriptionAsync(System.Int32,System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the variant market description (dynamic - single - variant market description)
            </summary>
            <param name="id">The id of the market</param>
            <param name="variant">The variant urn</param>
            <param name="culture">The culture to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetVariantDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the variant descriptions (static list of variant descriptions)
            </summary>
            <param name="culture">The culture to be fetched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetDrawSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto"/> from lottery draw summary endpoint
            </summary>
            <param name="id">The id of the draw to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetDrawFixtureAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto"/> from the lottery draw fixture endpoint
            </summary>
            <param name="id">The id of the draw to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetLotteryScheduleAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Gets the lottery draw schedule
            </summary>
            <param name="lotteryId">The id of the lottery</param>
            <param name="culture">The culture to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <returns>The lottery with its schedule</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetAllLotteriesAsync(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets the list of available lotteries
            </summary>
            <param name="culture">The culture to be fetched</param>
            <param name="ignoreFail">if the fail should be ignored - when user does not have access</param>
            <returns>The list of combination of id of the lottery and associated sport id</returns>
            <remarks>This gets called only if WNS is available</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetAvailableSelectionsAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets the available selections for event
            </summary>
            <param name="id">The id of the event</param>
            <returns>The available selections for event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.CalculateProbabilityAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Gets the probability calculation for the specified selections
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be calculated</param>
            <returns>The probability calculation for the specified selections</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.CalculateProbabilityFilteredAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Gets the probability calculation for the specified selections (filtered)
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be calculated</param>
            <returns>The probability calculation for the specified selections</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetFixtureChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">The culture to be fetched</param>
            <returns>The list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetListOfSportEventsAsync(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of almost all events we are offering prematch odds for
            </summary>
            <param name="startIndex">Starting record (this is an index, not time)</param>
            <param name="limit">How many records to return (max: 1000)</param>
            <param name="culture">The culture</param>
            <returns>The list of the sport event ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetSportAvailableTournamentsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all the available tournaments for a specific sport
            </summary>
            <param name="sportId">The specific sport id</param>
            <param name="culture">The culture</param>
            <returns>The list of the available tournament ids with the sportId it belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetResultChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">The culture to be fetched</param>
            <returns>The list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager.GetPeriodSummaryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem,System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Common.Urn},System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Get stage event period summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="requester">The cache item which invoked request</param>
            <param name="competitorIds">The list of competitor ids to fetch the results for</param>
            <param name="periods">The list of period ids to fetch the results for</param>
            <returns>The periods summary or null if not found</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher">
            <summary>
            An implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> and <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster"/> which uses the HTTP requests to fetch or post the requested data. All request are logged.
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" />
            <remarks>ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF - the levels are defined in order of increasing priority</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.response},Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher"/> class.
            </summary>
            <param name="sdkHttpClient">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient"/> used to invoke HTTP requests</param>
            <param name="responseDeserializer">The deserializer for unexpected response</param>
            <param name="logger">Logger to log rest requests</param>
            <param name="connectionFailureLimit">Indicates the limit of consecutive request failures, after which it goes in "blocking mode"</param>
            <param name="connectionFailureTimeout">indicates the timeout after which comes out of "blocking mode" (in seconds)</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher.GetDataAsync(System.Uri)">
            <summary>
            Asynchronously gets a <see cref="T:System.IO.Stream" /> containing data fetched from the provided <see cref="T:System.Uri" />
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> which, when completed will return a <see cref="T:System.IO.Stream" /> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher.GetData(System.Uri)">
            <summary>
            Gets a <see cref="T:System.IO.Stream" /> containing data fetched from the provided <see cref="T:System.Uri" />
            </summary>
            <param name="uri">The <see cref="T:System.Uri" /> of the resource to be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> which, when completed will return a <see cref="T:System.IO.Stream" /> containing fetched data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcher.PostDataAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Asynchronously gets a <see cref="T:System.IO.Stream"/> containing data fetched from the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be fetched</param>
            <param name="content">A <see cref="T:System.Net.Http.HttpContent"/> to be posted to the specific <see cref="T:System.Uri"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when successfully completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/></returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherFastFailing">
            <summary>
            A implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> and <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster"/> which uses the HTTP requests to fetch or post the requested data. All request are logged.
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" />
            <remarks>ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF - the levels are defined in order of increasing priority</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherFastFailing.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClientFastFailing,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.response},Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherRecovery"/> class.
            </summary>
            <param name="sdkHttpClient">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClientFastFailing"/> used to invoke HTTP requests</param>
            <param name="responseDeserializer">The deserializer for unexpected response</param>
            <param name="logger">Logger to log rest requests</param>
            <param name="connectionFailureLimit">Indicates the limit of consecutive request failures, after which it goes in "blocking mode"</param>
            <param name="connectionFailureTimeout">indicates the timeout after which comes out of "blocking mode" (in seconds)</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherRecovery">
            <summary>
            A implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> and <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster"/> which uses the HTTP requests to fetch or post the requested data. All request are logged.
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" />
            <remarks>ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF - the levels are defined in order of increasing priority</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherRecovery.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClientRecovery,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.response},Microsoft.Extensions.Logging.ILogger,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.LogHttpDataFetcherRecovery"/> class.
            </summary>
            <param name="sdkHttpClient">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClientRecovery"/> used to invoke HTTP requests</param>
            <param name="responseDeserializer">The deserializer for unexpected response</param>
            <param name="logger">Logger to log rest requests</param>
            <param name="connectionFailureLimit">Indicates the limit of consecutive request failures, after which it goes in "blocking mode"</param>
            <param name="connectionFailureTimeout">indicates the timeout after which comes out of "blocking mode" (in seconds)</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.DefaultRequestHeaders">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.GetAsync(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.SendRequestAsync(System.Net.Http.HttpRequestMessage)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.DeleteAsync(System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.SdkHttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Authentication.AuthenticationClient">
            <summary>
            Requests an OAuth access token using a client-assertion JWT token.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Authentication.AuthenticationClient.RequestAccessTokenAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs the OAuth token request using a client-assertion JWT token.
            Returns the access_token string from the JSON response.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Authentication.AuthenticationDelegatingHandler">
            <summary>
            Ensures each request carries an access token from IAuthenticationCache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Authentication.IJsonWebTokenFactory.CreateJsonWebToken">
            <summary>
            Creates a JSON Web Token (JWT) using the provided authentication configuration.
            </summary>
            <returns>JSON Web Token (JWT) as a string</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.BookmakerDetailsFetcher">
            <summary>
            Class used to get the bookmaker details
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.BookmakerDetailsFetcher.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.BookmakerDetailsFetcher"/> class
            </summary>
            <param name="bookmakerDetailsProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to get <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.BookmakerDetailsFetcher.WhoAmIAsync">
            <summary>
            Asynchronously gets and returns <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails"/> containing details information about the bookmaker
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager">
            <summary>
            Class CacheManager
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager.RegisterCache(System.String,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache)">
            <summary>
            Registers the cache in the CacheManager
            </summary>
            <param name="name">The name of the instance</param>
            <param name="cache">The cache to be registered</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager.SaveDto(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be add</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager.SaveDtoAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be add</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager.RemoveCacheItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType,System.String)">
            <summary>
            Remove the cache item in the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="cacheItemType">Type of the cache item</param>
            <param name="sender">The name of the cache or class that is initiating request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheStore`1.Add(`0,System.Object,Microsoft.Extensions.Caching.Memory.CacheItemPriority)">
            <summary>
            Adds object value to the cache with key identifier. Also adds key to list of keys. Sets absolute and/or sliding expiration based on CacheStore settings.
            </summary>
            <param name="key">Key identifier for new cache item</param>
            <param name="value">Value of the cache item</param>
            <param name="cacheItemPriority">Priority of the cache item</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager">
            <summary>
            Defines a contract for classes implementing manager for caches
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager.RegisterCache(System.String,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache)">
            <summary>
            Registers the cache in the CacheManager
            </summary>
            <param name="name">The name of the instance</param>
            <param name="cache">The cache to be registered</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager.SaveDto(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be add</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager.SaveDtoAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be add</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager.RemoveCacheItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType,System.String)">
            <summary>
            Remove the cache item in the all registered caches
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="cacheItemType">Type of the cache item</param>
            <param name="sender">The name of the cache or class that is initiating request</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Add(`0,System.Object,Microsoft.Extensions.Caching.Memory.CacheItemPriority)">
            <summary>
            Adds object value to the cache with key identifier. Also adds key to list of keys. Sets absolute and/or sliding expiration based on CacheStore settings.
            </summary>
            <param name="key">Key identifier for new cache item</param>
            <param name="value">Value of the cache item</param>
            <param name="cacheItemPriority">Priority of the cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Get(`0)">
            <summary>
            Get cache item for specified key if exists
            </summary>
            <param name="key">The key to search cache item</param>
            <returns>Returns the cache item for specified key if exists</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Remove(`0)">
            <summary>
            Remove cache item from cache if exists
            </summary>
            <param name="key">The key to remove from cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.GetKeys">
            <summary>
            Get the list of all the keys
            </summary>
            <returns>The list of all the keys</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.GetValues">
            <summary>
            Get all the cache items in the cache
            </summary>
            <returns>All the cache items in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Contains(`0)">
            <summary>
            Check if the key exists in the cache store
            </summary>
            <param name="key">The key to be checked</param>
            <returns>True if cache item with specified key exists, otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Count">
            <summary>
            Get the count of stored keys
            </summary>
            <returns>The count of stored keys</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1.Size">
            <summary>
            Returns estimated cache size if tracking is enabled and sizes are specified, otherwise it will return store key count
            </summary>
            <returns>Estimated cache size if tracking is enabled and sizes are specified, otherwise it will return store key count</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache">
            <summary>
            Defines a contract implemented by classes used to cache <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue"/> instances
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache.CacheName">
            <summary>
            The name of the cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache.GetAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Gets the match status translations asynchronously for specified cultures
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue"/> to retrieve</param>
            <param name="cultures">The cultures to be used to retrieve descriptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache.IsValueDefined(System.Int32)">
            <summary>
            Determines whether specified id is present int the cache
            </summary>
            <param name="id">The id to be tested.</param>
            <returns>True if the value is defined in the cache; False otherwise.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache">
            <summary>
            Defines a contract implemented by classes used to cache market descriptions, for single variant market description)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache.GetMarketDescriptionAsync(System.Int32,System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance for the market specified by <c>id</c> and <c>specifiers</c>
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variant">A <see cref="T:System.String" /> specifying market variant or a null reference if market is invariant</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying required translations</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async retrieval operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache.UpdateCacheItem(System.Int32,System.String)">
            <summary>
            Updates cache item fetch time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache">
            <summary>
            Defines a contract implemented by classes used to cache market descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache.GetMarketDescriptionAsync(System.Int32,System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance for the market specified by <c>id</c> and <c>specifiers</c>
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variant">A <see cref="T:System.String" /> specifying market variant or a null reference if market is invariant</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying required translations</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async retrieval operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache.LoadMarketDescriptionsAsync">
            <summary>
            Asynchronously loads the list of market descriptions from the Sports API
            </summary>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache.UpdateCacheItem(System.Int32,System.String)">
            <summary>
            Updates cache item fetch time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache">
            <summary>
            Defines a contract implemented by classes used to cache <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> instances
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache.CacheName">
            <summary>
            The name of the cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache.GetNamedValue(System.Int32)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> specified by it's id
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> to retrieve</param>
            <returns>The specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache.IsValueDefined(System.Int32)">
            <summary>
            Determines whether specified id is present int the cache
            </summary>
            <param name="id">The id to be tested</param>
            <returns>True if the value is defined in the cache; False otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache">
            <summary>
                An <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache" /> implementation used to store market descriptors for invariant markets (static)
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._cacheStore">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1" /> used to store market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._dataRouterManager">
            <summary>
                The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager" /> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._mappingValidatorFactory">
            <summary>
                The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory" /> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator" /> instances for market mappings
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._timer">
            <summary>
                The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer" /> instance used to periodically fetch market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._prefetchLanguages">
            <summary>
                A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying the languages for which the data should be pre-fetched
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._fetchedLanguages">
            <summary>
                A <see cref="T:System.Collections.Generic.IList`1" /> used to store languages for which the data was already fetched (at least once)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._semaphore">
            <summary>
                An <see cref="T:System.Threading.SemaphoreSlim" /> instance to synchronize access from multiple threads
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._semaphoreCacheMerge">
            <summary>
                A <see cref="T:System.Threading.SemaphoreSlim" /> used to synchronize merging on cache item
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._hasTimerElapsedOnce">
            <summary>
                Value indicating whether at least one fetch caused by the timer was done.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache._isDisposed">
            <summary>
                Value indicating whether the current instance was already disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache" /> class
            </summary>
            <param name="cacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1" /> used to store market descriptors</param>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager" /> used to fetch data</param>
            <param name="mappingValidatorFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory" /> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator" /> instances for market mappings</param>
            <param name="timer">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer" /> instance used to periodically fetch market descriptors</param>
            <param name="prefetchLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying the languages for which the data should be pre-fetched</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager" /> used to interact among caches</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.OnTimerElapsed(System.Object,System.EventArgs)">
            <summary>
                Invoked when the <c>_timer</c> ticks in order to periodically fetch market descriptions for configured languages
            </summary>
            <param name="sender">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer" /> raising the event</param>
            <param name="e">An <see cref="T:System.EventArgs" /> instance containing the event data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.GetItemFromCache(System.Int32)">
            <summary>
                Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem" /> specified by it's id from the local cache
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem" /> to get</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem" /> retrieved from the cache or a null reference if item is not found</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.GetMarketInternalAsync(System.Int32,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem" /> specified by it's id. If the item is not found in local cache, all items for specified
            language are fetched from the service and stored/merged into the local cache.
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem" /> instance to get</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying the languages which the returned item must contain</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">An error occurred while accessing the remote party</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">An error occurred while deserializing fetched data</exception>
            <exception cref="T:System.FormatException">An error occurred while mapping deserialized entities</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.Dispose(System.Boolean)">
            <summary>
                Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.GetMarketDescriptionAsync(System.Int32,System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
                Gets the market descriptor
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variant">A <see cref="T:System.String" /> specifying market variant or a null reference if market is invariant</param>
            <param name="cultures">The cultures</param>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.LoadMarketDescriptionsAsync">
            <summary>
                Asynchronously loads the list of market descriptions from the Sports API
            </summary>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.UpdateCacheItem(System.Int32,System.String)">
            <summary>
                Updates cache item fetch time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.SetDtoTypes">
            <summary>
                Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType" /> in this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
                Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.CacheDeleteItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
                Deletes the item from cache
            </summary>
            <param name="id">A string representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
                Does item exist in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.CacheHasItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
                Does item exist in the cache
            </summary>
            <param name="id">A string representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache.MergeAsync(System.Globalization.CultureInfo,System.Collections.Generic.IReadOnlyCollection{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto})">
            <summary>
                Merges the provided descriptions with those found in cache
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the <c>descriptions</c></param>
            <param name="descriptions">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> containing market descriptions in specified language</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache">
            <summary>
            Defines a contract implemented by caches used to store information about player and competitor profiles
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> representing the profile for the specified player
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if player profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> is missing name for specified cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetCompetitorProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> representing the profile for the specified competitor
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the competitor for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if competitor profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> is missing name for specified cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetPlayerNamesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets a list of player name values
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if player profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> is missing name for specified cultures</param>
            <returns>A dictionary of name values for all cultures (if missing returns empty string)</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetCompetitorNamesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets a list of competitor name values
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the competitor for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if competitor profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> is missing name for specified cultures</param>
            <returns>A dictionary of name values for all cultures (if missing returns empty string)</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetPlayerNameAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Asynchronously gets a player name in specified culture
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player for which to get the profile</param>
            <param name="wantedLanguage">A specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if player profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> is missing name for specified cultures</param>
            <returns>A player name in specified culture</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache.GetCompetitorNameAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Asynchronously gets a competitor name in specified culture
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the competitor for which to get the profile</param>
            <param name="wantedLanguage">A specifying language in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if competitor profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> is missing name for specified cultures</param>
            <returns>A competitor name in specified culture</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache">
            <summary>
            Defines a contract for classes implementing caching functionally
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.RegisteredDtoTypes">
            <summary>
            Gets the registered dto types
            </summary>
            <value>The registered dto types</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheName">
            <summary>
            Gets the name of the cache instance
            </summary>
            <value>The name</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.RegisterCache">
            <summary>
            Registers the cache in the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in the this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheAddDtoAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the cache
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be added</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheDeleteItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A string representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache.CacheHasItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A string representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache">
            <summary>
            Defines a contract implemented by classes used to cache Sport data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache.GetSportsAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> representing sport hierarchies for all sports supported by the feed.
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache.GetSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> instance representing the sport hierarchy for the specified sport
            </summary>
            <param name="id">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache.GetCategoryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData"/> instance
            </summary>
            <param name="id">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the category</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache.GetSportForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing sport associated with the tournament specified by it's id. Note that the hierarchy will only contain the
            specified tournament and it's parent category not all categories / tournaments in the hierarchy
            </summary>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the tournament</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache.LoadAllTournamentsForAllSportsAsync">
            <summary>
            Loads all tournaments for all sports asynchronous.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache">
            <summary>
            Defines a contract implemented by classes used to cache instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.GetEventCacheItem(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance representing cached sport event data
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport event which cached representation to return</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance representing cached sport event data</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.GetEventIdsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronous gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing id's of sport events, which belong to the specified tournament
            </summary>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the tournament identifier</param>
            <param name="culture">The culture to fetch the data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.GetEventIdsAsync(System.Nullable{System.DateTime},System.Globalization.CultureInfo)">
            <summary>
            Asynchronous gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing id's of sport events, which are scheduled for specified date
            </summary>
            <param name="date">The date for which to retrieve the schedule, or a null reference to get currently live events</param>
            <param name="culture">The culture to fetch the data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.GetActiveTournamentsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of active <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> that are cached (once schedule is loaded)</remarks>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.AddFixtureTimestamp(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Adds fixture timestamp to cache so that the next fixture calls for the event goes through non-cached fixture provider
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.DeleteSportEventsFromCache(System.DateTime)">
            <summary>
            Deletes the sport events from cache which are scheduled before specific DateTime
            </summary>
            <param name="before">The scheduled DateTime used to delete sport events from cache</param>
            <returns>Number of deleted items</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache.GetEventSportIdAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronous gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of event's sport id
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event identifier</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory">
            <summary>
            Defines a contract implemented by classes used to built <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the provided sport event id
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport event</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto,System.Globalization.CultureInfo)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> instance
            </summary>
            <param name="eventSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> instance containing basic sport event info</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo"/> of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> data</param>
            <returns>A new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instance
            </summary>
            <param name="fixture">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instance containing fixture (pre-match) related sport event info</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo"/> of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> data</param>
            <returns>A new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the provided exportable cache item
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> representing the sport event</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.Get(System.Object)">
            <summary>
            Gets a derived <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the cache object
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the cache</param>
            <returns>A new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory.GetFixtureTimestampCache">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache fixture timestamps
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache fixture timestamps</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache">
            <summary>
            Defines a contract implemented by classes used to cache <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache.GetSportEventStatusAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets the cached <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> instance associated with the sport event specified by the <c>eventId</c>"/>. If the instance associated
            with the specified event is not found, it tries to obtain it via API, if still cant, a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> instance indicating a 'not started' event is returned.
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport event whose status to get</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> representing the status of the specified sport event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache.AddEventIdForTimelineIgnore(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.Type)">
            <summary>
            Adds the event identifier for timeline ignore
            </summary>
            <param name="eventId">The event identifier.</param>
            <param name="producerId">The producer identifier.</param>
            <param name="messageType">Type of the feed message.</param>
            <remarks>Used for BetPal events to have ignored timeline event status cache</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache">
            <summary>
            Defines a contract implemented by classes used to cache variant descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache.GetVariantDescriptorAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription" /> instance for the variant market specified by <c>id</c>
            </summary>
            <param name="variantId">The variant identifier</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying required translations</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async retrieval operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache.LoadMarketDescriptionsAsync">
            <summary>
            Asynchronously loads the variant list of market descriptions from the Sports API
            </summary>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache">
            <summary>
            A implementation of the interface <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.#ctor(System.String,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto}},Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.Collections.Generic.ICollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> class.
            </summary>
            <param name="cacheName">A name of the cache or the name of the values contained in this cache</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how potential exceptions should be handled</param>
            <param name="dataProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> to retrieve match status descriptions</param>
            <param name="sdkTimer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer"/> to schedule load of initial values</param>
            <param name="cultures">A list of all supported languages</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.FetchAndMerge(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a match stats descriptions specified by the language specified by <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved match statuses</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.GetInternalAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a match status descriptions specified by the language specified by <c>culture</c>
            </summary>
            <param name="cultures">A array of <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved match statuses</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.IsValueDefined(System.Int32)">
            <summary>
            Determines whether specified id is present int the cache
            </summary>
            <param name="id">The id to be tested.</param>
            <returns>True if the value is defined in the cache; False otherwise.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.LocalizedNamedValueCache.GetAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get as an asynchronous operation.
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue" /> to retrieve</param>
            <param name="cultures">The cultures to be used to retrieve descriptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache">
            <summary>
            A default implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache.#ctor(System.String,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto}},Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache"/> class.
            </summary>
            <param name="cacheName">A name of the cache or the name of the values contained in this cache</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how potential exceptions should be handled</param>
            <param name="dataProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to get the named values</param>
            <param name="sdkTimer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer"/> to schedule load of initial values</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache.FetchAndMerge">
            <summary>
            Asynchronously gets a match stats descriptions specified by the language specified by <c>culture</c>
            </summary>
            <returns>A value indicating whether the data was successfully fetched</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache.IsValueDefined(System.Int32)">
            <summary>
            Determines whether specified id is present int the cache
            </summary>
            <param name="id">The id to be tested</param>
            <returns>True if the value is defined in the cache; False otherwise</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValueCache.GetNamedValue(System.Int32)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> specified by it's id
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> to retrieve</param>
            <returns>The specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider">
            <summary>
            A default <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> implementation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider.VoidReasons">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing void reason descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider.BetStopReasons">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing bet stop reason descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider.BettingStatuses">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing betting status descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider.MatchStatuses">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache" /> providing localized(translatable) match status descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.NamedValuesProvider"/> class.
            </summary>
            <param name="voidReasons">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing void reason descriptions.</param>
            <param name="betStopReasons">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing bet stop reason descriptions.</param>
            <param name="bettingStatuses">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache" /> providing betting status descriptions.</param>
            <param name="matchStatuses">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache" /> providing localized(translatable) match status descriptions.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache">
            <summary>
            An <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> implementation using <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> to cache fetched information
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._cache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store fetched information
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._isDisposed">
            <summary>
            Value indicating whether the current instance was already disposed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._fetchedPlayerProfiles">
            <summary>
            The bag of currently fetching player profiles
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._fetchedCompetitorProfiles">
            <summary>
            The bag of currently fetching competitor profiles
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._mergeUrns">
            <summary>
            The bag of currently merging ids
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache._exportSemaphore">
            <summary>
            The semaphore used for export/import operation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache"/> class
            </summary>
            <param name="cache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store fetched information</param>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch data</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to fetch event summary data</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> representing the profile for the specified player
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if player profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> is missing name for specified cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetCompetitorProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> representing the profile for the specified competitor
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the competitor for which to get the profile</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages in which the information should be available</param>
            <param name="fetchIfMissing">Indicated if competitor profile should be fetched when <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> is missing name for specified cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested item was not found in cache and could not be obtained from the API</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetPlayerNamesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetCompetitorNamesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetPlayerNameAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.GetCompetitorNameAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the dto item to cache
            </summary>
            <param name="id">The identifier of the object</param>
            <param name="item">The item</param>
            <param name="culture">The culture</param>
            <param name="dtoType">Type of the dto</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if added, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.ExportAsync">
            <summary>
            Exports current items in the cache
            </summary>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.ImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Imports provided items into the cache
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> to be inserted into the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ProfileCache.CacheStatus">
            <summary>
            Returns current cache status
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing all cache item types in the cache and their counts</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache">
            <summary>
            Class SdkCache
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISdkCache" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache"/> class
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.RegisterCache">
            <summary>
            Registers the cache in <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.CacheManager" />
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> consumed and cached this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheAddDtoAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Adds the item to the cache
            </summary>
            <param name="id">The identifier of the item</param>
            <param name="item">The item to be added</param>
            <param name="culture">The culture of the data-transfer-object</param>
            <param name="dtoType">Type of the dto item</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if is added/updated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exist in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheDeleteItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A string representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheHasItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exist in the cache
            </summary>
            <param name="id">A string representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <summary>
            Asynchronously adds the dto item to cache
            </summary>
            <param name="id">The identifier of the object</param>
            <param name="item">The item to be added</param>
            <param name="culture">The culture of the item</param>
            <param name="dtoType">Type of the dto</param>
            <param name="requester">The cache item which invoked request</param>
            <returns><c>true</c> if added, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SdkCache.LogSavingDtoConflict(Sportradar.OddsFeed.SDK.Common.Urn,System.Type,System.Type)">
            <summary>
            Logs the conflict during saving the Dto instance
            </summary>
            <param name="id">The identifier.</param>
            <param name="expectedType">The expected type.</param>
            <param name="receivedType">Type of the received.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache">
            <summary>
            A cache storing sport, category and tournament related information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._requiredCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying cultures in which the sport data is periodically fetched
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.FetchedCultures">
            <summary>
            The <see cref="T:System.Collections.Generic.ISet`1"/> specifying cultures in which all sport data is currently available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._semaphore">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> implementation to avoid multiple fetches from different threads
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._mergeLock">
            <summary>
            A <see cref="T:System.Object"/> used to synchronize merging on cache item
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.Sports">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> used to cache fetched sports
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.Categories">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> used to cache fetched categories
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._wasDataAutoFetched">
            <summary>
            Value indicating whether the required data was already fetched automatically(by internal timer)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache._isDisposed">
            <summary>
            Value specifying whether the current instance is disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache"/> class
            </summary>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch all required data</param>
            <param name="timer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> instance used to periodically fetch sport related data</param>
            <param name="cultures">A list of <see cref="T:System.Globalization.CultureInfo"/> of the cached data</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> containing also tournament data</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.OnTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Fetches the data for pre-configured languages and merges it to internally used dictionaries. First time the method is invoked it fetches the data only for missing languages.
            On subsequent calls data for all configured languages is fetched and dictionary are cleared before fetched data is added / merged
            </summary>
            <param name="sender">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> invoking the method</param>
            <param name="e">The <see cref="T:System.EventArgs"/> providing additional information about the event which invoked the method</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.FetchAndMergeAll(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Fetches the data for languages specified by <c>cultures</c> and merges / adds it to internally used dictionaries.
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying the languages in which to fetch the data</param>
            <param name="clearExistingData">Value indicating whether the internally used dictionaries should be cleared before fetched data is added</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetSportForTournamentFromCache(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing the parent sport of the tournament specified by <c>tournamentId</c> in the languages specified by <c>cultures</c>, or a null reference
            if the specified sport does not exist, or it(or one of it's children) is not available in one of the requested languages
            </summary>
            <remarks>
            The returned <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> represents a sport with flattened hierarchy information - only one category and one tournament are found in the returned instance.
            </remarks>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the tournament whose parent sport to get</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages to which the sport must be translated</param>
            <param name="fetchTournamentIfMissing">Indicates if the tournament should be fetched if not obtained via all tournaments request</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing the requested sport translated into requested languages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetSportFromCacheAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing the sport specified by <c>id</c> in the languages specified by <c>cultures</c>, or a null reference
            if the specified sport does not exist, or it(or one of it's children) is not available in one of the requested languages
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport to get</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages to which the sport must be translated</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing the requested sport translated into requested languages. </returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.FetchSportCategoriesIfNeededAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Fetch sport categories for sport specified by <c>id</c> in the languages specified by <c>cultures</c> if needed
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the categories must be translated</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetSportsAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> representing sport hierarchies for all sports supported by the feed.
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> instance representing the sport hierarchy for the specified sport
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetCategoryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData"/> instance
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the category</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.GetSportForTournamentAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> representing sport associated with the tournament specified by it's id. Note that the hierarchy will only contain the
            specified tournament and it's parent category not all categories / tournaments in the hierarchy
            </summary>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the tournament whose parent sport should be retrieved</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is returned</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.LoadAllTournamentsForAllSportsAsync">
            <summary>
            Loads all tournaments for all sports asynchronous.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in the this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Purges item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be purged</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.AddCategory(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto,System.Globalization.CultureInfo)">
            <summary>
            Adds the category
            </summary>
            <param name="id">The identifier of the CategoryId or SportId !!!</param>
            <param name="item">The category dto item</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.ExportAsync">
            <summary>
            Exports current items in the cache
            </summary>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.ImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Imports provided items into the cache
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> to be inserted into the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportDataCache.CacheStatus">
            <summary>
            Returns current cache status
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing all cache item types in the cache and their counts</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache">
            <summary>
            A implementation of the interface <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._fetchedDates">
            <summary>
            The list of dates already automatically loaded by the timer
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.Cache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> which will be used to cache the data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._sportEventCacheItemFactory">
            <summary>
            >A instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory"/> used to create new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._cultures">
            <summary>
            The list of all supported <see cref="T:System.Globalization.CultureInfo"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._timer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> instance used to trigger periodic cache refresh-es
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._timerSemaphoreSlim">
            <summary>
            The timer semaphore slim used reduce concurrency within timer calls
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache._isDisposed">
            <summary>
            Value specifying whether the current instance is disposed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.SpecialTournaments">
            <summary>
            The special tournaments, which are not listed on All tournaments list, but are introduced by events on feed messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache"/> class
            </summary>
            <param name="cache">The in-memory cache of sport events</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data</param>
            <param name="sportEventCacheItemFactory">A instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory"/> used to create new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/></param>
            <param name="timer">The timer</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.OnTimerElapsedAsync">
            <summary>
            Invoked when the internally used timer elapses
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetScheduleAsync(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a sport event schedule specified by the <c>id</c> in the language specified by <c>culture</c>
            </summary>
            <param name="date">The value specifying which schedule to get</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved schedule</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetEventCacheItem(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance representing cached sport event data
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport event which cached representation to return</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance representing cached sport event data</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetEventIdsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronous gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing id's of sport events, which belong to the specified tournament
            </summary>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the tournament identifier</param>
            <param name="culture">The culture to fetch the data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetEventIdsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronous gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing id's of sport events, which belong to the specified tournament
            </summary>
            <param name="tournamentId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the tournament identifier</param>
            <param name="cultures">A list of <see cref="T:System.Globalization.CultureInfo"/> used to fetch schedules</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetEventIdsAsync(System.Nullable{System.DateTime},System.Globalization.CultureInfo)">
            <summary>
            Asynchronous gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing id's of sport events, which are scheduled for specified date
            </summary>
            <param name="date">The date for which to retrieve the schedule, or a null reference to get currently live events</param>
            <param name="culture">The culture to fetch the data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.AddFixtureTimestamp(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Adds fixture timestamp to cache so that the next fixture calls for the event goes through non-cached fixture provider
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetActiveTournamentsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of active <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> that are cached (once schedule is loaded)</remarks>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.DeleteSportEventsFromCache(System.DateTime)">
            <summary>
            Deletes the sport events from cache which are scheduled before specific DateTime
            </summary>
            <param name="before">The scheduled DateTime used to delete sport events from cache</param>
            <returns>Number of deleted items</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.GetEventSportIdAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronous gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of event's sport id
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event identifier</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Purges item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport event which to be deleted</param>
            <param name="cacheItemType">The cache item type to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.ExportAsync">
            <summary>
            Exports current items in the cache
            </summary>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.ImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Imports provided items into the cache
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> to be inserted into the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCache.CacheStatus">
            <summary>
            Returns current cache status
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing all cache item types in the cache and their counts</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory">
            <summary>
            A factory used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCacheItemFactory" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory._dataRouterManager">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch sport event summary and fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory._semaphorePool">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool"/> instance to be used by instances constructed by this factory
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory._defaultCulture">
            <summary>
            A <see cref="T:System.Globalization.CultureInfo"/> specifying the default culture of the built cache items
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory._fixtureTimestampCacheStore">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> which will be used to cache the sport events fixture timestamps
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory"/> class.
            </summary>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool"/> instance to be used by instances constructed by this factory</param>
            <param name="configuration">A configuration to get default language</param>
            <param name="fixtureTimestampCacheStore">The in-memory cache of sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance from the provided sport event id
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport event</param>
            <returns>A new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto,System.Globalization.CultureInfo)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance
            </summary>
            <param name="eventSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance containing basic sport event info</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> data</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto" /> instance
            </summary>
            <param name="fixture">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto" /> instance containing fixture (pre-match) related sport event info</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> data</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase)">
            <summary>
            Builds a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance from the provided exportable cache item
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> representing the sport event</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.Get(System.Object)">
            <summary>
            Gets a derived <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance from the cache object
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance from the cache</param>
            <returns>A new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventCacheItemFactory.GetFixtureTimestampCache">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache fixture timestamps
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache fixture timestamps</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache">
            <summary>
                Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache" />
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache._fetchSemaphore">
            <summary>
                A <see cref="T:System.Threading.SemaphoreSlim" /> used to synchronize multi-threaded fetching
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache._lock">
            <summary>
                A <see cref="T:System.Object" /> to ensure thread safety when adding items to cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache._mapperFactory">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to created
                <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache._sportEventStatusCache">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1" /> used to cache <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus" /> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache._isDisposed">
            <summary>
                Value indicating whether the current instance was already disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache" /> class
            </summary>
            <param name="sportEventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1" /> used to cache
                <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem" /> instances</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to created
                <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instances</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache" /> used to cache <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /></param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager" /> used to interact among caches</param>
            <param name="ignoreEventsTimelineCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1" /> used to cache event ids for which the SES from
                timeline endpoint should be ignored</param>
            <param name="config">The configuration to get IgnoreBetPalTimelineSportEventStatus</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.GetSportEventStatusAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
                Gets the cached <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem" /> instance associated with the sport event specified by the
                <c>eventId</c>. If the instance associated
                with the specified event is not found, it tries to obtain it via API, if still cant, a
                <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem" /> instance indicating a 'not started' event is returned.
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the sport event whose status to get</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem" /> representing the status of the specified sport event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.AddEventIdForTimelineIgnore(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType" /> in this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Purges item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be purged</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.AddSportEventStatus(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem,System.String,System.String)">
            <summary>
                Adds the sport event status to the internal cache
            </summary>
            <param name="eventId">The eventId of the sport event status to be cached</param>
            <param name="sportEventStatus">The sport event status to be cached</param>
            <param name="statusOnEvent">The sport event status received directly on event level</param>
            <param name="source">The source of the SES</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusCache.Dispose(System.Boolean)">
            <summary>
                Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
                unmanaged resources</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusMapperBase">
            <summary>
            Class SportEventStatusMapperBase with method for creating base <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.SportEventStatusMapperBase.CreateNotStarted">
            <summary>
            Creates a base <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> instance
            </summary>
            <returns>Returns base <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache" /> implementation used to store <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription"/> for variant markets (static)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._cacheStore">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store variant descriptions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._mappingValidatorFactory">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> instances for market mappings
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._timer">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> instance used to periodically fetch market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._prefetchLanguages">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages for which the data should be pre-fetched
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._fetchedLanguages">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> used to store languages for which the data was already fetched (al least once)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._semaphore">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> instance to synchronize access from multiple threads
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._semaphoreCacheMerge">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> used to synchronize merging on cache item
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._hasTimerElapsedOnce">
            <summary>
            Value indicating whether at least one fetch caused by the timer was done.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache._isDisposed">
            <summary>
            Value indicating whether the current instance was already disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.InvariantMarketDescriptionCache"/> class
            </summary>
            <param name="cacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store market descriptors</param>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch data</param>
            <param name="mappingValidatorFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> instances for market mappings</param>
            <param name="timer">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> instance used to periodically fetch market descriptors</param>
            <param name="prefetchLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages for which the data should be pre-fetched</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.OnTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Invoked when the <c>_timer</c> ticks in order to periodically fetch market descriptions for configured languages
            </summary>
            <param name="sender">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> raising the event</param>
            <param name="e">A <see cref="T:System.EventArgs"/> instance containing the event data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.GetItemFromCache(System.String)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> specified by it's id from the local cache
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> to get</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> retrieved from the cache or a null reference if item is not found</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.GetVariantDescriptionInternalAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> specified by it's id. If the item is not found in local cache, all items for specified
            language are fetched from the service and stored/merged into the local cache.
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> instance to get</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages which the returned item must contain</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">An error occurred while accessing the remote party</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">An error occurred while deserializing fetched data</exception>
            <exception cref="T:System.FormatException">An error occurred while mapping deserialized entities</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.GetVariantDescriptorAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Gets the market descriptor.
            </summary>
            <param name="variantId">The variant identifier</param>
            <param name="cultures">The cultures</param>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.LoadMarketDescriptionsAsync">
            <summary>
            Asynchronously loads the list of market descriptions from the Sports API
            </summary>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in the this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.CacheDeleteItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A string representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.CacheHasItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exists in the cache
            </summary>
            <param name="id">A string representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantDescriptionListCache.MergeAsync(System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VariantDescriptionDto})">
            <summary>
            Merges the provided descriptions with those found in cache
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the <c>descriptions</c></param>
            <param name="descriptions">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing market descriptions in specified language</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache" /> implementation used to store market descriptors for variant markets (single - dynamic)
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._cache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain data via REST request
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._mappingValidatorFactory">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> instances for market mappings
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._semaphore">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> instance to synchronize access from multiple threads
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._semaphoreCacheMerge">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> used to synchronize merging on cache item
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache._isDisposed">
            <summary>
            Value indicating whether the current instance was already disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String},Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache"/> class
            </summary>
            <param name="cache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to store market descriptors</param>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch data</param>
            <param name="mappingValidatorFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> instances for market mappings</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="loggerFactory">The logger factory for creating Cache and Execution logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.SetDtoTypes">
            <summary>
            Set the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType"/> in this cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.GenerateCacheKey(System.Int64,System.String)">
            <summary>
            Gets a cache key generated from the provided <c>id</c> and <c>variant</c>
            </summary>
            <param name="marketId">The id of the market</param>
            <param name="variant">The market variant</param>
            <returns>a cache key generated from the provided <c>id</c> and <c>variant</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.CacheHasItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exist in the cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.CacheHasItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Does item exist in the cache
            </summary>
            <param name="id">A string representing the id of the item to be checked</param>
            <param name="cacheItemType">A cache item type</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.UpdateCacheItem(System.Int32,System.String)">
            <summary>
            Updates cache item fetch time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.CacheDeleteItem(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.CacheDeleteItem(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType)">
            <summary>
            Deletes the item from cache
            </summary>
            <param name="id">A string representing the id of the item in the cache to be deleted</param>
            <param name="cacheItemType">A cache item type</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.CacheAddDtoItemAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Object,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.MergeAsync(System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto)">
            <summary>
            Merges the provided descriptions with those found in cache
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the <c>descriptions</c></param>
            <param name="mdDto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> containing market description in specified language</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.GetItemFromCache(System.Int32,System.String)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> specified by it's id from the local cache
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> to get</param>
            <param name="variant">A <see cref="T:System.String"/> specifying the variation of the associated market descriptor</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> retrieved from the cache or a null reference if item is not found</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.GetMarketDescriptionAsync(System.Int32,System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance for the market specified by <c>id</c> and <c>specifiers</c>
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variant">A <see cref="T:System.String" /> specifying market variant or a null reference if market is invariant</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying required translations</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async retrieval operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.GetMarketInternalAsync(System.Int32,System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/>. If the item is not found in local cache, it is fetched and stored / merged into cache
            </summary>
            <param name="id">The id of the market associated with the requested descriptor</param>
            <param name="variant">A variation of the market associated with the requested descriptor</param>
            <param name="wantedLanguages">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages which the returned item must contain</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">An error occurred while accessing the remote party</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">An error occurred while deserializing fetched data</exception>
            <exception cref="T:System.FormatException">An error occurred while mapping deserialized entities</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Caching.VariantMarketDescriptionCache.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor"/> implementation used to control the flow of messages throw
            message processors it control.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor.ExecutionLog">
            <summary>
            The execution log
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor.ProcessorId">
            <summary>
            The processor identifier
            </summary>
            <value>The processor identifier.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor.#ctor(System.Collections.Generic.List{Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor"/> class
            </summary>
            <param name="processors">The list of processors.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.CompositeMessageProcessor.ProcessMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Processes and dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance to be processed</param>
            <param name="interest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.BookmakerDetailsProvider">
            <summary>
            A provider for bookmaker details
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.BookmakerDetailsProvider.LoadBookmakerDetails(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration)">
            <summary>
            Loads the current config object with bookmaker details data retrieved from the Sports API
            </summary>
            <exception cref="T:System.InvalidOperationException">The configuration could not be loaded or the configuration does not contain the requested section</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.BookmakerDetailsProvider.LoadWhoamiData(System.String,System.Boolean,System.Boolean,Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment,Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration)">
            <summary>
            Loads the whoami endpoint data
            </summary>
            <param name="hostName">The host name</param>
            <param name="useSsl">Value indicating whether a secure connection should be attempted</param>
            <param name="rethrow">Value indicating whether caught exceptions should be rethrown</param>
            <param name="environment">Get data for selected environment</param>
            <param name="config">The config to populate the received bookmaker details</param>
            <returns>True if data was successfully retrieved. False otherwise. May throw <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilder.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilder"/> class
            </summary>
            <param name="configuration">Current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration"/></param>
            <param name="sectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="environment">An <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/> specifying the selected environment</param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details</param>
            <param name="producersProvider">Provider for available producers</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1">
            <summary>
            Represents a base class for configuration builders
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SectionProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> containing data read from the config file
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1"/> class
            </summary>
            <param name="configuration">Current <see cref="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.UofConfiguration"/></param>
            <param name="sectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details (can be null)</param>
            <param name="producersProvider">Provider for available producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.LoadFromConfigFile">
            <summary>
            Sets the general configuration properties to values read from configuration file. Only value which can be set
            through <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1" /> methods are set. Any values already set by methods on the current instance are overridden
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SetDesiredLanguages(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Sets the languages in which translatable data is available
            </summary>
            <param name="cultures">A list of languages in which translatable data should be available</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SetDefaultLanguage(System.Globalization.CultureInfo)">
            <summary>
            Sets the default language in which translatable data is available
            </summary>
            <param name="culture">A default language in which translatable data should be available</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SetExceptionHandlingStrategy(Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Sets the value specifying how exceptions thrown in the SDK are handled.
            </summary>
            <param name="strategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy" /> enum specifying how exceptions thrown in the SDK are handled</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SetNodeId(System.Int32)">
            <summary>
            Sets the node id used to separate between SDK instances associated with the same account
            </summary>
            <param name="nodeId">The node id to be set</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder" /> derived instance used to set general configuration properties</returns>
            <remarks>Use only positive numbers; negative are reserved for internal use.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.SetDisabledProducers(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Specifies the producers which should be disabled (i.e. no recovery, ...)
            </summary>
            <param name="producerIds">The list of producer ids specifying the producers which should be disabled</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilder" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration" /> instance
            </summary>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration" /> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1.PreBuildCheck">
            <summary>
            Check the properties values before build the configuration and throws an exception is invalid values are found
            </summary>
            <exception cref="T:System.InvalidOperationException">The value of one or more properties is not correct</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder">
            <summary>
            Class CustomConfigurationBuilder
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder"/> class.
            </summary>
            <param name="configuration">Current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration"/></param>
            <param name="sectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details</param>
            <param name="producersProvider">Provider for available producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetMessagingHost(System.String)">
            <summary>
            Sets the host name of the AMQP server
            </summary>
            <param name="host">The host name of the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetMessagingPort(System.Int32)">
            <summary>
            Sets the port used to connect to the AMQP server
            </summary>
            <param name="port">The port used to connect to the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetMessagingUsername(System.String)">
            <summary>
            Sets the username used to authenticate with the messaging server
            </summary>
            <param name="username">The username used to authenticate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetMessagingPassword(System.String)">
            <summary>
            Sets the password used to authenticate with the messaging server
            </summary>
            <param name="password">The password used to authenticate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetVirtualHost(System.String)">
            <summary>
            Sets the virtual host name of the AMQP server
            </summary>
            <param name="virtualHost">The virtual host name of the AMQP server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.UseMessagingSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with the messaging server
            </summary>
            <param name="useMessagingSsl">The value specifying whether SSL should be used to communicate with the messaging server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetClientAuthenticationHost(System.String)">
            <summary>
            Sets the host name of the authentication server.
            </summary>
            <param name="authenticationHost">Host name of the authentication server.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
            <exception cref="T:System.ArgumentException">Thrown when client authentication is not configured</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetClientAuthenticationPort(System.Int32)">
            <summary>
            Sets the port used to connect to the authentication server.
            </summary>
            <param name="port">Port used to connect to the authentication server.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
            <exception cref="T:System.ArgumentException">Thrown when client authentication is not configured</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetClientAuthenticationUseSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with the authentication server
            </summary>
            <param name="useSsl">The value specifying whether SSL should be used to communicate with the authentication server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
            <exception cref="T:System.ArgumentException">Thrown when client authentication is not configured</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.SetApiHost(System.String)">
            <summary>
            Set the host name of the Sports API server
            </summary>
            <param name="apiHost">The host name of the Sports API server</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.UseApiSsl(System.Boolean)">
            <summary>
            Sets the value specifying whether SSL should be used to communicate with Sports API
            </summary>
            <param name="useApiSsl">The value specifying whether SSL should be used to communicate with Sports API</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.LoadFromConfigFile">
            <summary>
            Sets the custom configuration properties to values read from the configuration file.
            Only value which can be set through <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder" /> methods are set.
            Any values already set by methods on the current instance are overridden.
            </summary>
            <returns>Returns <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ICustomConfigurationBuilder"/> instance used to set custom config values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.PreBuildCheck">
            <summary>
            Check the properties values before build the configuration and throws an exception if invalid values are found
            </summary>
            <exception cref="T:System.InvalidOperationException">The value of one or more properties is not correct</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.CustomConfigurationBuilder.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration" /> instance
            </summary>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager">
            <summary>
            Class EnvironmentManager
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.DefaultMqHostPort">
            <summary>
            The default MQ host port (using TLS)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.EnvironmentSettings">
            <summary>
            Gets the list of all possible environment settings (Custom is not listed, as user should manually put MQ and API host)
            </summary>
            <value>The list of environment settings.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.GetSetting(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Gets the MQ and API settings for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/>
            </summary>
            <param name="environment">The environment</param>
            <returns>The MQ and API settings for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.GetMqHost(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Gets the MQ host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/>
            </summary>
            <param name="environment">The environment</param>
            <returns>The MQ host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.GetApiHost(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Gets the API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/>
            </summary>
            <param name="environment">The environment</param>
            <returns>The API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.GetUsageHost(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Gets the API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/>
            </summary>
            <param name="environment">The environment</param>
            <returns>The API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentManager.GetAuthenticationHost(Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment)">
            <summary>
            Gets the Authentication API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/>
            </summary>
            <param name="environment">The environment</param>
            <returns>The Authentication API host for specified <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSelector">
            <summary>
            Class EnvironmentSelector
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSelector.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider,Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData)">
            <summary>
            Constructs a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSelector"/> class
            </summary>
            <param name="configuration">Current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration"/></param>
            <param name="sectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details</param>
            <param name="producersProvider">Provider for available producers</param>
            <param name="privateKeyJwtData">JWT private key data.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting">
            <summary>
            Class EnvironmentSetting
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting.Environment">
            <summary>
            Get the environment.
            </summary>
            <value>The environment</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting.MqHost">
            <summary>
            Get the rabbit host address
            </summary>
            <value>The rabbit host address</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting.ApiHost">
            <summary>
            Get the API host.
            </summary>
            <value>The API host.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting.OnlySsl">
            <summary>
            Get a value indicating whether only SSL is supported on the endpoint or also non-ssl
            </summary>
            <value><c>true</c> if [only SSL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.EnvironmentSetting.EnvironmentRetryList">
            <summary>
            Get the environment retry list.
            </summary>
            <value>The environment retry list.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.GenerateClassWithDataFactoryExtension">
            <summary>
            Factory extension for DI
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.GenerateClassWithDataFactoryExtension.AddSdkHttpClientFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add sdk http client factory to service collection
            </summary>
            <param name="services">Base service collection</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider.LoadBookmakerDetails(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration)">
            <summary>
            Loads the current config object with bookmaker details data retrieved from the Sports API
            </summary>
            <exception cref="T:System.InvalidOperationException">The configuration could not be loaded or the configuration does not contain the requested section</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider">
            <summary>
            Defines a type used to retrieve available producers on api
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider.GetProducers">
            <summary>
            Gets the available producers from api
            </summary>
            <returns>A list of <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.AccessToken">
            <summary>
            Gets the access token
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitHost">
            <summary>
            Gets the URL of the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitVirtualHost">
            <summary>
            Gets the name of the virtual host configured on the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitPort">
            <summary>
            Gets the port used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitUsername">
            <summary>
            Gets the username used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitPassword">
            <summary>
            Gets the password used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.RabbitUseSsl">
            <summary>
            Gets a value indicating whether a secure connection to the messaging broker should be used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.ApiHost">
            <summary>
            Gets the URL of the API host
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.ApiUseSsl">
            <summary>
            Gets a value indicating whether a secure connection to the Sports API should be used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.DefaultLanguage">
            <summary>
            Gets the 2-letter ISO string of default language
            </summary>
            <example>https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</example>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.Languages">
            <summary>
            Gets the comma delimited string of all wanted languages
            </summary>
            <example>https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</example>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.ExceptionHandlingStrategy">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.ExceptionHandlingStrategy"/> enum member specifying how to handle exceptions thrown to outside callers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.DisabledProducers">
            <summary>
            Gets the comma delimited list of ids of disabled producers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.NodeId">
            <summary>
            Gets the node id
            </summary>
            <remarks>MTS customer must set this value! Use only positive numbers; negative are reserved for internal use.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection.Environment">
            <summary>
            Gets a value indicating to which unified feed environment sdk should connect
            </summary>
            <remarks>Dependent on the other configuration, it may set MQ and API host address and port</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider">
            <summary>
            Represents a contract implemented by classes used to provide access to <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider.GetSection">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/>
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></returns>
            <exception cref="T:System.InvalidOperationException">The configuration could not be loaded or the configuration does not contain the requested section</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The section in the configuration file is not valid</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt">
            <summary>
            Concrete implementation of Private Key JWT authentication configuration.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.#ctor(System.String,System.String,Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey)">
            <summary>
            Internal constructor; use the builder to create instances.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.SigningKeyId">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.ClientId">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.PrivateKey">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Host">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Port">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.UseSsl">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.SetHost(System.String)">
            <summary>
            Sets the authentication server host.
            Intended to be called by your custom configuration builder.
            </summary>
            <param name="host">The host name.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.SetPort(System.Int32)">
            <summary>
            Sets the authentication server port.
            Intended to be called by your custom configuration builder.
            </summary>
            <param name="port">Port in range 1..65535.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.SetUseSsl(System.Boolean)">
            <summary>
            Sets whether SSL (HTTPS) should be used.
            Intended to be called by your custom configuration builder.
            </summary>
            <param name="useSsl">True to use HTTPS.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/> to provide a sanitized string representation (sensitive values masked).
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Builder">
            <summary>
            Builder for <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt" /> instances.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Builder.SetSigningKeyId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Builder.SetClientId(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Builder.SetPrivateKey(Microsoft.IdentityModel.Tokens.AsymmetricSecurityKey)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.PrivateKeyJwt.Builder.Build">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider">
            <summary>
            Class ProducersProvider
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider._dataProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to fetch producers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider._config">
            <summary>
            The configuration
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Messages.Rest.producers},Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider"/> class
            </summary>
            <param name="dataProvider">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to fetch producers</param>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used to get properties to build <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider.GetProducers">
            <summary>
            Gets the available producers from api
            </summary>
            <returns>A list of <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.ProducersProvider.MapProducers(Sportradar.OddsFeed.SDK.Messages.Rest.producers)">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers" /> instance to the <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers" /> instance to be mapped (converted)</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers" /></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1">
            <summary>
            Class RecoveryConfigurationBuilder
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.ConfigurationBuilderBase`1" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider)">
            <summary>
            Construct RecoveryConfigurationBuilder
            </summary>
            <param name="configuration">Current <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/></param>
            <param name="sectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details</param>
            <param name="producersProvider">Provider for available producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetInactivitySeconds(System.Int32)">
            <summary>
            Sets the max time window between two consecutive alive messages before the associated producer is marked as down
            </summary>
            <param name="inactivitySeconds">the max time window between two consecutive alive messages</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1" /> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetMaxRecoveryTime(System.Int32)">
            <summary>
            Sets the maximum time in seconds in which recovery must be completed (minimum 600 seconds)
            </summary>
            <param name="maxRecoveryTimeInSeconds">Maximum recovery time in seconds</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1" /> instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetMinIntervalBetweenRecoveryRequests(System.Int32)">
            <summary>
            Sets the minimal interval between recovery requests initiated by alive messages (between 20 and 180 seconds)
            </summary>
            <param name="minIntervalBetweenRecoveryRequests">The minimal interval between recovery requests initiated by alive messages (seconds)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IRecoveryConfigurationBuilder`1" /> instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetHttpClientTimeout(System.Int32)">
            <summary>
            Sets the timeout for HTTP responses for this instance of the sdk
            </summary>
            <param name="httpClientTimeout">The timeout for HTTP responses</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetHttpClientRecoveryTimeout(System.Int32)">
            <summary>
            Sets the timeout for recovery HTTP responses for this instance of the sdk
            </summary>
            <param name="httpClientRecoveryTimeout">The timeout for recovery HTTP responses</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IConfigurationBuilderBase`1"/> derived instance used to set general configuration properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetHttpClientFastFailingTimeout(System.Int32)">
            <summary>
            Sets a timeout for HttpClient for fast api request (in seconds).
            </summary>
            <param name="httpClientFastFailingTimeout">The timeout to be set (in seconds)</param>
            <remarks>Between 1 and 30 (default 5s) - set before connection is made.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetMaxConnectionsPerServer(System.Int32)">
            <summary>
            Sets the maximum number of concurrent connections (per server endpoint) allowed by an HttpClient object. (default: int.Max)
            </summary>
            <param name="maxConnectionsPerServer">The new maximum number of concurrent connections (per server endpoint) allowed by an HttpClient object.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetSportEventStatusCacheTimeout(System.Int32)">
            <summary>
            Sets the sport event status cache timeout
            </summary>
            <param name="timeoutInMinutes">The timeout.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetProfileCacheTimeout(System.Int32)">
            <summary>
            Sets the profile cache timeout.
            </summary>
            <param name="timeoutInHours">The timeout.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetVariantMarketDescriptionCacheTimeout(System.Int32)">
            <summary>
            Sets the variant market description cache timeout
            </summary>
            <param name="timeoutInHours">The timeout.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetIgnoreBetPalTimelineSportEventStatusCacheTimeout(System.Int32)">
            <summary>
            Sets the ignore BetPal timeline sport event status cache timeout. How long should the event id from BetPal be cached. SportEventStatus from timeline endpoint for these events are ignored.
            </summary>
            <param name="timeoutInHours">The timeout.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetIgnoreBetPalTimelineSportEventStatus(System.Boolean)">
            <summary>
            Sets the value indicating whether to ignore sport event status from timeline endpoint for sport events on BetPal producer
            </summary>
            <param name="ignore">if set to <c>true</c> ignore</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetRabbitConnectionTimeout(System.Int32)">
            <summary>
            Sets the rabbit timeout setting for connection attempts (in seconds).
            </summary>
            <param name="rabbitConnectionTimeout">The rabbit timeout setting for connection attempts (in seconds)</param>
            <remarks>Between 10 and 120 (default 30s) - set before connection is made</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.RecoveryConfigurationBuilder`1.SetRabbitHeartbeat(System.Int32)">
            <summary>
            Sets a heartbeat timeout to use when negotiating with the rabbit server (in seconds).
            </summary>
            <param name="heartbeatInSeconds">The heartbeat timeout to use when negotiating with the rabbit server (in seconds).</param>
            <remarks>Between 10 and 180 (default 60s) - set before connection is made</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession">
            <summary>
            System session handles system feed messages
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedSystemSession" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._log">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._isOpened">
            <summary>
            A value used to store information whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> is opened
            0 indicate closed, 1 indicate opened
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._isDisposed">
            <summary>
            Value indicating whether the current instance was/is disposed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._messageReceiver">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> used to provide feed messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._messageValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator"/> instance used to validate received messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession._messageDataExtractor">
            <summary>
            The A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor"/> instance used to extract basic message data from messages which could not be deserialized
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.IsOpened">
            <summary>
            Gets a value indicating whether the current instance is opened
            </summary>
            <value><c>true</c> if this instance is opened; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.AliveReceived">
            <summary>
            Raised when a alive message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.UnparsableMessageReceived">
            <summary>
            Raised when a message which cannot be parsed is received
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator,Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> class
            </summary>
            <param name="messageReceiver"> A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> used to provide feed messages</param>
            <param name="messageValidator">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator"/> instance used to validate received messages</param>
            <param name="messageDataExtractor">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor"/> instance used to extract basic message data from messages which could not be deserialized</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.ProcessMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.Byte[])">
            <summary>
            Processes the received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
            <param name="feedMessage">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> to process.</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.OnFeedMessageReceived(System.Object,Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs)">
            <summary>
            Handles the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageReceived"/> event
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the instance raising the event</param>
            <param name="e">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs"/> instance containing event information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.OnFeedMessageDeserializationFailed(System.Object,Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs)">
            <summary>
            Handles the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageDeserializationFailed" /> event.
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the instance raising the event.</param>
            <param name="eventArgs">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.Dispatch``1(System.EventHandler{``0},``0,System.String)">
            <summary>
            Raises the specified event
            </summary>
            <typeparam name="T">The type of the event arguments</typeparam>
            <param name="handler">A <see cref="T:System.EventHandler`1"/> representing the event</param>
            <param name="eventArgs">Event arguments</param>
            <param name="eventName">The name of the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.Open">
            <summary>
            Opens the current instance
            </summary>
            <exception cref="T:System.InvalidOperationException">Current FeedSystemSession is already opened</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.FeedSystemSession.Close">
            <summary>
            Closes the current instance
            </summary>
            <exception cref="T:System.InvalidOperationException">Current FeedSystemSession is already closed</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter">
            <summary>
            Class TokenSetter
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter._uofConfigurationSectionProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> instance used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IBookmakerDetailsProvider,Sportradar.OddsFeed.SDK.Api.Internal.Config.IProducersProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter"/> class
            </summary>
            <param name="uofConfigurationSectionProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> instance used to access <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></param>
            <param name="bookmakerDetailsProvider">Provider for bookmaker details</param>
            <param name="producersProvider">Provider for available producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter.SetAccessToken(System.String)">
            <summary>
            Sets the access token used to access feed resources (AMQP broker, Sports API, ...)
            </summary>
            <param name="accessToken">The access token used to access feed resources</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector" /> instance allowing the selection of target environment</returns>
            <exception cref="T:System.ArgumentException">Value cannot be a null reference or empty string - accessToken</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter.SetClientAuthentication(Sportradar.OddsFeed.SDK.Api.Config.UofClientAuthentication.IPrivateKeyJwtData)">
            <summary>
            Sets the authentication configuration used to access feed resources.
            </summary>
            <param name="privateKeyJwtData">The authentication configuration containing credentials.</param>
            <returns>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.ITokenSetter"/> instance allowing chaining of calls.
            </returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter.SetAccessTokenFromConfigFile">
            <summary>
            Sets the access token used to access feed resources (AMQP broker, Sports API, ...) to value read from a configuration file
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IEnvironmentSelector" /> instance allowing the selection of target environment</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.TokenSetter.BuildFromConfigFile">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration">
            <summary>
            Represents SDK configuration
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection">
            <summary>
            Represents Odds Feed SDK <see cref="T:System.Configuration.ConfigurationSection"/> read from app.config file
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.SectionName">
            <summary>
            The name of the section element in the app.config file
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.AccessToken">
            <summary>
            Gets the access token
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.DefaultLanguage">
            <summary>
            Gets the 2-letter ISO string of default language
            </summary>
            <example>https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</example>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.Languages">
            <summary>
            Gets the comma delimited string of all wanted languages
            </summary>
            <example>https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</example>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitHost">
            <summary>
            Gets the URL of the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitPort">
            <summary>
            Gets the port used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitVirtualHost">
            <summary>
            Gets the name of the virtual host configured on the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitUseSsl">
            <summary>
            Gets a value indicating whether a secure connection to the messaging broker should be used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitUsername">
            <summary>
            Gets the username used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.RabbitPassword">
            <summary>
            Gets the password used to connect to the messaging broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.ApiHost">
            <summary>
            Gets the URL of the API host
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.ApiUseSsl">
            <summary>
            Gets a value indicating whether a secure connection to the Sports API should be used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.ExceptionHandlingStrategy">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.ExceptionHandlingStrategy"/> enum member specifying how to handle exceptions thrown to outside callers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.DisabledProducers">
            <summary>
            Gets the comma delimited list of ids of disabled producers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.NodeId">
            <summary>
            Gets the node id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.Environment">
            <summary>
            Gets a value indicating to which unified feed environment sdk should connect
            </summary>
            <remarks>Dependent on the other configuration, it may set MQ and API host address and port</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection.GetSection">
            <summary>
            Retrieves the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection"/> from the app.config file
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSection"/> instance loaded from config file</returns>
            <exception cref="T:System.InvalidOperationException">The configuration could not be loaded or the configuration does not contain the requested section</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The section in the configuration file is not valid</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSectionProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSectionProvider"/> provider which obtains the section from the app.config file
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSectionProvider._syncLock">
            <summary>
            A <see cref="T:System.Object"/> used to ensure thread safety
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSectionProvider._section">
            <summary>
            The loaded section.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfigurationSectionProvider.GetSection">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/>
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.IUofConfigurationSection"/></returns>
            <exception cref="T:System.InvalidOperationException">The configuration could not be loaded or the configuration does not contain the requested section</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The section in the configuration file is not valid</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore">
            <summary>
            A store used to manage <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore._typeMapper">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityTypeMapper"/> used to determine the SDK type used to represent a specific sport entity
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore._dispatchers">
            <summary>
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> containing added dispatchers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore._syncLock">
            <summary>
            A <see cref="T:System.Object"/> used to enforce multi-thread safety
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore._cachedHierarchies">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing already loaded type hierarchies
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.IEntityTypeMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore"/> class.
            </summary>
            <param name="typeMapper">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityTypeMapper"/> used to determine the SDK type used to represent a specific sport entity.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore.OnDispatcherClosed(System.Object,System.EventArgs)">
            <summary>
            Invoked when a dispatcher handled by the current store is closed
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the dispatcher being disposed.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> providing further information about the event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore.GetHierarchy(System.Type)">
            <summary>
            Gets the hierarchy of the interfaces implemented by the type represented by the provided <see cref="T:System.Type"/> instance
            </summary>
            <param name="type">The <see cref="T:System.Type"/> representing the type for which to get the hierarchy.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> representing the implemented interfaces</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore.Add(Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal)">
            <summary>
            Adds the provided <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> to the current store.
            </summary>
            <param name="dispatcher">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> instance to be added.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.DispatcherStore.Get(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> instance associated with the sport entity associated with provided <c>id</c> and <c>sportId</c>
            </summary>
            <param name="id">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the identifier of the sport entity for which to get the dispatcher</param>
            <param name="sportId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport to which the sport entity belongs to.</param>
            <returns>IEntityDispatcherInternal used to dispatch the instance specified by <c>id</c> and <c>sportId</c>.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1">
            <summary>
            Class used to dispatch SDK non-global messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1._isOpened">
            <summary>
            A value used to store information whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> is opened
            0 indicate closed, 1 indicate opened
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.MessageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map the feed messages to messages used by the SDK
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DefaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages as specified in the configuration
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.IsOpened">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> is opened
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnOddsChange">
            <summary>
            Raised when a odds change message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnBetStop">
            <summary>
            Raised when a bet stop message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnBetSettlement">
            <summary>
            Raised when a bet settlement message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnRollbackBetSettlement">
            <summary>
            Raised when a rollback bet settlement is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnBetCancel">
            <summary>
            Raised when a bet cancel message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnRollbackBetCancel">
            <summary>
            Raised when a rollback bet cancel message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnFixtureChange">
            <summary>
            Raised when a fixture change message is received from the feed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1"/> class
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map the feed messages to messages used by the SDK</param>
            <param name="defaultCultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages as specified in the configuration</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.Dispatch(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.Byte[])">
            <summary>
            Dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
            <param name="message"></param>
            <param name="rawMessage"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchOddsChange(Sportradar.OddsFeed.SDK.Messages.Feed.odds_change,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchBetStop(Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchBetSettlement(Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchRollbackBetSettlement(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchBetCancel(Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchRollbackBetCancel(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.DispatchFixtureChange(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change,System.Byte[])">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> message to dispatch</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnOpening">
            <summary>
            When overridden in derived class, it executes steps needed when opening the instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.OnClosing">
            <summary>
            When overridden in derived class, it executes steps needed when closing the instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.Open">
            <summary>
            Opens the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance so it will start delivering messages from the feed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> so it will no longer deliver messages
            </summary>
            <remarks>The <see cref="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.Close"/> method does not dispose resources associated with the current instance so the instance can be re-opened by calling the <see cref="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1.Open"/> method. In order to dispose resources associated
            with the current instance you must call the <see cref="M:System.IDisposable.Dispose"/> method. Once the instance is disposed it can no longer be opened.</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.EntityTypeMapper">
            <summary>
            A class used to determine the <see cref="T:System.Type"/> of the SDK entity used to represent a specific sport entity
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.EntityTypeMapper.Map(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32)">
            <summary>
            Returns a <see cref="T:System.Type" /> used to represent the specified entity
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing the entity identifier.</param>
            <param name="sportId">A <see cref="T:System.Int32" /> representing the id of the sport to which the entity belongs</param>
            <returns>A <see cref="T:System.Type" /> used to represent the specified entity.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ExecutionPath">
            <summary>
            Defines the execution priority of a request.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ExecutionPath.TimeCritical">
            <summary>
            A time-critical request that should fail fast if not processed quickly.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.ExecutionPath.NonTimeCritical">
            <summary>
            A non-time-critical request that can tolerate longer delays.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory">
            <summary>
            Represents a factory used to construct <see cref="T:RabbitMQ.Client.IModel"/> instances representing channels to the broker
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.ConnectionFactory">
            <summary>
            The <see cref="T:RabbitMQ.Client.IConnectionFactory"/> used to construct connections to the broker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory._lock">
            <summary>
            The object used to ensure thread safety
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory._disposed">
            <summary>
            Value indicating whether the current instance has been disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory"/> class.
            </summary>
            <param name="connectionFactory">The connection factory.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.CreateChannel">
            <summary>
            Constructs and returns a <see cref="T:RabbitMQ.Client.IModel" /> representing a channel used to communicate with the broker
            </summary>
            <returns>a <see cref="T:RabbitMQ.Client.IModel" /> representing a channel used to communicate with the broker</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.IsConnectionOpen">
            <summary>
            Checks if the connection is opened
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.ConnectionCreated">
            <summary>
            DateTime when connection was created
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ChannelFactory.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory">
            <summary>
            A <see cref="T:RabbitMQ.Client.IConnectionFactory"/> implementations which properly configures it self before first <see cref="T:RabbitMQ.Client.IConnection"/> is created
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory._connectionSingleton">
            <summary>
            A singleton instance of <see cref="T:RabbitMQ.Client.IConnection"/> class created by current factory.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory._syncLock">
            <summary>
            A <see cref="T:System.Object"/> used to ensure thread safety when creating the connection singleton
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory._disposed">
            <summary>
            Value indicating whether the current instance has been disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory.CreateAndConfigureConnectionFactory">
            <summary>
            Configures the current <see cref="T:RabbitMQ.Client.IConnectionFactory"/> based on config options read from <c>_config</c> field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory.CreateConnection">
            <summary>
            Create a connection to the specified endpoint or return existing one
            </summary>
            <exception cref="T:RabbitMQ.Client.Exceptions.BrokerUnreachableException">When the configured host name was not reachable</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory">
            <summary>
            Represents a factory used to construct Rabbit MQ channels / models
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory.ConnectionFactory">
            <summary>
            The <see cref="T:RabbitMQ.Client.IConnectionFactory"/> used to construct connections to the broker
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory.CreateChannel">
            <summary>
            Constructs and returns a <see cref="T:RabbitMQ.Client.IModel"/> representing a channel used to communicate with the broker
            </summary>
            <returns>a <see cref="T:RabbitMQ.Client.IModel"/> representing a channel used to communicate with the broker</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory.ResetConnection">
            <summary>
            Resets the connection.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory.IsConnectionOpen">
            <summary>
            Checks if the connection is opened
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory.ConnectionCreated">
            <summary>
            DateTime when connection was created
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver">
            <summary>
            Defines a contract implemented by classes capable of delivering messages from the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.IsOpened">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> is currently opened;
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageReceived">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> receives the message
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageDeserializationFailed">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> could not deserialize the received message
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.RawFeedMessageReceived">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> receives the message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.Open(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Opens the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> instance so it starts receiving messages
            </summary>
            <param name="routingKeys">A list of strings representing routing key</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session using this instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> instance so it will no longer receive messages
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel">
            <summary>
            Represents a contract implemented by classes used to connect to rabbit mq broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel.IsOpened">
            <summary>
            Gets a value indicating whether the current channel is opened
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel.Open(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Opens the current channel and binds the created queue to provided routing keys
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session using this instance</param>
            <param name="routingKeys">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the routing keys of the constructed queue.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel.Close">
            <summary>
            Closes the current channel
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel.Received">
            <summary>
            Occurs when the current channel received the data
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser">
            <summary>
            Defines a contract implemented by classes used to parse the RabbitMq routing key in order to
            determine the sportId of the sport associated with the message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser.GetSportId(System.String,System.String)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the sportId by parsing the provided <c>routingKey</c>
            </summary>
            <param name="routingKey">The routing key specified by the feed</param>
            <param name="messageTypeName">The type name of the received message</param>
            <returns>The sportId obtained by parsing the provided <c>routingKey</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser.TryGetSportId(System.String,System.String,Sportradar.OddsFeed.SDK.Common.Urn@)">
            <summary>
            Tries to get a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing of the sportId by parsing the provided <c>routingKey</c>
            </summary>
            <param name="routingKey">The routing key specified by the feed</param>
            <param name="messageTypeName">The type name of the received message</param>
            <param name="sportId">If the method returned true the sportId; Otherwise undefined</param>
            <returns>True if sportId could be retrieved from <c>routingKey</c>; Otherwise false</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel">
            <summary>
            A class used to connect to the RabbitMQ broker
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.ExecutionLog">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._channelFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory"/> used to construct the <see cref="T:RabbitMQ.Client.IModel"/> representing Rabbit MQ channel
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._channel">
            <summary>
            The <see cref="T:RabbitMQ.Client.IModel"/> representing the channel to the broker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._consumer">
            <summary>
            The <see cref="T:RabbitMQ.Client.Events.EventingBasicConsumer"/> used to consume the broker data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._isOpened">
            <summary>
            Value indicating whether the current instance is opened. 1 means opened, 0 means closed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.IsOpened">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> is currently opened;
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.Received">
            <summary>
            Occurs when the current channel received the data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._timer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> instance used to trigger periodic connection test
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel._timerSemaphoreSlim">
            <summary>
            The timer semaphore slim used reduce concurrency within timer calls
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel"/> class.
            </summary>
            <param name="channelFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IChannelFactory"/> used to construct the <see cref="T:RabbitMQ.Client.IModel"/> representing Rabbit MQ channel.</param>
            <param name="timer">Timer used to check if there is connection</param>
            <param name="maxTimeBetweenMessages">Max timeout between messages to check if connection is ok</param>
            <param name="accessToken">The access token to filter from logs</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.Open(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Opens the current channel and binds the created queue to provided routing keys
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session using this instance</param>
            <param name="routingKeys">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the routing keys of the constructed queue.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.Close">
            <summary>
            Closes the current channel
            </summary>
            <exception cref="T:System.InvalidOperationException">The instance is already closed</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.ConsumerOnDataReceived(System.Object,RabbitMQ.Client.Events.BasicDeliverEventArgs)">
            <summary>
            Handles the <see cref="E:RabbitMQ.Client.Events.EventingBasicConsumer.Received"/> event
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> representation of the instance raising the event.</param>
            <param name="basicDeliverEventArgs">The <see cref="T:RabbitMQ.Client.Events.BasicDeliverEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqChannel.OnTimerElapsedAsync">
            <summary>
            Invoked when the internally used timer elapses
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> implementation using RabbitMQ broker to deliver feed messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.FeedLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for feed traffic logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._interest">
            <summary>
            The message interest associated by the session using this instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._channel">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel"/> representing a channel to the RabbitMQ broker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._deserializer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1"/> instance used for deserialization of messages received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._keyParser">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser"/> used to parse the rabbit's routing key
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._producerManager">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> used to get <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.IsOpened">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> is currently opened;
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.FeedMessageReceived">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> receives the message
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.FeedMessageDeserializationFailed">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> could not deserialize the received message
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.RawFeedMessageReceived">
            <summary>
            Event raised when the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver" /> receives the message
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver._useReplay">
            <summary>
            Is connected to the replay server
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage},Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> class
            </summary>
            <param name="channel">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRabbitMqChannel"/> representing a channel to the RabbitMQ broker</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1"/> instance used for deserialization of messages received from the feed</param>
            <param name="keyParser">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser"/> used to parse the rabbit's routing key</param>
            <param name="producerManager">An <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> used to get <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></param>
            <param name="configuration">Used to check if it should connect to the replay server</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.Consumer_OnReceived(System.Object,RabbitMQ.Client.Events.BasicDeliverEventArgs)">
            <summary>
            Handles the message received event
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> representation of the event sender</param>
            <param name="eventArgs">A <see cref="T:RabbitMQ.Client.Events.BasicDeliverEventArgs"/> containing event information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.RaiseDeserializationFailed(System.Byte[])">
            <summary>
            Raises the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.FeedMessageDeserializationFailed"/> event
            </summary>
            <param name="data">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing raw data of the message that could not be deserialized</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.RaiseMessageReceived(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.Byte[])">
            <summary>
            Raises the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.FeedMessageReceived"/> event
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance used to construct the event args</param>
            <param name="rawMessage">A raw message received from the broker</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.Open(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Opens the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> instance so it starts receiving messages
            </summary>
            <param name="routingKeys">A list of routing keys specifying which messages should the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> deliver</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session using this instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RabbitMqMessageReceiver"/> so it will no longer receive messages
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IRoutingKeyParser"/> implementation which uses regex.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser.GroupName">
            <summary>
            Name of the regex group containing sport id
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser.SportIdPrefix">
            <summary>
            A prefix of the sport id
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser.RegexPatternFormat">
            <summary>
            Regex pattern used to parse the routing key
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser.GetSportId(System.String,System.String)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the sportId by parsing the provided <c>routingKey</c>
            </summary>
            <param name="routingKey">The routing key specified by the feed</param>
            <param name="messageTypeName">The type name of the received message</param>
            <returns>The sportId obtained by parsing the provided <c>routingKey</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.RegexRoutingKeyParser.TryGetSportId(System.String,System.String,Sportradar.OddsFeed.SDK.Common.Urn@)">
            <summary>
            Tries to get a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing of the sportId by parsing the provided <c>routingKey</c>
            </summary>
            <param name="routingKey">The routing key specified by the feed</param>
            <param name="messageTypeName">The type name of the received message</param>
            <param name="sportId">If the method returned true the sportId; Otherwise undefined</param>
            <returns>True if sportId could be retrieved from <c>routingKey</c>; Otherwise false</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Handlers.HttpRequestDecoratorHandler">
            <summary>
            Custom message handler which adds a unique request id to the request headers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Handlers.HttpRequestDecoratorHandler.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.IRequestDecorator,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructor
            </summary>
            <param name="requestDecorator">Http request decorator</param>
            <param name="innerHandler">Inner message handler</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Handlers.HttpRequestDecoratorHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Adds a unique request id to the request headers
            </summary>
            <param name="request">request being sent</param>
            <param name="cancellationToken">cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore">
            <summary>
            Defines a contract implemented by classes used to hold user registered dispatchers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore.Add(Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal)">
            <summary>
            Adds the provided <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> to the current store.
            </summary>
            <param name="dispatcher">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> instance to be added.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore.Get(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal"/> instance associated with the sport entity associated with provided <c>id</c> and <c>sportId</c>
            </summary>
            <param name="id">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the identifier of the sport entity for which to get the dispatcher</param>
            <param name="sportId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport to which the sport entity belongs to.</param>
            <returns>IEntityDispatcherInternal used to dispatch the instance specified by <c>id</c> and <c>sportId</c>.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal">
            <summary>
            Defines a contract implemented by classes used to dispatch entities.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal.Dispatch(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.Byte[])">
            <summary>
            Dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> to the user
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> to dispatch.</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityTypeMapper">
            <summary>
            A contract implemented by classes used to determine the type of the SDK entity used to represent the specific sport entity (tournament, race, match, ...)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IEntityTypeMapper.Map(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32)">
            <summary>
            Returns a <see cref="T:System.Type"/> used to represent the specified entity
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the entity identifier.</param>
            <param name="sportId">A <see cref="T:System.Int32"/> representing the id of the sport to which the entity belongs</param>
            <returns>A <see cref="T:System.Type"/> used to represent the specified entity.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher">
            <summary>
            Defines a contract implemented by classes used to dispatch global SDK events
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher.DispatchProducerDown(Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange)">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> message
            </summary>
            <param name="producerStatusChange">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> instance to be dispatched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher.DispatchProducerUp(Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange)">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> message
            </summary>
            <param name="producerStatusChange">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> instance to be dispatched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher.DispatchDisconnected">
            <summary>
            Dispatches the information that the connection to the feed was lost
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher.DispatchEventRecoveryCompleted(System.Int64,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Dispatches the information that the requested event recovery completed
            <param name="requestId">The identifier of the recovery request</param>
            <param name="eventId">The associated event identifier</param>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IGlobalEventDispatcher.DispatchConnectionException(RabbitMQ.Client.Events.CallbackExceptionEventArgs)">
            <summary>
            Dispatches the information that the exception was thrown in connection loop
            <param name="callbackExceptionEventArgs">The information about the exception</param>
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor">
            <summary>
            Defines a contract used to extract most crucial information from the message received from the feed.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor.GetBasicMessageData(System.Byte[])">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData"/> specifying the basic data of the message
            </summary>
            <param name="messageData">The raw message data.</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData"/> specifying the basic data of the message</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor.GetMessageTypeFromMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType"/> member from the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance whose type is to be determined.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType"/> enum member specifying the type of the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.IRequestDecorator">
            <summary>
            Request decorator used to decorate the <see cref="T:System.Net.Http.HttpRequestMessage"/> before it is sent
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.IRequestDecorator.Decorate(System.Net.Http.HttpRequestMessage)">
            <summary>
            Decorates the provided <see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
            <param name="request">Http request</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager">
            <summary>
             Defines a contract implemented by classes capable of processing feed messages and stashing them. Only 1 per session should be used.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager.StashMessages(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int64)">
            <summary>
            Stashes the messages for specified request id and <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which we want to stash messages</param>
            <param name="requestId">The request identifier</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager.ReleaseMessages(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int64)">
            <summary>
            Releases messages for specified request id and <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which we want to release messages</param>
            <param name="requestId">The request identifier</param>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager.FeedMessageReceived">
            <summary>
            Raised when other message is received from the feed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal">
            <summary>
            Defines a contract implemented by classes capable of dispatching entities
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal" />
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.ISpecificEntityDispatcherInternal.OnClosed">
            <summary>
            Occurs after the current instance is closed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker">
            <summary>
            Defines a contract implemented by classes to keep a track of timing of received messages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.IsBehind">
            <summary>
            Gets a value indicating whether the feed messages are processed in a timely manner
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.IsAliveViolated">
            <summary>
            Gets a value indicating whether the alive messages on a system session are received in a timely manner
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.OldestUserAliveTimestamp">
            <summary>
            Gets the timestamp of the oldest (the one that was generated first) alive message received on the user session.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.SystemAliveTimestamp">
            <summary>
            Gets the epoch timestamp specifying when the last system alive message received was generated
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.ProcessUserMessage(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Records the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> timing info
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> associated with the session receiving the alive message</param>
            <param name="message">The received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.ProcessSystemAlive(Sportradar.OddsFeed.SDK.Messages.Feed.alive)">
            <summary>
            Records the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message timing info received on the system session
            </summary>
            <param name="alive">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message received on a system session.</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker.SdkStartTime">
            <summary>
            Sdk start time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.BookingManager">
            <summary>
            The run-time implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IBookingManager"/> interface
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.BookingManager.#ctor(Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.BookingManager"/> class
            </summary>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> representing feed configuration</param>
            <param name="dataPoster">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to make HTTP POST requests</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to save booking status</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.BookingManager.BookLiveOddsEvent(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Books the live odds event associated with the provided <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifier
            </summary>
            <param name="eventId">The event id</param>
            <returns><c>true</c> if event was successfully booked, <c>false</c> otherwise</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider.ExecutionLog">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider._dataProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to fetch probabilities
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider._messageMapper">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map deserialized data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider._defaultCultures">
            <summary>
            The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages in which the data is fetched by default
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider._exceptionStrategy">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> specifying how to handle potential exceptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider{Sportradar.OddsFeed.SDK.Messages.Rest.cashout},Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider"/> class
            </summary>
            <param name="dataProvider">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to fetch probabilities</param>
            <param name="messageMapper">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map deserialized data</param>
            <param name="configuration">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used to get the languages and <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider.GetProbabilitiesInternalAsync``1(System.String,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the cash out probabilities for the specified sport event
            </summary>
            <typeparam name="T">The type of the sport event</typeparam>
            <param name="param">A parameter specifying which probabilities to get</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned data, or a null reference to use default languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider.GetCashOutProbabilitiesAsync``1(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the cash out probabilities for the specified sport event.
            </summary>
            <typeparam name="T">The type of the sport event</typeparam>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> uniquely identifying the sport event</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned data, or a null reference to use default languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CashOutProbabilitiesProvider.GetCashOutProbabilitiesAsync``1(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the cash out probabilities for the specified market on the specified sport event.
            </summary>
            <typeparam name="T">The type of the sport event</typeparam>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> uniquely identifying the sport event</param>
            <param name="marketId">The id of the market for which to get the probabilities</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IDictionary`2" /> containing market specifiers or a null reference if market has no specifiers</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned data, or a null reference to use default languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CustomBetManager">
            <summary>
            The run-time implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager"/> interface
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.CustomBetSelectionBuilder">
            <summary>
            The run-time implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> interface
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager">
            <summary>
            The run-time implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager"/> interface
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.#ctor(Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager"/> class
            </summary>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> representing feed configuration</param>
            <param name="marketCacheProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> used to get market descriptions</param>
            <param name="invariantMarketDescriptionCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> used to get invariant market descriptions</param>
            <param name="variantDescriptionListCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache"/> used to reload variant market descriptions</param>
            <param name="variantDescriptionCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> used to access market variant cache (singles)</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.GetMarketDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all available static market descriptions
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available static market descriptions</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.GetMarketMappingAsync(System.Int32,Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination
            </summary>
            <param name="marketId">The id of the market for which you need the mapping</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which you need the mapping</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.GetMarketMappingAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination
            </summary>
            <param name="marketId">The id of the market for which you need the mapping</param>
            <param name="specifiers">The associated market specifiers</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which you need the mapping</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.LoadMarketDescriptionsAsync">
            <summary>
            Asynchronously loads the invariant and variant list of market descriptions from the Sports API
            </summary>
            <remarks>To be used when manually changed market data via betradar control</remarks>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.MarketDescriptionManager.DeleteVariantMarketDescriptionFromCache(System.Int32,System.String)">
            <summary>
            Deletes the variant market description from cache
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variantValue">The variant value</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.Log">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for logging
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.RecoveryInitiated">
            <summary>
            Occurs when a recovery initiation completes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager._producers">
            <summary>
            The producers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.Producers">
            <summary>
            Gets the available producers
            </summary>
            <value>The producers</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager._locked">
            <summary>
            Indicates if user can still change anything
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.#ctor(Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager"/> class
            </summary>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used for retrieve disabled producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.GetProducer(System.Int32)">
            <summary>
            Gets the producer
            </summary>
            <param name="id">The id of the producer to retrieve</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">id</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.GetProducer(System.String)">
            <summary>
            Gets the producer by name (case insensitive)
            </summary>
            <param name="name">The name of the producer to retrieve</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.Exists(System.Int32)">
            <summary>
            Check if the <see cref="T:Sportradar.OddsFeed.SDK.Messages.IProducer" /> exists in manager
            </summary>
            <param name="id">The id to check</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.Exists(System.String)">
            <summary>
            Check if the <see cref="T:Sportradar.OddsFeed.SDK.Messages.IProducer" /> exists in manager
            </summary>
            <param name="name">The name to check</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.DisableProducer(System.Int32)">
            <summary>
            Disables the producer (no recovery will be made and not message will be received)
            </summary>
            <param name="id">The id of the producer</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.AddTimestampBeforeDisconnect(System.Int32,System.DateTime)">
            <summary>
            Sets the timestamp of the last processed message for a specific producer
            </summary>
            <param name="id">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> associated with the message</param>
            <param name="timestamp">A <see cref="T:System.DateTime" /> specifying the message timestamp</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The timestamp is in the future or to far in the past</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.RemoveTimestampBeforeDisconnect(System.Int32)">
            <summary>
            Removes the timestamp of the last message processed for a specific producer
            </summary>
            <param name="id">An id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> for which to remove the timestamp</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.Lock">
            <summary>
            Locks this instance from user changes
            </summary>
            <remarks>Also checks if at least 1 producer is enabled and if all LastTimestamps are valid</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.SetIgnoreRecovery(System.Int32)">
            <summary>
            Sets the ignore recovery to one specific producer or all
            </summary>
            <param name="id">The identifier of producer or 0 for all</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.GetUnknownProducer">
            <summary>
            Gets the unknown producer
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerManager.InvokeRecoveryInitiated(Sportradar.OddsFeed.SDK.Api.EventArguments.RecoveryInitiatedEventArgs)">
            <summary>
            Dispatches the <c>RecoveryInitiated</c>
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._producer">
            <summary>
            The producer
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._recoveryOperation">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation"/> used to issue and track recovery operations
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._timestampTracker">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker"/> used to track message timings
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._syncLock">
            <summary>
            A <see cref="T:System.Object"/> used to ensure synchronous access to critical regions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._semaphoreStatusChange">
            <summary>
            A <see cref="T:System.Threading.SemaphoreSlim"/> used to synchronize status changes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._minIntervalBetweenRecoveryRequests">
            <summary>
            The minimal interval between recovery requests initiated by alive messages (seconds)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.Producer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which status is tracked
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.Status">
            <summary>
            Gets the status of the recovery manager
            </summary>
            <value>The status</value>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.StatusChanged">
            <summary>
            Occurs when status of the associated manager has changed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._lastRecoveryMessage">
            <summary>
            The time of last feed message associated with recovery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager._connectionDownTimestamp">
            <summary>
            The timestamp when the connection went down (if down)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.#ctor(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation,Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager"/> class
            </summary>
            <param name="producer">A <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which status is tracked</param>
            <param name="recoveryOperation">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation"/> used to issue and track recovery operations</param>
            <param name="timestampTracker">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ITimestampTracker"/> used to track message timings</param>
            <param name="minIntervalBetweenRecoveryRequests">The minimal interval between recovery requests initiated by alive messages (seconds)</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.SetStatusAndRaiseEvent(System.Nullable{System.Int64},Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus)">
            <summary>
            Sets the <see cref="P:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.Status"/> property and raised the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.StatusChanged"/> event
            </summary>
            <param name="requestId">The requestId of the recovery request which caused the change or a null reference</param>
            <param name="newStatus">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the new status</param>
            <remarks>Should be used only within locking</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ProcessSnapshotCompleteMessage(Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest)">
            <summary>
            Processes the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message. Only snapshot_complete(s) from user's sessions should be processed
            </summary>
            <param name="snapshotCompleted">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> message received on the system user's session</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> associated with the session which received the message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the new status of the manager or null reference if no change is needed</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ConnectionShutdown">
            <summary>
            Executes the steps required when the connection to the message broker is shutdown.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ConnectionRecovered">
            <summary>
            Executes the steps required when the connection to the message broker is recovered after shutdown.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ProcessUserMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest)">
            <summary>
            Processes <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage" /> received on the user's session(s)
            </summary>
            <remarks>
            This method does:
            - collect timing info on odds_change(s), bet_stop(s) and alive(s)
            - attempt to complete running recoveries with snapshot_complete(s)
            This method does not:
            - determine if the user is behind (or not) with message processing - this is done in CheckStatus(..) method
            - attempt to determine whether the recovery has timed-out - this is done in CheckStatus(..) method
            - determine weather is alive violated. This should be only done based on system alive(s) and is done in ProcessSystemMessage(...) method
            - start recoveries - This should only be done based on system alive(s) and is done in ProcessSystemMessage(...) method
            </remarks>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage" /> message to be processed</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> describing the session from which the message originates </param>
            <exception cref="T:System.ArgumentException">The Producer.Id of the message and the Producer associated with this manager do not match</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.ProcessSystemMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Processes a message received on the system's session
            </summary>
            <remarks>
            This method does:
            - starts recovery operations if needed
            - interrupt running recoveries on non-subscribed alive(s) and alive violation(s)
            - set LastTimestampBeforeDisconnect property on the producer.
            This method does not:
            - determine if the user is behind (or not) with message processing - this is done in CheckStatus(..) method
            - attempt to determine whether the recovery has timed-out - this is done in CheckStatus(..) method
            </remarks>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> received on the system session</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManager.CheckStatus">
            <summary>
            Checks the status of the current recovery manager
            </summary>
            <remarks>
            The method must:
            - Check whether current recovery is running and has expired
            - Whether there is an alive violation
            - Whether the user is behind with processing
            The method should not:
            - Update the processing delay - this is done on a message from a user's session
            - Start the recovery - this is done on alive from the system session
            - Complete non timed-out recovery - this is done on the snapshot_complete from user's session
            </remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory">
            <summary>
            Factory for creating <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory._recoveryRequestIssuer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer"/> instance needed when creating <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory._messageMapper">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> instance used to <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory._config">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory"/> class.
            </summary>
            <param name="recoveryRequestIssuer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer"/> instance needed when creating <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instances</param>
            <param name="messageMapper">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> instance used to create <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/> instances</param>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance used to create <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instances</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory.GetRecoveryTracker(Sportradar.OddsFeed.SDK.Api.IProducer,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest})">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager" /> based on <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" />
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> for which to get the recovery tracker</param>
            <param name="allInterests">The list of all MessageInterests</param>
            <returns>Returns new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.ProducerRecoveryManagerFactory.CreateSessionMessageManager">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager" /> feed message processor
            </summary>
            <returns>Newly created <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager" /></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer">
            <summary>
            Used to issue recovery requests to the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.LogInt">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.AfterTimestampRecoveryUrlFormat">
            <summary>
            A format of the URL used to request a recovery of state after the specified timestamp
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.FullOddsRecoveryUrlFormat">
            <summary>
            A format of the URL used to request full odds recovery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.EventMessagesRecoveryUrlFormat">
            <summary>
            A url format used to request recovery of all messages for a specific event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.EventStatefulMessagesRecoveryUrlFormat">
            <summary>
            A url format used to request recovery of stateful messages for a specific event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer._dataPoster">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster"/> instance used to issue the request to the feed API
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer._sequenceGenerator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator"/> used to generate the sequence numbers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer._producerManager">
            <summary>
            Used to invoke RequestInitiated event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer._nodeId">
            <summary>
            The node identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster,Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer"/> class
            </summary>
            <param name="dataPoster">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster"/> instance used to issue the request to the feed API</param>
            <param name="sequenceGenerator">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator"/> used to generate the sequence numbers</param>
            <param name="config">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used to get nodeId</param>
            <param name="producerManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> used to invoke RequestInitiated event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.RecoverEventMessagesAsync(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously requests messages for the specified sport event and returns a request number used when issuing the request
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event for which to request the messages</param>
            <returns> <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.RecoverEventStatefulMessagesAsync(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously requests stateful messages for the specified sport event and returns a request number used when issuing the request
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event for which to request the messages</param>
            <returns> <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.RequestRecoveryAfterTimestampAsync(Sportradar.OddsFeed.SDK.Api.IProducer,System.DateTime,System.Int32)">
            <summary>
            Asynchronously requests a recovery for the specified producer for changes which occurred after specified time
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="dateAfter">Specifies the time after which the changes should be recovered.</param>
            <param name="nodeId">The node id where recovery message will be processed</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1" /> representing a asynchronous method.
            Once the execution is complete it provides the request id associated with the recovery</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.RecoveryRequestIssuer.RequestFullOddsRecoveryAsync(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int32)">
            <summary>
            Asynchronously requests a recovery of current odds for specific producer
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="nodeId">The node id where recovery message will be processed</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1" /> representing a asynchronous method.
            Once the execution is complete it provides the request id associated with the recovery</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider">
            <summary>
            Provides access to sport related data (sports, tournaments, sport events, ...)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._sportEntityFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._sportEventCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to retrieve schedules for sport events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._sportEventStatusCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> used to retrieve status for sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._profileCache">
            <summary>
            The profile cache used to retrieve competitor or player profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._sportDataCache">
            <summary>
            The sport data cache used to retrieve sport data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._defaultCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> specified as default cultures (from configuration)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._exceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying enum member specifying how instances provided by the current provider will handle exceptions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._cacheManager">
            <summary>
            The cache manager
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._matchStatusCache">
            <summary>
            The match status cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider._dataRouterManager">
            <summary>
            The data router manager
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider"/> class
            </summary>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament"/> instances</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to retrieve schedules for sport events</param>
            <param name="sportEventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> used to retrieve status for sport event</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> used to retrieve competitor or player profile</param>
            <param name="sportDataCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> used to retrieve sport data</param>
            <param name="defaultCultures"> A <see cref="T:System.Collections.Generic.IList`1"/> specified as default cultures (from configuration)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying enum member specifying how instances provided by the current provider will handle exceptions</param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="matchStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> used to retrieve match statuses</param>
            <param name="dataRouterManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to invoke API requests</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetSportsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing all available sports in language specified by the <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> instance representing the sport specified by it's id in the language specified by <c>culture</c>, or a null reference if sport with specified id does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetLiveSportEventsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing currently live sport events in the language specified by <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetSportEventsByDateAsync(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing sport events scheduled for date specified by <c>date</c> in language specified by <c>culture</c>
            </summary>
            <param name="scheduleDate">A <see cref="T:System.DateTime"/> specifying the day for which to retrieve the schedule</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetTournament(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the specified tournament in language specified by <c>culture</c> or a null reference if the tournament with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the tournament to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the specified tournament or a null reference if requested tournament does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetCompetition(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event in language specified by <c>culture</c> or a null reference if the sport event with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event to retrieve</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the sport this event belongs to</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event or a null reference if the requested sport event does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetCompetition(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event in language specified by <c>culture</c> or a null reference if the sport event with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event or a null reference if the requested sport event does not exist</returns>
            <remarks>It is recommended to use the GetCompetition method with sportId</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetSportEvent(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetSportEventStatusAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> for specific sport event
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the event for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> to be retrieved</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/>
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> to be retrieved</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> representing the specified competitor or a null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/>
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> to be retrieved</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> representing the specified player or a null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.DeleteSportEventFromCache(Sportradar.OddsFeed.SDK.Common.Urn,System.Boolean)">
            <summary>
            Delete the sport event from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> to be deleted</param>
            <param name="includeEventStatusDeletion">Delete also <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus"/> from the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.DeleteTournamentFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the tournament from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.DeleteCompetitorFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the competitor from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.DeletePlayerProfileFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the player profile from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetListOfSportEventsAsync(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists almost all events we are offering prematch odds for. This endpoint can be used during early startup to obtain almost all fixtures. This endpoint is one of the few that uses pagination.</remarks>
            <param name="startIndex">Starting record (this is an index, not time)</param>
            <param name="limit">How many records to return (max: 1000)</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetActiveTournamentsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of active <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> that are cached. (once schedule is loaded)</remarks>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetAvailableTournamentsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of available <see cref="T:System.Collections.Generic.IEnumerable`1"/> for a specific sport
            </summary>
            <remarks>Lists all available tournaments for a sport event we provide coverage for</remarks>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.DeleteSportEventsFromCache(System.DateTime)">
            <summary>
            Deletes the sport events from cache which are scheduled before specific DateTime
            </summary>
            <param name="before">The scheduled DateTime used to delete sport events from cache</param>
            <returns>Number of deleted items</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.CacheExportAsync(Sportradar.OddsFeed.SDK.Common.Enums.CacheType)">
            <summary>
            Exports current items in the cache
            </summary>
            <param name="cacheType">Specifies what type of cache items will be exported</param>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.CacheImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Exports current items in the cache
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing the items to be imported</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetFixtureChangesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetFixtureChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetResultChangesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetResultChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetLotteriesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of available lotteries
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of available lotteries</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetPeriodStatusesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Get sport event period summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="competitorIds">The list of competitor ids to fetch the results for</param>
            <param name="periods">The list of period ids to fetch the results for</param>
            <returns>The period statuses or empty if not found</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Managers.SportDataProvider.GetTimelineEventsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Get the associated event timeline for single culture
            </summary>
            <param name="sportEventId">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <returns>The event timeline or empty if not found</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor">
            <summary>
            Class used to extract most basic information from raw feed message
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.TargetFormats">
            <summary>
            A formats describing search targets
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.MessageTypes">
            <summary>
            Names of supported xml messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.Quote">
            <summary>
            A string containing a single double quote
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.ProductIdAttributeName">
            <summary>
            The name of the 'product' attribute
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.EventIdAttributeName">
            <summary>
            The name of the 'event_id' attribute
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.ExtractMessageName(System.String)">
            <summary>
            Extracts and returns <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType"/> member specifying the type of the provided xml message
            </summary>
            <param name="message">A <see cref="T:System.String"/> representation of the message.</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType"/> member specifying the type of the provided xml message.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.ExtractAttributeValue(System.String,System.String)">
            <summary>
            Extracts and returns a value of the specified attribute from the provided message
            </summary>
            <param name="message">A <see cref="T:System.String"/> representation of the message.</param>
            <param name="attributeName">The name of the attribute whose value is to be extracted.</param>
            <returns>The value of the specified attribute or a null reference if value could not be determined</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.GetBasicMessageData(System.Byte[])">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData" /> specifying the basic data of the message
            </summary>
            <param name="messageData">The raw message data.</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData" /> specifying the basic data of the message</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.MessageDataExtractor.GetMessageTypeFromMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType" /> member from the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance whose type is to be determined.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType" /> enum member specifying the type of the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Producer">
            <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Id">
            <summary>
            Gets the id of the producer
            </summary>
            <value>The id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Name">
            <summary>
            Gets the name of the producer
            </summary>
            <value>The name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Description">
            <summary>
            Gets the description of the producer
            </summary>
            <value>The description</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.IsAvailable">
            <summary>
            Gets a value indicating whether the producer is available on feed
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.IsDisabled">
            <summary>
            Gets a value indicating whether the producer is disabled
            </summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.IsProducerDown">
            <summary>
            Gets a value indicating whether the producer is marked as down
            </summary>
            <value><c>true</c> if this instance is down; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.LastTimestampBeforeDisconnect">
            <summary>
            Gets the last timestamp before disconnect for this producer
            </summary>
            <value>The last timestamp before disconnect</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.MaxRecoveryTime">
            <summary>
            Gets the maximum recovery time in seconds
            </summary>
            <value>The maximum recovery time in seconds</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.MaxInactivitySeconds">
            <summary>
            Gets the maximum inactivity seconds
            </summary>
            <value>The maximum inactivity seconds</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.ApiUrl">
            <summary>
            Gets the API URL.
            </summary>
            <value>The API URL</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Code">
            <summary>
            Gets the code.
            </summary>
            <value>The code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.IgnoreRecovery">
            <summary>
            Gets a value indicating whether we should ignore recovery (true for ReplayServer)
            </summary>
            <value><c>true</c> if [ignore recovery]; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Scope">
            <summary>
            Gets the scope of the producer
            </summary>
            <value>The scope</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.RecoveryInfo">
            <summary>
            Gets the recovery info about last recovery attempt
            </summary>
            <value>The recovery info about last recovery attempt</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Producer.StatefulRecoveryWindow">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Producer"/> class
            </summary>
            <param name="id">The identifier</param>
            <param name="name">The name</param>
            <param name="description">The description</param>
            <param name="apiUrl">The API URL</param>
            <param name="active">if set to <c>true</c> [active]</param>
            <param name="maxInactivitySeconds">The maximum time between two alive messages before the producer is marked as down</param>
            <param name="maxRecoveryTime">The maximum time in seconds in which recovery must be completed</param>
            <param name="scope">The scope of the producer</param>
            <param name="statefulRecoveryWindowInMinutes">The stateful recovery window in minutes</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.SetDisabled(System.Boolean)">
            <summary>
            Sets the disabled
            </summary>
            <param name="disabled">if set to <c>true</c> [disabled]</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.SetProducerDown(System.Boolean)">
            <summary>
            Sets the producer down.
            </summary>
            <param name="down">if set to <c>true</c> [down]</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.SetLastTimestampBeforeDisconnect(System.DateTime)">
            <summary>
            Sets the last timestamp before disconnect
            </summary>
            <param name="timestamp">The timestamp</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance
            </summary>
            <param name="obj">The object to compare with the current object</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.Equals(Sportradar.OddsFeed.SDK.Api.Internal.Producer)">
            <summary>
            Equals the specified other
            </summary>
            <param name="other">The other</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Producer.GetHashCode">
            <summary>
            Returns a hash code for this instance
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.ProducerEqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used to compare <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ProducerEqualityComparer.Equals(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Determines whether the passed <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instances are equal
            </summary>
            <param name="x">The first <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instance</param>
            <param name="y">The second <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instance</param>
            <returns>True if passed <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instances are equal; False otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.ProducerEqualityComparer.GetHashCode(Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Calculates and returns a hash code of the passed <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> instance
            </summary>
            <param name="obj">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to calculate the hash code</param>
            <returns>The hash code of the passed <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager">
            <summary>
            FeedRecoveryManager takes care of initial snapshot recovery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._executionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.TrackersInitialCheckDelaySeconds">
            <summary>
            Delay in seconds specifying how much after the start-up the trackers are checked
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.TrackersCheckPeriodSeconds">
            <summary>
            Specifies a period in seconds between consequential fetcher checks
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._producerRecoveryManagerFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory"/> instance used to construct <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._sessionMessageManagers">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> containing managers monitoring user's sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._inactivityTimer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> used to track timeouts between alive messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._isOpened">
            <summary>
            A value used to store information whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> is opened
            0 indicate closed, 1 indicate opened
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.IsOpened">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> is opened
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._producerRecoveryManagers">
            <summary>
            List of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instances where each instance is assigned to one producer
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.ProducerUp">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> is marked as up indicating the state of the SDK is synchronized
            with the state of the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.ProducerDown">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> is marked as down indicating the state of the SDK is NOT synchronized
            with the state of the feed, or the associated producer is experiencing problems
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.CloseFeed">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> is marked as <see cref="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.FatalError"/> indicating the recovery request could not be invoked
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._producerManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> with all available <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager._systemSession">
            <summary>
            The system feed session for processing alive messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager"/> class
            </summary>
            <param name="producerRecoveryManagerFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory"/> used to create new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/></param>
            <param name="config">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used on feed</param>
            <param name="timer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer"/> used for invocation of period tasks</param>
            <param name="producerManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> with all available <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></param>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> to construct <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedSystemSession"/> for processing alive messages</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.OnTimerElapsed(System.Object,System.EventArgs)">
            <summary>
            Invoked when the timer used to check the status of trackers is invoked
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.OnRecoveryTrackerStatusChanged(System.Object,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs)">
            <summary>
            Handles the change in the status of a specific recovery manager
            </summary>
            <param name="sender">An <see cref="T:System.Object"/> representation of a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instance whose status has changed.</param>
            <param name="e">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs"/>Additional information about the event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.OnRecoveryTrackerEventRecoveryCompleted(System.Object,Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs)">
            <summary>
            Handles the event recovery completion of a specific recovery manager
            </summary>
            <param name="sender">An <see cref="T:System.Object"/> representation of a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> instance whose status has changed.</param>
            <param name="e">The <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.EventRecoveryCompletedEventArgs"/>Additional information about the event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.Open(System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest})">
            <summary>
            Opens the current instance
            </summary>
            <param name="interests">The interests for which to open trackers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager"/> so it will stop checking for recovery requests
            </summary>
            <remarks>The <see cref="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.Close"/> method does not dispose resources associated with the current instance so the instance can be re-opened by calling the Open() method. In order to dispose resources associated
            with the current instance you must call the <see cref="M:System.IDisposable.Dispose"/> method. Once the instance is disposed it can no longer be opened.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.CreateSessionMessageManager">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/>
            </summary>
            <returns>Newly created <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.ConnectionShutdown">
            <summary>
            Executes the steps required when the connection to the message broker is shutdown.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager.ConnectionRecovered">
            <summary>
            Executes the steps required when the connection to the message broker is recovered.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager">
            <summary>
            Contract for interacting with <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.FeedRecoveryManager" /></summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.IOpenable" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.IHealthStatusProvider" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.CreateSessionMessageManager">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/>
            </summary>
            <returns>Newly created <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/></returns>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.ProducerUp">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> is marked as up indicating the state of the SDK is synchronized
            with the state of the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.ProducerDown">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> is marked as down indicating the state of the SDK is NOT synchronized
            with the state of the feed, or the associated producer is experiencing problems
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.CloseFeed">
            <summary>
            Occurs when the specific <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/> is in status <see cref="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.FatalError"/> indicating the recovery request could not be invoked
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.IsOpened">
            <summary>
            Gets a value indicating whether the current instance is opened
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.Open(System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest})">
            <summary>
            Opens the current instance
            </summary>
            <param name="interests">The interests for which to open trackers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.Close">
            <summary>
            Closes the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.ConnectionShutdown">
            <summary>
            Executes the steps required when the connection to the message broker is shutdown.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager.ConnectionRecovered">
            <summary>
            Executes the steps required when the connection to the message broker is recovered.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedSystemSession">
            <summary>
            Specifies a contract defining events used for notification from system session
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedSystemSession.AliveReceived">
            <summary>
            Raised when a alive message is received from the feed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager">
            <summary>
            Represents contract for tracking <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> per specific <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.Producer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> are tracked
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.Status">
            <summary>
            Gets the status of the recovery manager
            </summary>
            <value>The status.</value>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.StatusChanged">
            <summary>
            Occurs when status of the associated manager has changed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.CheckStatus">
            <summary>
            Checks the status of the current recovery manager
            </summary>
            <remarks>
            The method must:
            - Check whether current recovery is running and has expired
            - Whether there is an alive violation
            - Whether the user is behind with processing
            The method should not:
            - Update the processing delay - this is done on a message from a user's session
            - Start the recovery - this is done on alive from the system session
            - Complete non timed-out recovery - this is done on the snapshot_complete from user's session
            </remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.ProcessUserMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest)">
            <summary>
            Processes <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage" /> received on the user's session(s)
            </summary>
            <remarks>
            This method does:
            - collect timing info on odds_change(s), bet_stop(s) and alive(s)
            - attempt to complete running recoveries with snapshot_complete(s)
            This method does not:
            - determine if the user is behind (or not) with message processing - this is done in CheckStatus(..) method
            - attempt to determine whether the recovery has timed-out - this is done in CheckStatus(..) method
            - determine weather is alive violated. This should be only done based on system alive(s) and is done in ProcessSystemMessage(...) method
            - start recoveries - This should only be done based on system alive(s) and is done in ProcessSystemMessage(...) method
            </remarks>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage" /> message to be processed</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> describing the session from which the message originates </param>
            <exception cref="T:System.ArgumentException">The Producer.Id of the message and the Producer associated with this manager do not match</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.ProcessSystemMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Processes a message received on the system's session
            </summary>
            <remarks>
            This method does:
            - starts recovery operations if needed
            - interrupt running recoveries on non-subscribed alive(s) and alive violation(s)
            - set LastTimestampBeforeDisconnect property on the producer.
            This method does not:
            - determine if the user is behind (or not) with message processing - this is done in CheckStatus(..) method
            - attempt to determine whether the recovery has timed-out - this is done in CheckStatus(..) method
            </remarks>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> received on the system session</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.ConnectionShutdown">
            <summary>
            Executes the steps required when the connection to the message broker is shutdown.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager.ConnectionRecovered">
            <summary>
            Executes the steps required when the connection to the message broker is recovered after shutdown.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation">
            <summary>
            A contract implemented by types used to perform recovery operation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.IsRunning">
            <summary>
            Gets a value indication whether the recovery operation is currently running.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.RequestId">
            <summary>
            Gets a request Id of the current recovery operation or a null reference if recovery is not running
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.LastAttemptTime">
            <summary>
            Gets the time of the last issued recovery request attempt
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.LastStartTime">
            <summary>
            Gets the start time of the last issued recovery request.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.Start">
            <summary>
            Attempts to start a recovery operation
            </summary>
            <returns>True if the operation was successfully started; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is already running</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException">The after parameter is to far in the past</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.Interrupt(System.DateTime)">
            <summary>
            Stores the time when the operation was interrupted if this is the fist interruption.
            Otherwise it does nothing
            </summary>
            <param name="interruptionTime">A <see cref="T:System.DateTime"/> specifying to when to set the interruption time</param>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.HasTimedOut">
            <summary>
            Determines whether the current operation has timed-out
            </summary>
            <returns>True if the operation timed-out; Otherwise false.</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.TryComplete(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult@)">
            <summary>
            Stops the recovery operation if all snapshots were received
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session which received the snapshot message</param>
            <param name="result">If the operation was successfully completed, it contains the results of the completed recovery</param>
            <returns>True if the recovery operation could be completed; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.Reset">
            <summary>
            Resets the operation to it's default (not started) state. If operation is already not started, it does nothing.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryOperation.CompleteTimedOut">
            <summary>
            Completes the timed-out recovery operation
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> containing recovery info</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running or it has not timed-out</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer">
            <summary>
            Defines a contract implemented by classes used to issue message recovery requests to the feed.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer.RequestRecoveryAfterTimestampAsync(Sportradar.OddsFeed.SDK.Api.IProducer,System.DateTime,System.Int32)">
            <summary>
            Asynchronously requests a recovery for the specified producer for changes which occurred after specified time
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery.</param>
            <param name="dateAfter">Specifies the time after which the changes should be recovered.</param>
            <param name="nodeId">The id of the node where recovery messages will be processed</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/> representing a asynchronous method.
            Once the execution is complete it provides the request id associated with the recovery</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer.RequestFullOddsRecoveryAsync(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int32)">
            <summary>
            Asynchronously requests a recovery of current odds for specific producer
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery.</param>
            <param name="nodeId">The id of the node where recovery messages will be processed</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/> representing a asynchronous method.
            Once the execution is complete it provides the request id associated with the recovery</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory">
            <summary>
            Contract for creating factory for creating new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory.GetRecoveryTracker(Sportradar.OddsFeed.SDK.Api.IProducer,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest})">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager" /> based on <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" />
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to get the recovery tracker</param>
            <param name="allInterests">The list of all <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> in all opened sessions</param>
            <returns>Returns new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManager" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IProducerRecoveryManagerFactory.CreateSessionMessageManager">
            <summary>
            Creates new <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/>
            </summary>
            <returns>Newly created <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus">
            <summary>
            Status of the producer recovery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.NotStarted">
            <summary>
            Producer is created, but recovery not yet started
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.Started">
            <summary>
            Recovery is started
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.Completed">
            <summary>
            Recovery is successfully completed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.Error">
            <summary>
            During recovery request error occurred
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.FatalError">
            <summary>
            The fatal error occurred (feed needs to be closed)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus.Delayed">
            <summary>
            The processing of feed messages is delayed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo">
            <summary>
            The recovery info
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.After">
            <summary>
            Gets the after timestamp of the recovery
            </summary>
            <value>The after</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.Timestamp">
            <summary>
            Gets the timestamp specifying when the recovery was requested
            </summary>
            <value>The timestamp</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.RequestId">
            <summary>
            Gets the request identifier
            </summary>
            <value>The request identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.ResponseCode">
            <summary>
            Gets the response code of the recovery request
            </summary>
            <value>The response code of the recovery request</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.ResponseMessage">
            <summary>
            Gets the response message of the recovery request
            </summary>
            <value> the response message of the recovery request</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.NodeId">
            <summary>
            Gets the node identifier
            </summary>
            <value>The node identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.#ctor(System.Int64,System.Int64,System.Int64,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo"/> class
            </summary>
            <param name="after">The after</param>
            <param name="timestamp">The timestamp</param>
            <param name="requestId">The request id</param>
            <param name="nodeId">The node id</param>
            <param name="responseCode">The response code</param>
            <param name="responseMessage">The response message</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation">
            <summary>
            Class used to track the progress of a single recovery operation
            </summary>
            <remarks>
            The class is not thread safe
            </remarks>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._producer">
            <summary>
            The producer whose recovery is being tracked by current instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._recoveryRequestIssuer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer"/> used to start recovery requests
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._nodeId">
            <summary>
            The node id of the current feed instance or a null reference
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._allInterests">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> containing interests on all sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._snapshotReceivedSessions">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of all sessions on which the snapshot was received
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._requestId">
            <summary>
            The current request id
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._startTime">
            <summary>
            The <see cref="T:System.DateTime"/> specifying when the current operation started
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation._lastAttempt">
            <summary>
            The time of the last issued recovery request attempt
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.InterruptionTime">
            <summary>
            The <see cref="T:System.DateTime"/> specifying the first time the recovery was interrupted
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.IsRunning">
            <summary>
            Gets a value indication whether the recovery operation is currently running.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.RequestId">
            <summary>
            Gets a requestId of the current recovery operation or a null reference if recovery is not running
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.LastAttemptTime">
            <summary>
            Gets the time of the last issued recovery request attempt
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.LastStartTime">
            <summary>
            Gets the start time of the last issued recovery request.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Producer,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation"/> class
            </summary>
            <param name="producer">The producer whose recovery is being tracked by current instance</param>
            <param name="recoveryRequestIssuer">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IRecoveryRequestIssuer"/> used to start recovery requests</param>
            <param name="allInterests">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> containing interests on all sessions</param>
            <param name="nodeId">The node id of the current feed instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.WereSnapshotsReceivedOnSessions(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest[])">
            <summary>
            Determines whether the snapshot was received on all required sessions
            </summary>
            <param name="requiredInterests"><see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/>s on which the snapshot is expected</param>
            <returns>True if the snapshot was received on all required sessions; False otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.IsRecoveryDone">
            <summary>
            Determines whether the snapshot was received on all required sessions
            </summary>
            <returns>True if the snapshot was received on all required sessions; False otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.Start">
            <summary>
            Attempts to start a recovery operation
            </summary>
            <returns>True if the operation was successfully started; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is already running</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException">The after parameter is too far in the past</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.Interrupt(System.DateTime)">
            <summary>
            Stores the time when the operation was interrupted if this is the fist interruption, otherwise it does nothing
            </summary>
            <param name="interruptionTime">A <see cref="T:System.DateTime"/> specifying to when to set the interruption time</param>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.HasTimedOut">
            <summary>
            Determines whether the current operation has timed-out
            </summary>
            <returns>True if the operation timed-out; Otherwise false</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.TryComplete(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult@)">
            <summary>
            Stops the recovery operation if all snapshots were received
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> of the session which received the snapshot message</param>
            <param name="result">If the operation was successfully completed, it contains the results of the completed recovery</param>
            <returns>True if the recovery operation could be completed; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.CompleteTimedOut">
            <summary>
            Completes the timed-out recovery operation
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> containing recovery info</returns>
            <exception cref="T:System.InvalidOperationException">The recovery operation is not running, or it has not timed-out</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryOperation.Reset">
            <summary>
            Resets the operation to its default (not started) state. If operation is already not started, it does nothing.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult">
            <summary>
            Contains information about a single recovery operation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.Success">
            <summary>
            Gets a value indicating whether the recovery successfully completed. If the recovery was interrupted it is still considered successful
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.RequestId">
            <summary>
            Gets the requestId of the associated recovery operation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.StartTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the recovery started
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.InterruptedAt">
            <summary>
            Gets a <see cref="T:System.DateTime"/> of the first interruption, or a null reference if recovery was not interrupted
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.TimedOut">
            <summary>
            Gets a value indicating whether the operation has timed-out
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.#ctor(System.Boolean,System.Int64,System.DateTime,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> instance
            </summary>
            <param name="success">a <see cref="T:System.DateTime"/> specifying when the recovery started</param>
            <param name="requestId">a requestId of the associated recovery operation</param>
            <param name="startTime">a <see cref="T:System.DateTime"/> specifying when the recovery started</param>
            <param name="interruptedAt">a <see cref="T:System.DateTime"/> of the first interruption</param>
            <param name="timedOut">a value indicating whether the operation has timed-out</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.ForSuccess(System.Int64,System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> indicating successful recovery operation
            </summary>
            <param name="requestId">a requestId of the associated recovery operation</param>
            <param name="startTime">a <see cref="T:System.DateTime"/> specifying when the recovery started</param>
            <param name="interruptedAt">a <see cref="T:System.DateTime"/> of the first interruption</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult.ForTimeOut(System.Int64,System.DateTime)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> indicating timed-out recovery operation
            </summary>
            <param name="requestId">a requestId of the associated recovery operation</param>
            <param name="startTime">a <see cref="T:System.DateTime"/> specifying when the recovery started</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.RecoveryResult"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs">
            <summary>
            Event arguments describing the event which occurs when the tracker status is changed
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs.RequestId">
            <summary>
            Gets the <see cref="T:System.Int64"/> specifying the id of the requestId of the recovery operation which caused this change,
            or a null reference if the change was not by a recovery request.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs.OldStatus">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the status of the tracker before the change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs.NewStatus">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the status of the tracker after the change
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs.#ctor(System.Nullable{System.Int64},Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus,Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.TrackerStatusChangeEventArgs"/> class.
            </summary>
            <param name="requestId">
            The <see cref="T:System.Int64"/> specifying the id of the requestId of the recovery operation which caused this change,
            or a null reference if the change was not by a recovery request.
            </param>
            <param name="oldStatus">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the status of the tracker before the change.</param>
            <param name="newStatus">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.ProducerRecoveryStatus"/> specifying the status of the tracker after the change.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful"/> which uses the HTTP requests to post/get/put/patch and delete the data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful._sdkHttpClient">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient"/> used to invoke HTTP requests
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.response},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful"/> class.
            </summary>
            <param name="sdkHttpClient">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ISdkHttpClient" /> used to invoke HTTP requests</param>
            <param name="responseDeserializer">The deserializer for unexpected response</param>
            <param name="connectionFailureLimit">Indicates the limit of consecutive request failures, after which it goes in "blocking mode"</param>
            <param name="connectionFailureTimeout">indicates the timeout after which comes out of "blocking mode" (in seconds)</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful.PutDataAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Asynchronously gets a <see cref="T:System.Net.Http.HttpResponseMessage"/> as a result of PUT request send to the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be send to</param>
            <param name="content">A <see cref="T:System.Net.Http.HttpContent"/> to be posted to the specific <see cref="T:System.Uri"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/> containing status code and data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.HttpDataRestful.DeleteDataAsync(System.Uri)">
            <summary>
            Asynchronously gets a <see cref="T:System.Net.Http.HttpResponseMessage"/> as a result of DELETE request send to the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be send to</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/> containing status code and data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful">
            <summary>
            Defines a contract implemented by classes used REST request to obtain <see cref="T:System.Net.Http.HttpResponseMessage"/> instance containing status code and data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful.PutDataAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Asynchronously gets a <see cref="T:System.Net.Http.HttpResponseMessage"/> as a result of PUT request send to the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be send to</param>
            <param name="content">A <see cref="T:System.Net.Http.HttpContent"/> to be posted to the specific <see cref="T:System.Uri"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/> containing status code and data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful.DeleteDataAsync(System.Uri)">
            <summary>
            Asynchronously gets a <see cref="T:System.Net.Http.HttpResponseMessage"/> as a result of DELETE request send to the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the resource to be send to</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which, when completed will return a <see cref="T:System.Net.Http.HttpResponseMessage"/> containing status code and data</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http post</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent">
            <summary>
            Represents a replay event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates new instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent"/>
            </summary>
            <param name="id">The id of associated sport event</param>
            <param name="position">The position of event in the queue</param>
            <param name="startTime">The start time specified when the event was added to the queue</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the event id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent.Position">
            <summary>
            Gets a <see cref="T:System.Int32"/> specifying the position
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayEvent.StartTime">
            <summary>
            Gets a <see cref="T:System.Int32"/> specifying the start time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager">
            <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager"/> for interaction with xReplay Server for doing integration tests against played matches that are older than 48 hours
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.#ctor(Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration,Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager"/> class
            </summary>
            <param name="config">The configuration used to extract replay Api host and node id</param>
            <param name="dataRestful">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.IDataRestful"/> used to make REST requests</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.AddMessagesToReplayQueue(Sportradar.OddsFeed.SDK.Common.Urn,System.Nullable{System.Int32})">
            <summary>
            Adds event {eventId} to the end of the replay queue
            </summary>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> of the event</param>
            <param name="startTime">Minutes relative to event start time</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.RemoveEventFromReplayQueue(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Removes the event from replay queue
            </summary>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.GetEventsInQueue">
            <summary>
            Gets the events in replay queue.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.GetReplayEventsInQueue">
            <summary>
            Gets list of replay events in queue.
            </summary>
            <returns>Returns a list of replay events</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.GetReplayEventsInQueueInternal">
            <summary>
            Gets list of replay events in queue.
            </summary>
            <returns>Returns a list of replay events</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.StartReplay(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Start replay the event from replay queue. Events are played in the order they were played in reality
            </summary>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages (in milliseconds)</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse" /></returns>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.StartReplay(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Start replay the event from replay queue. Events are played in the order they were played in reality
            </summary>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages in milliseconds</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <param name="runParallel">Should the events in queue replay independently</param>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.StartReplayScenario(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Starts playing a predefined scenario
            </summary>
            <param name="scenarioId">The identifier of the scenario that should be played</param>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse" /></returns>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.StopReplay">
            <summary>
            Stop the player if it is currently playing. If player is already stopped, nothing will happen.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.StopAndClearReplay">
            <summary>
            Stop the player if it is currently playing and clear the replay queue. If player is already stopped, the queue is cleared.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.GetStatusOfReplay">
            <summary>
            Return the status of player. Possible values are: player is playing, player is stopped, player was never playing.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayManager.GetAvailableScenarios">
            <summary>
            Gets a list of available replay scenarios
            </summary>
            <returns>A list of available replay scenarios</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse.Success">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse" /> is success.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse.Message">
            <summary>
            Gets the message of the response
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse.ErrorMessage">
            <summary>
            Gets the error message, if error occurred, otherwise empty
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse"/> class.
            </summary>
            <param name="success">if set to <c>true</c> [success].</param>
            <param name="message">The message of the response</param>
            <param name="error">The error message if error happened</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayScenario">
            <summary>
            A basic implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayScenario.Id">
            <summary>
            Gets the id of the scenario
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayScenario.Description">
            <summary>
            Gets the description of the scenario
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayScenario.RunParallel">
            <summary>
            Gets an indication if the scenario can be run in parallel
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayScenario.AssociatedEventIds">
            <summary>
            Gets the associated event identifiers
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus"/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus.PlayerStatus">
            <summary>
            Gets the player status. Possible values are: player is playing, player is stopped, player was never playing.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus.LastMessageFromEvent">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event in last message
            </summary>
            <value>The last message from event.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus)">
            <summary>
            Constructs new instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus"/>
            </summary>
            <param name="eventId"></param>
            <param name="status"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.Replay.ReplayStatus.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.RequestDecorator">
            <summary>
            Request decorator used to decorate the <see cref="T:System.Net.Http.HttpRequestMessage"/> before it is sent
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.RequestDecorator.Decorate(System.Net.Http.HttpRequestMessage)">
            <summary>
            Decorates the provided <see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
            <param name="request">Http request</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions">
            <summary>
            Encapsulates metadata about a request.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.ExecutionPath)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions"/> class with the specified execution path.
            </summary>
            <param name="executionPath">The execution path of the request.</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions.ExecutionPath">
            <summary>
            Gets the execution path indicating the execution path of the request.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager">
            <summary>
            Stashes or releases stateful messages based on direction from FeedRecoveryManager
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ISessionMessageManager" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager._log">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager._stashedItems">
            <summary>
            The <see cref="T:System.Collections.Generic.List`1"/> containing currently stashed(stored) items
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager._feedMessageMapper">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map feed messages
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.AliveReceived">
            <summary>
            Raised when a alive message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.SnapshotCompleteReceived">
            <summary>
            Raised when a snapshot_complete message is received from the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.FeedMessageReceived">
            <summary>
            Raised when other message is received from the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.ProcessorId">
            <summary>
            The processor identifier
            </summary>
            <value>The processor identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager"/> class
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.ProcessMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Processes and dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance to be processed</param>
            <param name="interest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.StashMessages(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int64)">
            <summary>
            Stashes the messages for specified request id and <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" />
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> for which we want to stash messages</param>
            <param name="requestId">The request identifier</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SessionMessageManager.ReleaseMessages(Sportradar.OddsFeed.SDK.Api.IProducer,System.Int64)">
            <summary>
            Releases messages for specified request id and <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" />
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> for which we want to release messages</param>
            <param name="requestId">The request identifier</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1">
            <summary>
            An entity dispatcher capable of dispatching sport specific entities
            </summary>
            <typeparam name="T">The type of the entities dispatched by the dispatcher</typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.EntityDispatcher`1" />
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1.OnClosed">
            <summary>
            Occurs after the current instance is closed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1.#ctor(Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1"/> class.
            </summary>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map the feed messages to messages used by the SDK</param>
            <param name="defaultCultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages as specified in the configuration</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1.OnOpening">
            <summary>
            When overridden in derived class, it executes steps needed when opening the instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.SpecificEntityDispatcher`1.OnClosing">
            <summary>
            When overridden in derived class, it executes steps needed when closing the instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker">
            <summary>
            Class used to track the timestamp and times of incoming messages in order to determine
            whether the feed is producing alive messages in a specified interval and if the user is
            processing messages in a timely matter.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker._maxInactivitySeconds">
            <summary>
            The max interval in seconds between live messages on a system session
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker._maxMessageAgeInSeconds">
            <summary>
            The maximum latency of the user messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker._aliveMessagesTimingInfo">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing timing info last alive message received on the users sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker._nonAliveMessagesTimingInfo">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing timing info last non-alive message received on the users sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker._systemAliveTimingInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo"/> used to track alive messages from the system session
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.SdkStartTime">
            <summary>
            Sdk start time (used for recovery initiation)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.IsBehind">
            <summary>
            Gets a value indicating whether the feed messages are processed in a timely manner
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.IsAliveViolated">
            <summary>
            Gets a value indicating whether the alive messages on a system session are received in a timely manner
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.OldestUserAliveTimestamp">
            <summary>
            Gets the timestamp of the oldest (the one that was generated first) alive message received on the user session.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.SystemAliveTimestamp">
            <summary>
            Gets the epoch timestamp specifying when the last system alive message received was generated
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Producer,System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker"/> class
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Producer"/> associated with the constructed instance</param>
            <param name="allInterests">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> for all created sessions</param>
            <param name="maxInactivitySeconds">The max interval in seconds between live messages on a system session</param>
            <param name="maxMessageAgeInSeconds">The maximum latency of the user messages</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.UpdateTimingInfo(System.Collections.Generic.IReadOnlyDictionary{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo},Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Updates the timing info in the provided dictionary
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> to modify</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> associated with the session which received the message</param>
            <param name="message">The received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.UpdateTimingInfoIfLatencyLower(System.Collections.Generic.IReadOnlyDictionary{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo},Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Updates the timing info in the provided dictionary if the latency on the existing entry is bigger than on the new one
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> to modify</param>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> associated with the session which received the message</param>
            <param name="message">The received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.ProcessUserMessage(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Records the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> timing info
            </summary>
            <param name="interest">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> associated with the session receiving the alive message</param>
            <param name="message">The received <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.ProcessSystemAlive(Sportradar.OddsFeed.SDK.Messages.Feed.alive)">
            <summary>
            Records the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message timing info received on the system session
            </summary>
            <param name="alive">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> message received on a system session</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.ToString">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String"/> representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo">
            <summary>
            Holds timing related info for a message received from the feed
            </summary>
            <remarks>
            This class is not thread safe
            </remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo.GeneratedAt">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo.Latency">
            <summary>
            Gets <see cref="T:System.TimeSpan"/> specifying the latency between message generate and receive time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo.Age">
            <summary>
            Gets a <see cref="T:System.TimeSpan"/> specifying how long ago the message was received
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo.#ctor(System.Int64)">
            <summary>
            Initialize a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo"/> class
            </summary>
            <param name="generatedAt">An epoch timestamp specifying when the message was generated</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.TimestampTracker.MessageTimingInfo.Update(System.Int64)">
            <summary>
            Updates the information held by the current instance
            </summary>
            <param name="generatedAt">Epoch time of the message generation</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> implementation representing a session with the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.MessageReceiver">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> used to provide feed messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession._messageProcessor">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor"/> instance used to process received messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession._messageValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator"/> instance used to validate received messages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession._messageDataExtractor">
            <summary>
            The A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor"/> instance used to extract basic message data from messages which could not be deserialized
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.MessageInterest">
            <summary>
            Specifies the type of messages handled by this <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession._getRoutingKeys">
            <summary>
            A callback used to determine the routing key the session should use when connecting to the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSession._sportSpecificDispatchers">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore"/> implementation used to store and access user registered dispatchers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.Name">
            <summary>
            Gets the name of the session
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnUnparsableMessageReceived">
            <summary>
            Raised when a message which cannot be parsed is received
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator,Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor,Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Func{Sportradar.OddsFeed.SDK.Api.Internal.UofSession,System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> class
            </summary>
            <param name="messageReceiver"> A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver"/> used to provide feed messages</param>
            <param name="messageProcessor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor"/> instance used to process received messages</param>
            <param name="messageMapper">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> used to map the feed messages to messages used by the SDK</param>
            <param name="messageValidator">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator"/> instance used to validate received messages</param>
            <param name="messageDataExtractor">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IMessageDataExtractor"/> instance used to extract basic message data from messages which could not be deserialized</param>
            <param name="dispatcherStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IDispatcherStore"/> implementation used to store and access user registered dispatchers</param>
            <param name="messageInterest">Specifies the type of messages handled by this <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/></param>
            <param name="defaultCultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the default languages as specified in the configuration</param>
            <param name="getRoutingKeys">Function to get appropriate routing keys based on the message interest</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnMessageReceived(System.Object,Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs)">
            <summary>
            Handles the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageReceived"/> event
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the instance raising the event</param>
            <param name="e">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs"/> instance containing event information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnMessageDeserializationFailed(System.Object,Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs)">
            <summary>
            Handles the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageDeserializationFailed" /> event.
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the instance raising the event.</param>
            <param name="eventArgs">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnMessageProcessed(System.Object,Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs)">
            <summary>
            Handles the <see cref="E:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor.MessageProcessed"/> event
            </summary>
            <param name="sender">A <see cref="T:System.Object"/> representation of the instance raising the event</param>
            <param name="e">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs"/> instance containing event information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.SelectDispatcher(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal"/> which should be used to dispatch the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance which needs to be dispatched.</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.IEntityDispatcherInternal"/> which should be used to dispatch the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.Dispatch(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.Byte[])">
            <summary>
            Dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
            <param name="message"></param>
            <param name="rawMessage"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnOpening">
            <summary>
            It executes steps needed when opening the instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.OnClosing">
            <summary>
            It executes steps needed when closing the instance
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSession.CreateSportSpecificMessageDispatcher``1">
            <summary>
            Constructs and returns a sport-specific <see cref="T:Sportradar.OddsFeed.SDK.Api.ISpecificEntityDispatcher`1" /> instance allowing processing of messages containing entity specific information
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived type specifying the entities associated with the created <see cref="T:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1" /> instance</typeparam>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.ISpecificEntityDispatcher`1" /></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder">
            <summary>
            A builder used to construct <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder._serviceProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.UofSdk"/> instance on which the build sessions will be constructed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder._msgInterest">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> instance specifying which messages will be received by constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder"/> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder._isBuild">
            <summary>
            Value indicating whether the current instance has been already used to build a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder.#ctor(System.IServiceProvider,System.Collections.Generic.IList{Sportradar.OddsFeed.SDK.Common.IOpenable},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder"/> class
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> instance with which the build sessions will be constructed</param>
            <param name="sessions">The list of current sessions</param>
            <param name="nodeId">The node id</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder.SetMessageInterest(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest)">
            <summary>
            Sets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying which messages will be received by the constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder"/> instance
            </summary>
            <param name="msgInterest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> instance specifying message interest</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.ISessionBuilder"/> instance used to perform further build tasks</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance constructed with objects provided in previous steps of the builder</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Internal.UofSessionBuilder.GetSessionRoutingKeys(Sportradar.OddsFeed.SDK.Api.Internal.UofSession)">
            <summary>
            Constructs and returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing routing keys for the specified session
            </summary>
            <param name="session">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.UofSession"/> for which to get the routing keys</param>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing routing keys for the specified session</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IProducer">
            <summary>
            Defines a contract for producer which use the feed to dispatch messages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.Id">
            <summary>
            Gets the id of the producer
            </summary>
            <value>The id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.Name">
            <summary>
            Gets the name of the producer
            </summary>
            <value>The name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.Description">
            <summary>
            Gets the description of the producer
            </summary>
            <value>The description</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.IsAvailable">
            <summary>
            Gets a value indicating whether the producer is available on feed
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.IsDisabled">
            <summary>
            Gets a value indicating whether the producer is disabled
            </summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.IsProducerDown">
            <summary>
            Gets a value indicating whether the producer is marked as down
            </summary>
            <value><c>true</c> if this instance is down; otherwise, <c>false</c></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.LastTimestampBeforeDisconnect">
            <summary>
            Gets the last timestamp before disconnect for this producer
            </summary>
            <value>The last timestamp before disconnect</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.MaxRecoveryTime">
            <summary>
            Gets the maximum recovery time (in seconds)
            </summary>
            <value>The maximum recovery time (in seconds)</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.MaxInactivitySeconds">
            <summary>
            Gets the maximum inactivity seconds
            </summary>
            <value>The maximum inactivity seconds</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.RecoveryInfo">
            <summary>
            Gets the recovery info about last recovery attempt
            </summary>
            <value>The recovery info about last recovery attempt</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.StatefulRecoveryWindow">
            <summary>
            Gets the stateful recovery window in minutes.
            </summary>
            <value>The stateful recovery window in minutes.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IProducer.Scope">
            <summary>
            Gets the scope of the producer
            </summary>
            <value>The scope</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo">
            <summary>
            Defines a contract for recovery info which contains data about last recovery attempt
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.After">
            <summary>
            Gets the after timestamp of the recovery or 0 if full recovery was done
            </summary>
            <value>The after</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.Timestamp">
            <summary>
            Gets the timestamp specifying when the recovery was initiated
            </summary>
            <value>The timestamp</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.RequestId">
            <summary>
            Gets the request identifier
            </summary>
            <value>The request identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.ResponseCode">
            <summary>
            Gets the response code of the recovery request
            </summary>
            <value>The response code of the recovery request</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.ResponseMessage">
            <summary>
            Gets the response message of the recovery request
            </summary>
            <value> the response message of the recovery request</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IRecoveryInfo.NodeId">
            <summary>
            Gets the node identifier
            </summary>
            <value>The node identifier</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.ISpecificEntityDispatcher`1">
            <summary>
            Defines a contract implemented by classes capable of dispatching only specific entities
            </summary>
            <typeparam name="T">Specifies the type of the entities that can be dispatched</typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.IOpenable" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1" />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IUofSdk">
            <summary>
            Represent a root object of the unified odds sdk
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.Disconnected">
            <summary>
            Raised when the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> loses connection to the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.Closed">
            <summary>
            Occurs when feed is closed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.ProducerDown">
            <summary>
            Raised when the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> instance determines that the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> associated with the odds feed went down
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.ProducerUp">
            <summary>
            Raised when the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> instance determines that the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> associated with the odds feed went up (back online)
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.RecoveryInitiated">
            <summary>
            Occurs when a recovery initiation completes
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSdk.ConnectionException">
            <summary>
            Occurs when an exception occurs in the connection loop
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.EventRecoveryRequestIssuer">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventRecoveryRequestIssuer"/> instance used to issue recovery requests to the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.CashOutProbabilitiesProvider">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICashOutProbabilitiesProvider"/> instance used to retrieve cash out probabilities for betting markets
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.SportDataProvider">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider"/> instance used to retrieve sport related data from the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.ProducerManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> instance used to retrieve producer related data
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.BookingManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IBookingManager"/> instance used to perform various booking calendar operations
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.BookmakerDetails">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails"/> instance used to get info about bookmaker and token used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.MarketDescriptionManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager"/> instance used to get info about available markets, and to get translations for markets and outcomes including outrights
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.CustomBetManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager"/> instance used to perform various custom bet operations
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdk.EventChangeManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager"/> instance used to automatically receive fixture and result changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSdk.GetSessionBuilder">
            <summary>
            Constructs and returns a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder"/>
            </summary>
            <returns>Constructed instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSdk.Open">
            <summary>
            Opens the current feed by opening all created sessions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSdk.IsOpen">
            <summary>
            Returns an indicator if the feed instance is opened or not
            </summary>
            <returns>Returns true if the sdk is opened, otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSdk.Close">
            <summary>
            Closes the current feed by closing all created sessions and disposing of all resources associated with the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IUofSdkForReplay">
            <summary>
            Represent a root object of the unified odds sdk when using Replay Server 
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSdkForReplay.ReplayManager">
            <summary>
            The replay manager for interaction with Replay Server
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IUofSession">
            <summary>
            Represents a session to the odds feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.IUofSession.Name">
            <summary>
            Gets the name of the session
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.IUofSession.OnUnparsableMessageReceived">
            <summary>
            Raised when a message which cannot be parsed is received
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSession.CreateSportSpecificMessageDispatcher``1">
            <summary>
            Constructs and returns a sport-specific <see cref="T:Sportradar.OddsFeed.SDK.Api.ISpecificEntityDispatcher`1"/> instance allowing
            processing of messages containing entity specific information
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the entities associated with the created <see cref="T:Sportradar.OddsFeed.SDK.Api.IEntityDispatcher`1"/> instance</typeparam>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Api.ISpecificEntityDispatcher`1"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder">
            <summary>
            Represents a first step when building a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder.SetMessageInterest(Sportradar.OddsFeed.SDK.Api.Config.MessageInterest)">
            <summary>
            Sets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying which type of messages should be received from the feed
            </summary>
            <param name="msgInterest">a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying which type of messages should be received from the feed</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.ISessionBuilder"/> representing the second step when building a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.ISessionBuilder">
            <summary>
            Represents a second step when building a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.ISessionBuilder.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance
            </summary>
            <returns>the built <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSession"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.IBookingManager">
            <summary>
            Defines a contract for classes implementing booking manager to perform various booking calendar operations
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IBookingManager.BookLiveOddsEvent(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Books the live odds event associated with the provided <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifier
            </summary>
            <param name="eventId">The event id</param>
            <returns><c>true</c> if event was successfully booked, <c>false</c> otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.ICashOutProbabilitiesProvider">
            <summary>
            Defines a type used to retrieve market probabilities used for cash out
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICashOutProbabilitiesProvider.GetCashOutProbabilitiesAsync``1(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the cash out probabilities for the specified sport event.
            </summary>
            <typeparam name="T">The type of the sport event</typeparam>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned data, or a null reference to use default languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICashOutProbabilitiesProvider.GetCashOutProbabilitiesAsync``1(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the cash out probabilities for the specified market on the specified sport event.
            </summary>
            <typeparam name="T">The type of the sport event</typeparam>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> uniquely identifying the sport event.</param>
            <param name="marketId">The id of the market for which to get the probabilities.</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing market specifiers or a null reference if market has no specifiers.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned data, or a null reference to use default languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager">
            <summary>
            Defines methods used to perform various custom bet operations
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager.CustomBetSelectionBuilder">
            <summary>
            Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to build selections
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to build selections</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager.GetAvailableSelectionsAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Returns an <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelections"/> instance providing the available selections for the event associated with the provided <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifier
            </summary>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifier of the event for which the available selections should be returned</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelections"/> providing the available selections of the associated event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager.CalculateProbabilityAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Returns an <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation"/> instance providing the probability for the specified selections
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be calculated</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation"/> providing the probability for the specified selections</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager.CalculateProbabilityFilterAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Returns an <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter"/> instance providing the probability for the specified selections and filter out conflicting outcomes.
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be calculated</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter"/> providing the probability for the specified selections</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder">
            <summary>
            Defines methods used to build selections
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.SetEventId(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Sets event id to the provided <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/>
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event id</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to set additional values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.SetMarketId(System.Int32)">
            <summary>
            Sets market id to the provided value
            </summary>
            <param name="marketId">A value representing the market id</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to set additional values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.SetSpecifiers(System.String)">
            <summary>
            Sets specifiers to the provided value
            </summary>
            <param name="specifiers">A value representing the specifiers</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to set additional values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.SetOutcomeId(System.String)">
            <summary>
            Sets outcome id to the provided value
            </summary>
            <param name="outcomeId">A value representing the outcome id</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to set additional values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.Build">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection"/> instance
            </summary>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.Build(Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.String,System.String,System.Nullable{System.Double})">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection"/> instance
            </summary>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the event id</param>
            <param name="marketId">A value representing the market id</param>
            <param name="specifiers">A value representing the specifiers</param>
            <param name="outcomeId">A value representing the outcome id</param>
            <param name="odds">A odds value for the outcome</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder.SetOdds(System.Double)">
            <summary>
            Sets outcome odds to the provided value
            </summary>
            <param name="odds">A value representing the outcome odds</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetSelectionBuilder"/> instance used to set additional values</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager">
            <summary>
            Defines a contract implemented by classes capable of getting list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange"/> and/or <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange"/>
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.FixtureChange">
            <summary>
            Raised for <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange"/> message
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.ResultChange">
            <summary>
            Raised for <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange"/> message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.LastFixtureChange">
            <summary>
            Gets the timestamp of last processed fixture change
            </summary>
            <value>The last fixture change.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.LastResultChange">
            <summary>
            Gets the timestamp of last processed result change
            </summary>
            <value>The last result change.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.FixtureChangeInterval">
            <summary>
            Gets the interval for getting new list of fixture changes
            </summary>
            <value>The fixture change interval.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.ResultChangeInterval">
            <summary>
            Gets the interval for getting new list of result changes
            </summary>
            <value>The result change interval.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.IsRunning">
            <summary>
            Gets a value indicating whether this instance is running.
            </summary>
            <value><c>true</c> if this instance is running; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.SetFixtureChangeInterval(System.TimeSpan)">
            <summary>
            Sets the fixture change interval between two Sports API requests. Must be between 1 min and 12 hours.
            </summary>
            <param name="fixtureChangeInterval">The fixture change interval.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.SetResultChangeInterval(System.TimeSpan)">
            <summary>
            Sets the result change interval between two Sports API requests. Must be between 1 min and 12 hours.
            </summary>
            <param name="resultChangeInterval">The result change interval.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.SetFixtureChangeTimestamp(System.DateTime)">
            <summary>
            Sets the last processed fixture change timestamp.
            </summary>
            <param name="fixtureChangeTimestamp">The fixture change timestamp.</param>
            <remarks>It can be only set when it is stopped</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.SetResultChangeTimestamp(System.DateTime)">
            <summary>
            Sets the last processed result change timestamp.
            </summary>
            <param name="resultChangeTimestamp">The result change timestamp.</param>
            <remarks>It can be only set when it is stopped</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.Start">
            <summary>
            Starts scheduled job for fetching fixture and result changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager.Stop">
            <summary>
            Stops scheduled job for fetching fixture and result changes
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventRecoveryRequestIssuer">
            <summary>
            Defines a contract implemented by classes used to issue event message recovery requests to the feed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventRecoveryRequestIssuer.RecoverEventMessagesAsync(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously requests messages for the specified sport event and returns a request number used when issuing the request
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event for which to request the messages</param>
            <returns> <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IEventRecoveryRequestIssuer.RecoverEventStatefulMessagesAsync(Sportradar.OddsFeed.SDK.Api.IProducer,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously requests stateful messages for the specified sport event and returns a request number used when issuing the request
            </summary>
            <param name="producer">An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to make the recovery</param>
            <param name="eventId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event for which to request the messages</param>
            <returns> <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager">
            <summary>
            Used to obtain information about available markets and get translations for markets and outcomes including outrights
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager.GetMarketDescriptionsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of all available static market descriptions
            </summary>
            <param name="culture">The language for which to get market descriptions</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available static market descriptions</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager.GetMarketMappingAsync(System.Int32,Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination
            </summary>
            <param name="marketId">The id of the market for which you need the mapping</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which you need the mapping</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager.GetMarketMappingAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination
            </summary>
            <param name="marketId">The id of the market for which you need the mapping</param>
            <param name="specifiers">The associated market specifiers</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which you need the mapping</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of available mappings for the provided marketId/producer combination</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager.LoadMarketDescriptionsAsync">
            <summary>
            Asynchronously loads the invariant and variant list of market descriptions from the Sports API
            </summary>
            <remarks>To be used when manually changed market data via betradar control</remarks>
            <returns>Returns true if the action succeeded</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager.DeleteVariantMarketDescriptionFromCache(System.Int32,System.String)">
            <summary>
            Deletes the variant market description from cache
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="variantValue">The variant value</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager">
            <summary>
            Defines a contract implemented by classes used to manage feed producers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.Producers">
            <summary>
            Gets the available producers
            </summary>
            <value>The producers</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.DisableProducer(System.Int32)">
            <summary>
            Disables the producer (no recovery will be made and not message will be received)
            </summary>
            <param name="id">The id of the producer</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The id of the producer is not found</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.GetProducer(System.Int32)">
            <summary>
            Gets the producer if exists, otherwise 'unknown' producer is returned
            </summary>
            <param name="id">The id of the producer to retrieve</param>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.GetProducer(System.String)">
            <summary>
            Gets the producer by name if exists, otherwise 'unknown' producer is returned
            </summary>
            <param name="name">The name of the producer to retrieve</param>
            <remarks>Search is case insensitive</remarks>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.Exists(System.Int32)">
            <summary>
            Check if the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> exists in manager
            </summary>
            <param name="id">The id to check</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.Exists(System.String)">
            <summary>
            Check if the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> exists in manager
            </summary>
            <param name="name">The name to check</param>
            <returns><c>true</c> if exists, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.AddTimestampBeforeDisconnect(System.Int32,System.DateTime)">
            <summary>
            Sets the timestamp of the last processed message for a specific producer
            </summary>
            <param name="id">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> for which to set timestamp</param>
            <param name="timestamp">A <see cref="T:System.DateTime" /> specifying the message timestamp</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The timestamp is in the future or to far in the past</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager.RemoveTimestampBeforeDisconnect(System.Int32)">
            <summary>
            Removes the timestamp of the last message processed for a specific producer
            </summary>
            <param name="id">An id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> for which to remove the timestamp</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The id of the producer is not found</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider">
            <summary>
            Defines a contract implemented by classes used to provide sport related data (sports, tournaments, sport events, ...)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetSportsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing all available sports in language specified by the <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> instance representing the sport specified by it's id in the language specified by <c>culture</c>, or a null reference if sport with specified id does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport to retrieve.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetLiveSportEventsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing currently live sport events in the language specified by <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetSportEventsByDateAsync(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing sport events scheduled for date specified by <c>date</c> in language specified by <c>culture</c>
            </summary>
            <param name="scheduleDate">A <see cref="T:System.DateTime"/> specifying the day for which to retrieve the schedule</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetTournament(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the specified tournament in language specified by <c>culture</c> or a null reference if the tournament with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the tournament to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the specified tournament or a null reference if requested tournament does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetCompetition(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event in language specified by <c>culture</c> or a null reference if the sport event with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event or a null reference if the requested sport event does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetCompetition(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event in language specified by <c>culture</c> or a null reference if the sport event with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event to retrieve</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the sport this event belongs to</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> representing the specified sport event or a null reference if the requested sport event does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetSportEvent(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived class representing the specified sport event in language specified by <c>culture</c> or a null reference if the sport event with
            specified <c>id</c> does not exist
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event to retrieve</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the sport this event belongs to</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived class representing the specified sport event or a null reference if the requested sport event does not exist</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetSportEventStatusAsync(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> for specific sport event
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the event for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> to be retrieved</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/>
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> to be retrieved</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> representing the specified competitor or a null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetPlayerProfileAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/>
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id for which <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> to be retrieved</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> representing the specified player or a null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.DeleteSportEventFromCache(Sportradar.OddsFeed.SDK.Common.Urn,System.Boolean)">
            <summary>
            Delete the sport event from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> to be deleted</param>
            <param name="includeEventStatusDeletion">Delete also <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus"/> from the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.DeleteTournamentFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the tournament from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.DeleteCompetitorFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the competitor from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.DeletePlayerProfileFromCache(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Delete the player profile from cache
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/> to be deleted</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetListOfSportEventsAsync(System.Int32,System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists almost all events we are offering prematch odds for. This endpoint can be used during early startup to obtain almost all fixtures. This endpoint is one of the few that uses pagination.</remarks>
            <param name="startIndex">Starting record (this is an index, not time)</param>
            <param name="limit">How many records to return (max: 1000)</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetActiveTournamentsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of active <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <remarks>Lists all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> that are cached (once schedule is loaded)</remarks>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetAvailableTournamentsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of available <see cref="T:System.Collections.Generic.IEnumerable`1"/> for a specific sport
            </summary>
            <remarks>Lists all available tournaments for a sport event we provide coverage for</remarks>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport to retrieve</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.DeleteSportEventsFromCache(System.DateTime)">
            <summary>
            Deletes the sport events from cache which are scheduled before specified date
            </summary>
            <param name="before">The scheduled DateTime used to delete sport events from cache</param>
            <returns>Number of deleted items</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.CacheExportAsync(Sportradar.OddsFeed.SDK.Common.Enums.CacheType)">
            <summary>
            Exports current items in the cache
            </summary>
            <param name="cacheType">Specifies what type of cache items will be exported</param>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.CacheImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Imports provided items into caches
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing the items to be imported</param>
            <returns>No return</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetFixtureChangesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetFixtureChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all fixtures that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all fixtures that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetResultChangesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetResultChangesAsync(System.Nullable{System.DateTime},Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Gets the list of all results that have changed in the last 24 hours
            </summary>
            <param name="after">A <see cref="T:System.DateTime"/> specifying the starting date and time for filtering</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport for which the fixtures should be returned</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of all results that have changed in the last 24 hours</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetLotteriesAsync(System.Globalization.CultureInfo)">
            <summary>
            Gets the list of available lotteries
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language or a null reference to use the languages specified in the configuration</param>
            <returns>A list of available lotteries</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetPeriodStatusesAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Get sport event period summary as an asynchronous operation
            </summary>
            <param name="id">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <param name="competitorIds">The list of competitor ids to fetch the results for</param>
            <param name="periods">The list of period ids to fetch the results for</param>
            <returns>The period statuses or empty if not found</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider.GetTimelineEventsAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Get the associated event timeline for a single culture
            </summary>
            <param name="sportEventId">The id of the sport event to be fetched</param>
            <param name="culture">The language to be fetched</param>
            <returns>The event timeline or empty if not found</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayEvent">
            <summary>
            Defines a contract implemented by classes representing replay events
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayEvent.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the event id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayEvent.Position">
            <summary>
            Gets a <see cref="T:System.Int32"/> specifying the position
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayEvent.StartTime">
            <summary>
            Gets a <see cref="T:System.Int32"/> specifying the start time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager">
            <summary>
            Defines a contract implemented by classes capable of interacting with Replay Server
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.AddMessagesToReplayQueue(Sportradar.OddsFeed.SDK.Common.Urn,System.Nullable{System.Int32})">
            <summary>
            Adds event {eventId} to the end of the replay queue
            </summary>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch" /></param>
            <param name="startTime">The minutes relative to event start time</param>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.RemoveEventFromReplayQueue(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Removes the event from replay queue
            </summary>
            <param name="eventId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/></param>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.GetEventsInQueue">
            <summary>
            Gets the events in replay queue.
            </summary>
            <returns>Returns an array of event ids</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.StartReplay(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Start replay the event from replay queue. Events are played in the order they were played in reality
            </summary>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages in milliseconds</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.StartReplayScenario(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Starts playing a predefined scenario
            </summary>
            <param name="scenarioId">The identifier of the scenario that should be played</param>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages in milliseconds</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.StopReplay">
            <summary>
            Stop the player if it is currently playing. If player is already stopped, nothing will happen.
            </summary>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.StopAndClearReplay">
            <summary>
            Stop the player if it is currently playing and clear the replay queue. If player is already stopped, the queue is cleared.
            </summary>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.GetStatusOfReplay">
            <summary>
            Return the status of player. Possible values are: player is playing, player is stopped, player was never playing.
            </summary>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.GetAvailableScenarios">
            <summary>
            Gets a list of available replay scenarios
            </summary>
            <returns>A list of available replay scenarios</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.StartReplay(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Start replay the event from replay queue. Events are played in the order they were played in reality
            </summary>
            <param name="speed">The speed factor of the replay</param>
            <param name="maxDelay">The maximum delay between messages in milliseconds</param>
            <param name="producerId">The id of the producer from which we want to get messages, or null for messages from all producers</param>
            <param name="rewriteTimestamps">Should the timestamp in messages be rewritten with current time</param>
            <param name="runParallel">Should the events in queue replay independently</param>
            <remarks>Start replay the event from replay queue. Events are played in the order they were played in reality, e.g. if there are some events that were played simultaneously in reality, they will be played in parallel as well here on replay server. If not specified, default values speed = 10 and max_delay = 10000 are used. This means that messages will be sent 10x faster than in reality, and that if there was some delay between messages that was longer than 10 seconds it will be reduced to exactly 10 seconds/10 000 ms (this is helpful especially in pre-match odds where delay can be even a few hours or more). If player is already in play, nothing will happen</remarks>
            <returns>Returns an <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.Replay.IReplayManager.GetReplayEventsInQueue">
            <summary>
            Gets list of replay events in queue.
            </summary>
            <returns>Returns a list of replay events</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse">
            <summary>
            Defines a contract for responses from Replay Server
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse.ErrorMessage">
            <summary>
            Gets the error message, if error occurred, otherwise empty
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse.Message">
            <summary>
            Gets the message of the response
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse.Success">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayResponse"/> is success.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario">
            <summary>
            Defines a contract for replay scenario instances
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario.Id">
            <summary>
            Gets the id of the scenario
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario.Description">
            <summary>
            Gets the description of the scenario
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario.RunParallel">
            <summary>
            Gets an indication if the scenario can be run in parallel
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayScenario.AssociatedEventIds">
            <summary>
            Gets the associated event identifiers
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus">
            <summary>
            Defines a contract for status of replay player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus.PlayerStatus">
            <summary>
            Gets the player status. Possible values are: player is playing, player is stopped, player was never playing.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.Replay.IReplayStatus.LastMessageFromEvent">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event in last message
            </summary>
            <value>The last message from event.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus">
            <summary>
            Status of the replay player
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus.NotStarted">
            <summary>
            Player was never playing
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus.Playing">
            <summary>
            Player is currently playing
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus.Stopped">
            <summary>
            Player is stopped
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.Replay.ReplayPlayerStatus.SettingUp">
            <summary>
            The setting up
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.UofSdk">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> implementation acting as an entry point to the odds feed SDK
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk.ServiceProvider">
            <summary>
            A service provider where all the UofSdk services are registered
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._log">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._isDisposed">
            <summary>
            Value indicating whether the instance has been disposed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._opened">
            <summary>
            Value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> instance is already opened
            0 indicates false; 1 indicates true
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._connectionFactory">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.ConfiguredConnectionFactory"/> instance representing the connection to the message broker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk.Sessions">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> containing all user constructed sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk.UofConfig">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Config.UofConfiguration"/> representing sdk configuration
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.Disconnected">
            <summary>
            Raised when the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> loses connection to the feed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.Closed">
            <summary>
            Occurs when feed is closed
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.EventRecoveryCompleted">
            <summary>
            Occurs when a requested event recovery completes
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.RecoveryInitiated">
            <summary>
            Occurs when a recovery initiation completes
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.ProducerDown">
            <summary>
            Raised when the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk" /> instance determines that the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> associated with
            the odds feed went down
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.ProducerUp">
            <summary>
            Raised when the current <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk" /> instance determines that the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> associated with
            the odds feed went up (back online)
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Api.UofSdk.ConnectionException">
            <summary>
            Occurs when an exception occurs in the connection loop
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.EventRecoveryRequestIssuer">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventRecoveryRequestIssuer"/> instance used to issue recovery requests to the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.SportDataProvider">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ISportDataProvider" /> instance used to retrieve sport related data from the feed
            </summary>
            <value>The sport data provider</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.ProducerManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager" /> instance used to retrieve producer related data
            </summary>
            <value>The producer manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.BookingManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IBookingManager" /> instance used to perform various booking calendar operations
            </summary>
            <value>The booking manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.CashOutProbabilitiesProvider">
            <summary>
            Gets the<see cref= "T:Sportradar.OddsFeed.SDK.Api.Managers.ICashOutProbabilitiesProvider" /> instance used to retrieve cash out probabilities for betting markets
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.BookmakerDetails">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails"/> instance used to get info about bookmaker and token used
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.MarketDescriptionManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IMarketDescriptionManager"/> instance used to get info about available markets, and to get translations for markets and outcomes including outrights
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.CustomBetManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.ICustomBetManager" /> instance used to perform various custom bet operations
            </summary>
            <value>The custom bet manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdk.EventChangeManager">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IEventChangeManager"/> instance used to automatically receive fixture and result changes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._feedRecoveryManager">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager"/> for managing recoveries and producer statuses in sessions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Api.UofSdk._connectionValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.ConnectionValidator"/> used to detect potential connectivity issues
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.UofSdk"/> class
            </summary>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance including UofSdk configuration</param>
            <param name="isReplay">Value indicating whether the constructed instance will be used to connect to replay server</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.#ctor(System.IServiceProvider)">
            <summary>
            Constructs a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.UofSdk"/> class
            </summary>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance including UofSdk configuration</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.MarkProducerAsDown(System.Object,Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs)">
            <summary>
            Marks the producer as down indicating the state of the SDK is NOT in sync with the state of the feed
            or that the producer associated with the producer is experiencing issues
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager"/> instance raising the event</param>
            <param name="e">The <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs"/> instance containing the event data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.MarkProducerAsUp(System.Object,Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs)">
            <summary>
            Marks the producer as up indicating the state of the SDK is in sync with the state of the feed
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Recovery.IFeedRecoveryManager"/> instance raising the event</param>
            <param name="e">The <see cref="T:Sportradar.OddsFeed.SDK.Api.EventArguments.ProducerStatusChangeEventArgs"/> instance containing the event data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Dispose">
            <summary>
            Disposes the current instance and resources associated with it
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Sportradar#OddsFeed#SDK#Api#Internal#IGlobalEventDispatcher#DispatchDisconnected">
            <summary>
            Dispatches the information that the connection to the feed was lost
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Sportradar#OddsFeed#SDK#Api#Internal#IGlobalEventDispatcher#DispatchEventRecoveryCompleted(System.Int64,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Dispatches the information that the requested event recovery completed
            <param name="requestId">The identifier of the recovery request</param>
            <param name="eventId">The associated event identifier</param>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.DispatchConnectionException(RabbitMQ.Client.Events.CallbackExceptionEventArgs)">
            <summary>
            Dispatches the information that the exception was thrown in connection loop
            </summary>
            <param name="callbackExceptionEventArgs">The information about the exception</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Sportradar#OddsFeed#SDK#Api#Internal#IGlobalEventDispatcher#DispatchProducerDown(Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange)">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> message
            </summary>
            <param name="producerStatusChange">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> instance to be dispatched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Sportradar#OddsFeed#SDK#Api#Internal#IGlobalEventDispatcher#DispatchProducerUp(Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange)">
            <summary>
            Dispatches the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> message
            </summary>
            <param name="producerStatusChange">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange"/> instance to be dispatched</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.GetConfigurationBuilder">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance from provided information
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> instance created from provided information</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.GetSessionBuilder">
            <summary>
            Constructs and returns a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder"/>
            </summary>
            <returns>Constructed instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSessionBuilder"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.AvailableLanguages">
            <summary>
            Get all available languages that can be used within SDK and are supported on feed messages
            </summary>
            <returns>List&lt;CultureInfo&gt;</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Open">
            <summary>
            Opens the current feed by opening all created sessions
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.InvalidOperationException">
            The feed is already opened
            or
            The configuration is not valid
            </exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">
            Connection to the REST-ful API failed, Probable Reason={Invalid or expired token}
            or
            Connection to the message broker failed, Probable Reason={Invalid or expired token}
            or
            </exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.IsOpen">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Close">
            <summary>
            Closes the current <see cref="T:Sportradar.OddsFeed.SDK.Api.UofSdk"/> instance and disposes resources used by it
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.Dispose(System.Boolean)">
            <summary>
            Disposes the current instance and resources associated with it
            </summary>
            <param name="disposing">Value indicating whether the managed resources should also be disposed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdk.OnConnectionShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)">
            <summary>
            Invoked when the connection to the message broken was shutdown
            </summary>
            <param name="sender">The connection that was shutdown</param>
            <param name="shutdownEventArgs">A <see cref="T:RabbitMQ.Client.ShutdownEventArgs"/> containing additional event information</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Api.UofSdkForReplay">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.IUofSdk"/> implementation acting as an entry point to the odds feed Replay Service for doing integration tests against played matches that are older than 48 hours
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Api.UofSdkForReplay.ReplayManager">
            <summary>
            The replay manager for interaction with xReplay Server
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Api.UofSdkForReplay.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Api.UofSdkForReplay"/> class
            </summary>
            <param name="serviceProvider">A <see cref="T:System.IServiceProvider"/> instance including UofSdk configuration</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.CacheType">
            <summary>
            Enumerates the types of the caches supported by the SDK
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.CacheType.SportData">
            <summary>
            Cache used to hold sport data items (sports and categories)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.CacheType.SportEvent">
            <summary>
            Cache used to hold sport event items (tournaments, matches, seasons...)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.CacheType.Profile">
            <summary>
            Cache used to hold profile items (player and competitor profiles)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.CacheType.All">
            <summary>
            All caches
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy">
            <summary>
            Enumerates sdk exception handling strategies
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy.Throw">
            <summary>
            Specifies a strategy in which none of the exceptions are thrown to caller
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy.Catch">
            <summary>
            Specifies a strategy in which all exceptions are handled by the called instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType">
            <summary>
            Enumeration of all possible types of logger used in sdk. Each can have unique settings in log4net.config file.
            </summary>
            <remarks>Default is execution log</remarks>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.Execution">
            <summary>
            The execution log
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.FeedTraffic">
            <summary>
            Log for the feed traffic
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.RestTraffic">
            <summary>
            Log for the rest traffic
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.ClientInteraction">
            <summary>
            The client iteration log
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.Cache">
            <summary>
            Log for the cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType.Stats">
            <summary>
            Log for the SDK statistics
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.MessageType">
            <summary>
            Enumerates the types of the messages received from the feed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.Unknown">
            <summary>
            Indicating the type of the message could not be determined
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.ProducerDown">
            <summary>
            A message indicating that a producer associated with the feed went down
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.SnapshotComplete">
            <summary>
            A message indicating all messages with a specific snapshot request were delivered
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.Alive">
            <summary>
            A message periodically send by all feed associated producers indicating their status
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.FixtureChange">
            <summary>
            A message indicating that a status of a specific fixture has changed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.BetStop">
            <summary>
            A message indicating that betting on specified markets should be stopped
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.BetCancel">
            <summary>
            A message indicating that bets placed on specified markets should be canceled
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.RollbackBetCancel">
            <summary>
            A message specifying that changes made by the associated bet cancel should be un-done
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.BetSettlement">
            <summary>
            A message specifying that bets associated with specified markets should be settled
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.RollbackBetSettlement">
            <summary>
            A message specifying that changes made by the associated bet settlement should be un-done
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.MessageType.OddsChange">
            <summary>
            A message specifying that odds for specified markets have changed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.PropertyUsage">
            <summary>
            Enumerates property usage requirements
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.PropertyUsage.Forbidden">
            <summary>
            The value of the property must not be specified
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.PropertyUsage.Optional">
            <summary>
            The usage of the property is optional
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.PropertyUsage.Required">
            <summary>
            The usage of the property is required
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup">
            <summary>
            Enumerates groups of resources represented by the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Match">
            <summary>
            The resource represents a sport event of match type
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Stage">
            <summary>
            The resource represents a sport event of stage type
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Tournament">
            <summary>
            The resource represents a tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.BasicTournament">
            <summary>
            The basic tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Season">
            <summary>
            The resource represents a (tournament) season
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Other">
            <summary>
            The non-specific urn type specifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Unknown">
            <summary>
            The unknown resource type
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Draw">
            <summary>
            The resource represents lottery draw
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup.Lottery">
            <summary>
            The resource represents lottery
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment">
            <summary>
            Enumeration of all possible environments
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.Production">
            <summary>
            The production
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.Replay">
            <summary>
            The replay
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.Integration">
            <summary>
            The integration
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.GlobalProduction">
            <summary>
            The global production
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Enums.SdkEnvironment.GlobalIntegration">
            <summary>
            The global integration
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">
            <summary>
            An exception thrown by the SDK cache components when the requested key was not found in the cache
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.Key">
            <summary>
            Gets the key requested key
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="key">The key requested key</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" /> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">
            <summary>
            An exception thrown by the SDK when an error occurred while communicating with external source (Feed REST-ful API)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.Url">
            <summary>
            Gets the string representation of the url specifying the resource which was being accessed
            </summary>
            <value>The URL.</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.ResponseCode">
            <summary>
            Gets the <see cref="T:System.Net.HttpStatusCode"/> specifying the response's status code
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.Response">
            <summary>
            Gets the string representation of the response received from the external source (actual xml response or response message)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="url">The string representation of the url specifying the resource which was being accessed .</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.#ctor(System.String,System.String,System.Net.HttpStatusCode,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="url">The string representation of the url specifying the resource which was being accessed .</param>
            <param name="responseCode">A <see cref="T:System.Net.HttpStatusCode"/> specifying the response code</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.#ctor(System.String,System.String,System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="url">The string representation of the url specifying the resource which was being accessed .</param>
            <param name="responseCode">A <see cref="T:System.Net.HttpStatusCode"/> specifying the response code</param>
            <param name="response">A string representation of the response received from the external source</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">
            <summary>
            An exception thrown by the SDK when a deserialization of the xml received from the feed fails
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.Xml">
            <summary>
            Gets the data which could not be deserialized
            </summary>
            <value>The XML.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.RootElementName">
            <summary>
            Gets the name of the root XMl element associated with the exception or a null reference if element name could not be determined
            </summary>
            <value>The name of the root element.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="xml">The data which could not be deserialized</param>
            <param name="rootElementName">The name of the root XML element associated with the exception or a null reference if element name could not be determined</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException">
            <summary>
            A base class for all exceptions thrown by the feed SDK
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">
            <summary>
            An exception thrown by the SDK when the entity received from the feed could not be mapped to entity used by the SDK
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.PropertyName">
            <summary>
            Gets the name of the property which caused the exception.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.PropertyValue">
            <summary>
            Gets the <see cref="T:System.String"/> representation of the property value which caused the exception.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.TargetTypeName">
            <summary>
            Gets the <see cref="P:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.TargetTypeName"/> of the target entity.
            </summary>
            <value>The name of the target type.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.#ctor(System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="propertyName">The name of the property which caused the exception</param>
            <param name="propertyValue">The <see cref="T:System.String"/> representation of the property value which caused the exception</param>
            <param name="targetTypeName">The <see cref="P:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.TargetTypeName"/> of the target entity</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">
            <summary>
            An exception thrown by name expressions when the name cannot be build
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException">
            <summary>
            An exception when the name for a market or outcome could not be generated
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.MarketId">
            <summary>
            Gets the id of the market associated with name generation that caused the exception
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.MarketSpecifiers">
            <summary>
            Gets the specifiers of the market associated with name generation that caused the exception
            </summary>
            <value>The market specifiers.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.OutcomeId">
            <summary>
            Gets the id of the outcome whose name generation caused the exception, or a null reference if the name generation was invoked on market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.NameDescriptor">
            <summary>
            Gets the name descriptor used when generating the name, or a null reference if name descriptor could not be found
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.Culture">
            <summary>
            Gets the <see cref="T:System.Globalization.CultureInfo"/> instance specifying the language associated with the name generation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.#ctor(System.String,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String,System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="marketId">The id of the market associated with name generation that caused the exception</param>
            <param name="marketSpecifiers">The specifiers of the market associated with name generation that caused the exception</param>
            <param name="outcomeId">The id of the outcome whose name generation caused the exception, or a null reference if the name generation was invoked on market</param>
            <param name="nameDescriptor">The name descriptor used when generating the name, or a null reference if name descriptor could not be found</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> instance specifying the language associated with the name generation</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException">
            <summary>
            An exception thrown when the requested object is not found
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.FeedSdkException" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.ObjectNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException">
            <summary>
            An exception thrown when the recovery operation cannot be initiated due to after param to far in the past
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.After">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the after parameter of the failed recovery
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException"/> class
            </summary>
            <param name="message">The exception message</param>
            <param name="after">The after parameter of the recovery operation that caused the exception</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.#ctor(System.String,System.DateTime,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException"/> class
            </summary>
            <param name="message">The exception message</param>
            <param name="after">The after parameter of the recovery operation that caused the exception</param>
            <param name="inner">The <see cref="T:System.Exception"/> that caused the current exception to be thrown</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Exceptions.RecoveryInitiationException.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Extensions.DependencyInjectionExtensions">
            <summary>
            Extensions for Microsoft.Extensions.DependencyInjection
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.DependencyInjectionExtensions.AddUofSdk(Microsoft.Extensions.DependencyInjection.IServiceCollection,Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration)">
            <summary>
            Add all sdk services to service collection
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">An <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.IUofConfiguration"/> used to configure sdk services</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Extensions.EpochTimeExtensions">
            <summary>
            Class defining extension methods for epoch date time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.EpochTimeExtensions.FromEpochTime(System.Int64)">
            <summary>
            Convert long epoch time to DateTime
            </summary>
            <param name="epochTime">The UNIX time</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.EpochTimeExtensions.ToEpochTime(System.DateTime)">
            <summary>
            Convert DateTime to the epoch time (in seconds)
            </summary>
            <param name="date">The date</param>
            <returns>System.Int64</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Extensions.ListExtensions">
            <summary>
            Class defining extension methods for IEnumerable
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.ListExtensions.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
            Check if IEnumerable is null or empty
            </summary>
            <param name="list">The list to be checked for null or empty</param>
            <returns>True is yes, otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.ListExtensions.AddUnique``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            Add new item to collection only if not present already
            </summary>
            <typeparam name="T">The type saved in the collection</typeparam>
            <param name="collection">The original collection</param>
            <param name="item">The item to be added to the collection</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Extensions.ProducerExtensions">
            <summary>
            Class defining extension methods for <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.ProducerExtensions.MaxAfterAge(Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Returns a <see cref="T:System.TimeSpan"/> specifying the max age of after param when doing a after timestamp recovery
            </summary>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> associated with the after timestamp recovery.</param>
            <returns>A <see cref="T:System.TimeSpan"/> specifying the max age of after param when doing a after timestamp recovery.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Extensions.StreamExtensions">
            <summary>
            Defines extension methods for stream used by the sdk
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Extensions.StreamExtensions.GetData(System.IO.Stream)">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the provided <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> whose content to get.</param>
            <returns>A <see cref="T:System.String"/> representation of the <see cref="T:System.IO.Stream"/> content.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.ExecutionHelper">
            <summary>
            Helper for execution actions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ExecutionHelper.Safe(System.Action)">
            <summary>
            Try to safely execute action (exception ignored)
            </summary>
            <param name="action">Action to be invoked</param>
            <returns>Indication if the action completed successfully</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ExecutionHelper.SafeAsync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Try to safely execute action (exception ignored)
            </summary>
            <param name="asyncFunction">Action to be invoked</param>
            <returns>Indication if the action completed successfully</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ExecutionHelper.SafeAsync``1(System.Func{``0,System.Threading.Tasks.Task},``0)">
            <summary>
            Try to safely execute action (exception ignored)
            </summary>
            <param name="asyncFunction">Action to be invoked</param>
            <param name="functionArg1">The first argument for function</param>
            <returns>Indication if the action completed successfully</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ExecutionHelper.SafeAsync``2(System.Func{``0,``1,System.Threading.Tasks.Task},``0,``1)">
            <summary>
            Try to safely execute action (exception ignored)
            </summary>
            <param name="asyncFunction">Action to be invoked</param>
            <param name="functionArg1">The first argument for function</param>
            <param name="functionArg2">The second argument for function</param>
            <returns>Indication if the action completed successfully</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.SemaphoreSlimExtensions">
            <summary>
            Defines extension methods used by the SDK
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.SemaphoreSlimExtensions.WaitSafe(System.Threading.SemaphoreSlim)">
            <summary>
            Enters the <see cref="T:System.Threading.SemaphoreSlim"/> by invoking <see cref="M:System.Threading.SemaphoreSlim.Wait"/> in a safe manner that will
            not throw an exception if the semaphore is already disposed
            </summary>
            <param name="semaphore">The <see cref="T:System.Threading.SemaphoreSlim"/> on which to wait</param>
            <returns>True if entering the semaphore succeeded (e.g. instance was not yet disposed); otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.SemaphoreSlimExtensions.WaitAsyncSafe(System.Threading.SemaphoreSlim)">
            <summary>
            Asynchronously enters the <see cref="T:System.Threading.SemaphoreSlim"/> by invoking <see cref="M:System.Threading.SemaphoreSlim.WaitAsync"/> in a safe manner that will
            not throw an exception if the semaphore is already disposed
            </summary>
            <param name="semaphore">The <see cref="T:System.Threading.SemaphoreSlim"/> on which to wait</param>
            <returns>True if entering the semaphore succeeded (e.g. instance was not yet disposed); otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.SemaphoreSlimExtensions.WaitAsyncSafe(System.Threading.SemaphoreSlim,System.TimeSpan)">
            <summary>
            Asynchronously enters the <see cref="T:System.Threading.SemaphoreSlim"/> by invoking <see cref="M:System.Threading.SemaphoreSlim.WaitAsync"/> in a safe manner that will
            not throw an exception if the semaphore is already disposed
            </summary>
            <param name="semaphore">The <see cref="T:System.Threading.SemaphoreSlim"/> on which to wait</param>
            <param name="timeout">The timeout for the semaphore</param>
            <returns>True if entering the semaphore succeeded (e.g. instance was not yet disposed); otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.SemaphoreSlimExtensions.ReleaseSafe(System.Threading.SemaphoreSlim)">
            <summary>
            Releases the <see cref="T:System.Threading.SemaphoreSlim"/> by invoking <see cref="M:System.Threading.SemaphoreSlim.Release"/> in a safe manner that will
            not throw an exception if the semaphore is already disposed
            </summary>
            <param name="semaphore">The <see cref="T:System.Threading.SemaphoreSlim"/> to be released</param>
            <returns>True if releasing the semaphore succeeded (e.g. instance was not yet disposed); otherwise false</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.StringExtensions">
            <summary>
            String extensions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncate the string to max length
            </summary>
            <param name="value">String to be truncated</param>
            <param name="maxLength">Max length of the returned string</param>
            <returns>Truncated string</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.StringExtensions.FixedLength(System.String,System.Int32,System.Boolean)">
            <summary>
            Return the fixed length of the string. If input to short it adds spaces, if too long, it is truncated
            </summary>
            <param name="value">¸Input string</param>
            <param name="length">Length of the returned string</param>
            <param name="postfix">If the spaces are added pre- or post- string</param>
            <returns>Fixed length string</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            Check string if it is null or empty
            </summary>
            <param name="value">Input string</param>
            <returns>Value indicating if the string is null or empty</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.UrnExtensions">
            <summary>
            Urn extensions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.UrnExtensions.IsCompetition(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Determines whether Urn represents a competition sport event
            </summary>
            <param name="urn"></param>
            <returns><c>true</c> if represents competition; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Extensions.UrnExtensions.IsLongTermEvent(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Determines whether Urn represents a long term event
            </summary>
            <param name="urn"></param>
            <returns><c>true</c> if represents long term event; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1">
            <summary>
            Defines a contract implemented by classes used to deserialize feed messages to
            <typeparam name="T">Defines the base that can be deserialized using the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1"/></typeparam>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize the provided byte array to a instance of a given type
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> instance containing data to be deserialized </param>
            <returns>The <c>data</c> deserialized to instance of a given type</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserialize the provided byte array to a instance of a given type
            </summary>
            <typeparam name="T1">Specifies the type to which to deserialize the data</typeparam>
            <param name="stream">A <see cref="T:System.IO.Stream"/> instance containing data to be deserialized </param>
            <returns>The <c>data</c> deserialized to T1 instance</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator"/> which generates incremental sequence numbers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator._minValue">
            <summary>
            The minimum allowed value for generated sequence numbers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator._maxValue">
            <summary>
            The maximum allowed value for generated sequence numbers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator._value">
            <summary>
            Current sequence number
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator.#ctor(Microsoft.Extensions.Logging.ILogger{Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator},System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator"/> which generates sequence numbers between specified min and max value
            </summary>
            <param name="logger">Logger used to log exec messages</param>
            <param name="minValue">The minimum allowed value for generated sequence numbers</param>
            <param name="maxValue">The maximum allowed value for generated sequence numbers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.IncrementalSequenceGenerator.GetNext">
            <summary>
            Gets the next available sequence number
            </summary>
            <returns>the next available sequence number</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer">
            <summary>
            Defines a contract implemented by classes used to execute period tasks
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.TimerName">
            <summary>
            The name of the timer instance
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed">
            <summary>
            Raised when the timer elapses
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Start">
            <summary>
            Starts (or restarts, if already running) the current instance so it will start raising the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event.
            The dueTime and period are specified by values passed to the constructor or by those passed
            to the last call of <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Start(System.TimeSpan,System.TimeSpan)"/> method
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Start(System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts (or restarts, if already running) the current instance so it will start raising the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event.
            Note that the <c>dueTime</c> and <c>period</c> arguments will override those passed to the
            constructor and any subsequent calls to <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Start"/> will use the new values
            </summary>
            <param name="dueTime">A <see cref="T:System.TimeSpan"/> specifying a time period before the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event will be raised for the first time.</param>
            <param name="period">A <see cref="T:System.TimeSpan"/> specifying a period between subsequent raises of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.FireOnce(System.TimeSpan)">
            <summary>
            Starts (or restarts, if already running) the current instance so the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event will be raised once.
            Note the <c>dueTime</c> will not override values used by the <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Start"/> method
            </summary>
            <param name="dueTime">The due time.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Stop">
            <summary>
            Stops the current instance (if running) so it will no longer raise the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.ISdkTimer.Elapsed"/> event. If the
            current instance was already stopped the call has no effect.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool">
            <summary>
            Defines a pool of <see cref="T:System.Threading.SemaphoreSlim"/> instances which can be used to synchronize access to a shared resource
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool.AcquireAsync(System.String)">
            <summary>
            Acquires a <see cref="T:System.Threading.SemaphoreSlim"/> - either one already associated with the specified identifier
            or an unused one.
            </summary>
            <param name="id">The id to be associated with the acquired <see cref="T:System.Threading.SemaphoreSlim"/> instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool.Release(System.String)">
            <summary>
            Releases the <see cref="T:System.Threading.SemaphoreSlim"/> previously acquired with the same id
            </summary>
            <param name="id">The Id which was used to acquire the semaphore being released.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator">
            <summary>
            Defines a contract implemented by classes used to generate sequence numbers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.ISequenceGenerator.GetNext">
            <summary>
            Gets the next available sequence number
            </summary>
            <returns>the next available sequence number</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider">
            <summary>
            Defines a contract implemented by classes giving access to the current time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider.Now">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the current time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.LanguageHelper.GetMissingCultures(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the missing languages
            </summary>
            <param name="wantedCultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing list of <see cref="T:System.Globalization.CultureInfo"/> we want to get</param>
            <param name="alreadyUsedCultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying cultures that was already used/fetched</param>
            <returns>A <see cref="T:System.Collections.Generic.ICollection`1"/> containing missing cultures or a empty list if no cultures are missing</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.LanguageHelper.GetCultureList(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Get string representation of list of cultures
            </summary>
            <param name="cultures">The list of cultures</param>
            <returns>A string representation of list of cultures</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.LanguageHelper.GetCultureList(System.Collections.Generic.ICollection{System.Globalization.CultureInfo})">
            <summary>
            Get string representation of collection of cultures
            </summary>
            <param name="cultures">The collection of cultures</param>
            <returns>A string representation of collection of cultures</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.LanguageHelper.GetCultureList(System.Collections.Generic.List{System.Globalization.CultureInfo})">
            <summary>
            Get string representation of list of cultures
            </summary>
            <param name="cultures">The list of cultures</param>
            <returns>A string representation of list of cultures</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.LockHelper.GetLock(System.String)">
            <summary>
            Return a lock object for a named synchronization block.
            </summary>
            <param name="name">The lock name.</param>
            <returns>object</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.RealTimeProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider"/> giving access to the current time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.RealTimeProvider.Now">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the current time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker">
            <summary>
            Defines extension methods for Func classes which catch pre-defined exception types
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.HandleException(System.Exception,Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Handles the provided exception by logging it's data along with the provided message
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/> to be handled.</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance where the log should be written.</param>
            <param name="errorMessage">The error message to be written along with exception data.</param>
            <returns><c>true</c> True if the exception was of the following types: <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException"/>, <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException"/> or <see cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException"/>.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.SafeInvokeAsync(System.Func{System.Threading.Tasks.Task},Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Safely invokes the provided asynchronous function
            </summary>
            <param name="method">A <see cref="T:System.Func`1"/> representing the method.</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> where potential exceptions should be logged.</param>
            <param name="errorMessage">The error message to be written along with the exception.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.SafeInvokeAsync``1(System.Func{System.Threading.Tasks.Task{``0}},Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Safely invokes the provided asynchronous function
            </summary>
            <param name="method">A <see cref="T:System.Func`1"/> representing the method.</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> where potential exceptions should be logged.</param>
            <param name="errorMessage">The error message to be written along with the exception.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.SafeInvokeAsync``2(System.Func{``0,System.Threading.Tasks.Task{``1}},``0,Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Safely invokes the provided asynchronous function
            </summary>
            <param name="method">A <see cref="T:System.Func`1"/> representing the method.</param>
            <param name="arg">The function argument</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> where potential exceptions should be logged.</param>
            <param name="errorMessage">The error message to be written along with the exception.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.SafeInvokeAsync``3(System.Func{``0,``1,System.Threading.Tasks.Task{``2}},``0,``1,Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Safely invokes the provided asynchronous function
            </summary>
            <param name="method">A <see cref="T:System.Func`1"/> representing the method.</param>
            <param name="arg1">The function's first argument</param>
            <param name="arg2">The function's second argument</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> where potential exceptions should be logged.</param>
            <param name="errorMessage">The error message to be written along with the exception.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SafeInvoker.SafeInvokeAsync``4(System.Func{``0,``1,``2,System.Threading.Tasks.Task{``3}},``0,``1,``2,Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Safely invokes the provided asynchronous function
            </summary>
            <param name="method">A <see cref="T:System.Func`1"/> representing the method.</param>
            <param name="arg1">The function's first argument</param>
            <param name="arg2">The function's second argument</param>
            <param name="arg3">The function's second argument</param>
            <param name="log">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> where potential exceptions should be logged.</param>
            <param name="errorMessage">The error message to be written along with the exception.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo">
            <summary>
            Class provides information about current executing assembly
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ExecutionLog">
            <summary>
            Internal sdk logger to be used within base classes - so no need in every class
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SdkType">
            <summary>
            The type of the sdk
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.UnknownProducerId">
            <summary>
            The unknown producer identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SpecifiersDelimiter">
            <summary>
            The specifiers delimiter
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.MarketGroupsDelimiter">
            <summary>
            The market groups delimiter
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.MarketMappingProductsDelimiter">
            <summary>
            The market mapping products delimiter
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.VariantDescriptionName">
            <summary>
            The variant description name
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.OutcomeTextVariantValue">
            <summary>
            The outcometext variant value
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.FreeTextVariantValue">
            <summary>
            The free text variant value
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.PlayerPropsMarketGroup">
            <summary>
            The player props market group
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.FlexScoreMarketAttributeName">
            <summary>
            The flex score market attribute name
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.CompetitorsMarketOutcomeType">
            <summary>
            The competitors market group
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.CompetitorMarketOutcomeType">
            <summary>
            The competitor market group
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.PlayerMarketOutcomeType">
            <summary>
            The player market group
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.PlayerProfileGroupIdentifierForMarket">
            <summary>
            Defines the type of Urn part of the outcome id for player outcomes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.CompetitorProfileGroupIdentifierForMarket">
            <summary>
            Defines the type of Urn part of the outcome id for competitor outcomes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.PlayerProfileIdentifier">
            <summary>
            Defines the type of the player URI
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.NameProviderCompositeIdSeparator">
            <summary>
            The separator used when the outcome id is a composite of multiple ids - sr:player:1,sr:player:2
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.Iso860124HFormat">
            <summary>
            The Iso8601 24h short format
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.Iso860124HFullFormat">
            <summary>
            The Iso8601 24h full format
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.Created">
            <summary>
            The date when it was created
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ApiResponseErrorPattern">
            <summary>
            The regex pattern to extract error message from failed API requests
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ApiResponseMessagePattern">
            <summary>
            The regex pattern to extract response message from failed API requests
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SemaphorePoolSize">
            <summary>
            The semaphore pool size
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.MarketMappingMarketIdValidPattern">
            <summary>
            The regex to check valid market id for within market description market mapping (valid: "5", "5:123")
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.MarketMappingProducerIdsValidPattern">
            <summary>
            The regex to check valid producer_ids attribute for within market description market mapping (valid: "5", "1|3")
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetVersion">
            <summary>
            Gets the assembly version number
            </summary>
            <returns>System.String</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.LogSdkVersion(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Logs the SDK version at the beginning of opening feed
            </summary>
            <param name="log">The log used for logging</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.FromEpochTime(System.Int64)">
            <summary>
            Convert long epoch time to DateTime
            </summary>
            <param name="epochTime">The Unix time</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.TryFromEpochTime(System.Int64)">
            <summary>
            Convert long epoch time to DateTime
            </summary>
            <param name="epochTime">The Unix time</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ToEpochTime(System.DateTime)">
            <summary>
            Convert DateTime to the epoch time (in seconds)
            </summary>
            <param name="date">The date</param>
            <returns>System.Int64</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.DecimalToStringWithSign(System.Decimal)">
            <summary>
            Get decimal value as string with sign
            </summary>
            <param name="input">The decimal input</param>
            <returns>The string representation of the value with the sign (except zero)</returns>
            <example>
            0 -&gt; 0
            -1 -&gt; -1
            1 -&gt; +1
            -1.25 -&gt; -1.25
            1.25 -&gt; +1.25
            </example>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ParseDate(System.String)">
            <summary>
            Parses the date
            </summary>
            <param name="input">The string representation of the date to be parsed</param>
            <returns>System.Nullable&lt;DateTime&gt;</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetAbbreviationFromName(System.String,System.Int32)">
            <summary>
            Gets the name of the abbreviation from
            </summary>
            <param name="name">The name</param>
            <param name="length">The length of the abbreviation</param>
            <returns>Get abbreviation from name</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.CombineDateAndTime(System.DateTime,System.DateTime)">
            <summary>
            Combines the date and time
            </summary>
            <param name="date">The date</param>
            <param name="time">The time</param>
            <returns>Returns combined date and time</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SpecifiersDictionaryToString(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Specifiers dictionary to string of key-value pairs
            </summary>
            <param name="specifiers">The specifiers.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SpecifiersToString(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier})">
            <summary>
            List of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier"/> to string
            </summary>
            <param name="specifiers">The specifiers.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SpecifiersKeysToString(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier})">
            <summary>
            Get the list of specifier names
            </summary>
            <param name="specifiers">The specifiers.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.SpecifiersStringToDictionary(System.String)">
            <summary>
            List of specifiers as string
            </summary>
            <param name="specifiers">The specifiers.</param>
            <returns>Dictionary of specifiers</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.DictionaryToString(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Dictionary to comma-delimited string of key-value pairs
            </summary>
            <param name="values">The values</param>
            <returns>The comma-delimited string</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetGuid(System.Int32,System.Boolean)">
            <summary>
            Gets the fixed length unique identifier
            </summary>
            <param name="length">The length of the returned string (min 3)</param>
            <param name="containDash">if set to <c>true</c> [contain dash].</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ClearSensitiveData(System.String)">
            <summary>
            Clear sensitive data (removes part of it)
            </summary>
            <param name="input">Data to clear</param>
            <returns>Cleared input string</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ClearSensitiveData(System.String,System.String)">
            <summary>
            Clear sensitive data (removes part of it) from then input text
            </summary>
            <param name="input">Data to clear</param>
            <param name="sensitiveData">Search for this data and replace with cleared input string</param>
            <returns>Cleared input string</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.IsNumeric(System.Object)">
            <summary>
            Check if object is numeric value
            </summary>
            <param name="expression">The object to check</param>
            <returns>Returns <c>true</c> if object represents numeric value</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetVariableNumber(System.TimeSpan,System.Int32)">
            <summary>
            Get new value based on input and variable percent (up or down)
            </summary>
            <param name="baseValue">The base value</param>
            <param name="variablePercent">The max percent to deviate from base value</param>
            <returns>The new value within min-max</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetVariableNumber(System.Int32,System.Int32)">
            <summary>
            Get new value based on input and variable percent (up or down)
            </summary>
            <param name="baseValue">The base value</param>
            <param name="variablePercent">The max percent to deviate from base value</param>
            <returns>The new value within min-max</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.AddVariableNumber(System.TimeSpan,System.Int32)">
            <summary>
            Get new value based on input and variable percent (up only)
            </summary>
            <param name="baseValue">The base value</param>
            <param name="variablePercent">The max percent to deviate from base value</param>
            <returns>The new value within base-max</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.AddVariableNumber(System.Int32,System.Int32)">
            <summary>
            Get new value based on input and variable percent (up only)
            </summary>
            <param name="baseValue">The base value</param>
            <param name="variablePercent">The max percent to deviate from base value</param>
            <returns>The new value within base-max</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetMessageAge(System.Int64,System.Int64)">
            <summary>
            Get the feed message age; how behind is at the time of consuming by the sdk
            </summary>
            <param name="generatedAt">The generatedAt timestamp from the message</param>
            <param name="receivedAt">The timestamp when message consumed by the sdk</param>
            <returns>The difference in ms</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetMessageAge2(System.Int64,System.Int64)">
            <summary>
            Get the feed message age; how behind is at the time of consuming by the sdk (calculated via DateTime)
            </summary>
            <param name="generatedAt">The generatedAt timestamp from the message</param>
            <param name="receivedAt">The timestamp when message consumed by the sdk</param>
            <returns>The difference in ms</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.GetObjectSize(System.Object)">
            <summary>
            Calculates the length in bytes of an object and returns the size
            </summary>
            <param name="serializableObject">Object to get size</param>
            <returns>The size in bytes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.TryGetObjectSize(System.Object)">
            <summary>
            Calculates the length in bytes of an object and returns the size
            </summary>
            <param name="serializableObject">Object to get size</param>
            <returns>The size in bytes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.ConvertCultures(System.Collections.Generic.ICollection{System.Globalization.CultureInfo})">
            <summary>
            Convert list of CultureInfo to comma delimited string
            </summary>
            <param name="cultures"></param>
            <returns></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkInfo.UtcNowString">
            <summary>
            Get the DateTime.UtcNow formatted as string
            </summary>
            <returns>The DateTime.UtcNow formatted as string</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer">
            <summary>
            A timer used for invocation of period tasks
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer._timer">
            <summary>
            Internally used <see cref="T:System.Threading.Timer"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.DueTime">
            <summary>
            Value specifying the time between the start of the timer and the first firing of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Period">
            <summary>
            Value specifying the time window between the first and subsequent firing of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed">
            <summary>
            Raised when the timer elapses
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer._isDisposed">
            <summary>
            Value indicating whether the current instance was/is already disposed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.#ctor(System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer"/> class.
            </summary>
            <param name="name">The name of the timer instance</param>
            <param name="dueTime">A <see cref="T:System.TimeSpan"/> specifying a time period before the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event will be raised for the first time.</param>
            <param name="period">A <see cref="T:System.TimeSpan"/> specifying a period between subsequent raises of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Finalize">
            <summary>
            Disposes unmanaged resources associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Create(System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer"/> class.
            </summary>
            <param name="name">The name of the timer instance</param>
            <param name="dueTime">A <see cref="T:System.TimeSpan"/> specifying a time period before the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event will be raised for the first time.</param>
            <param name="period">A <see cref="T:System.TimeSpan"/> specifying a period between subsequent raises of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event.</param>
            <returns>New timer instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.OnTick(System.Object)">
            <summary>
            Invoked when the internally used <see cref="T:System.Threading.Timer"/> elapses
            </summary>
            <param name="state">A <see cref="T:System.Object"/> instance passed to the timer when it was constructed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Dispose(System.Boolean)">
            <summary>
            Disposes resources associated with the current instance
            </summary>
            <param name="disposing">Value indicating whether the managed resources should also be disposed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Start">
            <summary>
            Starts (or restarts if already running) the current instance so it will start raising the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event.
            The dueTime and period are specified by values passed to the constructor or by those passed
            to the last call of <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Start(System.TimeSpan,System.TimeSpan)"/> method
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Start(System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts (or restarts if already running) the current instance so it will start raising the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event.
            Note that the <c>dueTime</c> and <c>period</c> arguments will override those passed to the
            constructor and any subsequent calls to <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Start"/> will use new values
            </summary>
            <param name="dueTime">A <see cref="T:System.TimeSpan"/> specifying a time period before the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event will be raised for the first time.</param>
            <param name="period">A <see cref="T:System.TimeSpan"/> specifying a period between subsequent raises of the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.FireOnce(System.TimeSpan)">
            <summary>
            Starts (or restarts if already running) the current instance so the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event will be raised once.
            Note the <paramref name="dueTime"/> will not override values used by the <see cref="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Start"/> method
            </summary>
            <param name="dueTime">The due time.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Stop">
            <summary>
            Stops the current instance (if running) so it will no longer raise the <see cref="E:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Elapsed"/> event. If the
            current instance was already stopped the call has no effect.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SdkTimer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool"/> implementation
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolders">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> containing pool's semaphores
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.AvailableSemaphoreIds">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> containing ids of resources currently available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool._syncSemaphore">
            <summary>
            A <see cref="T:System.Threading.Semaphore"/> used to block the treads waiting for <see cref="T:System.Threading.SemaphoreSlim"/> instances to become available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool._spinWait">
            <summary>
            A <see cref="T:System.Threading.SpinWait"/> used to spin while waiting for the resource to become available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool._syncObject">
            <summary>
            The <see cref="T:System.Object"/> used to ensure thread-safety
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool._disposed">
            <summary>
            A value indicating whether the current instance has already been disposed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool._exceptionHandlingStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying enum member specifying how instances provided by the current provider will handle exceptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.#ctor(System.Int32,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Microsoft.Extensions.Logging.ILogger{Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool"/> class
            </summary>
            <param name="count">The number of <see cref="T:System.Threading.SemaphoreSlim"/> instances to be created in the pool</param>
            <param name="exceptionHandlingStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying enum member specifying how instances provided by the current provider will handle exceptions</param>
            <param name="logger">The logger</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.AcquireAsync(System.String)">
            <summary>
            Acquires a <see cref="T:System.Threading.SemaphoreSlim"/> - either one already associated with the specified identifier or an unused one
            </summary>
            <param name="id">The id to be associated with the acquired <see cref="T:System.Threading.SemaphoreSlim"/> instance</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.AcquireInternal(System.String)">
            <summary>
            Executes the actual acquirement
            </summary>
            <param name="id">The id under which to acquire the semaphore</param>
            <returns>The acquired <see cref="T:System.Threading.SemaphoreSlim"/></returns>
            <exception cref="T:System.InvalidOperationException">Semaphore granted entry, but there are no SemaphoreSlim objects available</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.Release(System.String)">
            <summary>
            Releases the <see cref="T:System.Threading.SemaphoreSlim"/> previously acquired with the same id
            </summary>
            <param name="id">The Id which was used to acquire the semaphore being released </param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder">
            <summary>
            A holder used to wrap <see cref="T:System.Threading.SemaphoreSlim"/> and additional information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.UsageCount">
            <summary>
            Gets the number of the objects which have acquired the associated semaphore
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.Semaphore">
            <summary>
            The <see cref="T:System.Threading.SemaphoreSlim"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.Id">
            <summary>
            The id associated with the current semaphore
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.#ctor(System.Threading.SemaphoreSlim)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder"/> class
            </summary>
            <param name="semaphore">The semaphore</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.Acquire">
            <summary>
            Increases the <see cref="P:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.UsageCount"/> of the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.Release">
            <summary>
            Decreases the <see cref="P:Sportradar.OddsFeed.SDK.Common.Internal.SemaphorePool.SemaphoreHolder.UsageCount"/> of the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.IHealthStatusProvider">
            <summary>
            Defines a contract implemented by classes used to provide health check for the SDK components
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.LogExporterOptions.LoggerName">
            <summary>
            Gets or sets the output targets for the console exporter.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory">
            <summary>
            Provides methods to get logger for specific <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.SdkLogRepositoryName">
            <summary>
            Default repository name for the SDK
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.LoggerFactory">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> used with SDK to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.SetLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Set the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>
            </summary>
            <param name="factory">An <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/> to be used</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForFeedTraffic(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for feed traffic
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForRestTraffic(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for rest traffic
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForClientInteraction(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for client iteration
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForCache(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for cache
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForStats(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for statistics
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerForExecution(System.Type,System.String)">
            <summary>
            Method for getting log4net.ILog for execution
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <returns>Returns default <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specified settings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLogger(System.Type,System.String,Sportradar.OddsFeed.SDK.Common.Enums.LoggerType)">
            <summary>
            Method for getting correct <see cref="T:Microsoft.Extensions.Logging.ILogger"/> for specific logger type
            </summary>
            <param name="type">A type to be used for creating new ILog</param>
            <param name="repositoryName">Repository containing the logger</param>
            <param name="loggerType">A value of <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType"/> to be used to get <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
            <returns>Returns <see cref="T:Microsoft.Extensions.Logging.ILogger"/> with specific settings for this <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.LoggerType"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetLoggerLogLevel(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Get the logger level
            </summary>
            <param name="logger">The logger to check</param>
            <returns>The log level supported by the logger</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.Telemetry.SdkLoggerFactory.GetWriteLogLevel(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Get write logger level
            </summary>
            <param name="logger">The logger to check</param>
            <param name="minLevel">The minimum log level</param>
            <returns>The log level supported by the logger which is not lower then specified minimum level</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Internal.TimeProviderAccessor">
            <summary>
            Class providing access to <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider"/>
            </summary>
            <remarks>
            The implementation is not thread safe and <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider"/> provided by
            this type should not be switched in when the SDK is running (i.e. only in unit tests)
            </remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Internal.TimeProviderAccessor.Current">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider"/> providing access to the current time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Internal.TimeProviderAccessor.SetTimeProvider(Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider)">
            <summary>
            Sets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ITimeProvider"/> provided by the <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.TimeProviderAccessor"/>
            </summary>
            <param name="timeProvider"></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.IOpenable">
            <summary>
            Defines a contract implemented by classes which can be opened and closed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.IOpenable.IsOpened">
            <summary>
            Gets a value indicating whether the current instance is opened
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.IOpenable.Open">
            <summary>
            Opens the current instance.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.IOpenable.Close">
            <summary>
            Closes the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Common.Urn">
            <summary>
            Represents a Uniform Resource Name
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Urn.RegexPattern">
            <summary>
            A regex pattern used for parsing of Urn strings
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Urn.PrefixGroupName">
            <summary>
            The name of the regex group used to store the prefix
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Urn.TypeGroupName">
            <summary>
            The name of the regex group used to store the type
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Urn.IdGroupName">
            <summary>
            The name of the regex group used to store the id
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Common.Urn.Types">
            <summary>
            Defines supported resource types
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Urn.Prefix">
            <summary>
            Gets the prefix of the current instance.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Urn.Type">
            <summary>
            Gets a <see cref="T:System.String"/> specifying the type of the resource associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Urn.TypeGroup">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup"/> enum member describing the group of the resource
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ResourceTypeGroup"/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Common.Urn.Id">
            <summary>
            Gets the numerical part of the identifier associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.#ctor(System.String,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> class.
            </summary>
            <param name="prefix">The prefix of the Urn</param>
            <param name="type">The type of the resource associated with the Urn</param>
            <param name="id">The numerical identifier of the resource associated with the Urn</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.#ctor(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> class.
            </summary>
            <param name="urn">The urn to be used as a template</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.Parse(System.String)">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> instance by parsing the provided <see cref="T:System.String"/>
            </summary>
            <param name="urnString">The <see cref="T:System.String"/> representation of the Urn</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> constructed by parsing the provided string representation</returns>
            <exception cref="T:System.FormatException">The format of the provided representation is not correct</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.Parse(System.String,System.Boolean)">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> instance by parsing the provided <see cref="T:System.String"/>
            </summary>
            <param name="urnString">The <see cref="T:System.String"/> representation of the Urn</param>
            <param name="isCustomType">Indicates if the urn type is for custom use</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> constructed by parsing the provided string representation</returns>
            <exception cref="T:System.FormatException">The format of the provided representation is not correct</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.TryParse(System.String,Sportradar.OddsFeed.SDK.Common.Urn@)">
            <summary>
            Tries to construct a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> instance by parsing the provided <see cref="T:System.String"/>
            </summary>
            <param name="urnString">The <see cref="T:System.String"/> representation of the Urn</param>
            <param name="urn">When the method returns it contains the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> constructed by parsing the provided string if the parsing was successful, otherwise null</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.TryParse(System.String,System.Boolean,Sportradar.OddsFeed.SDK.Common.Urn@)">
            <summary>
            Tries to construct a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> instance by parsing the provided <see cref="T:System.String"/>
            </summary>
            <param name="urnString">The <see cref="T:System.String"/> representation of the Urn</param>
            <param name="isCustomType">Indicates if the urn type is for custom use</param>
            <param name="urn">When the method returns it contains the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> constructed by parsing the provided string if the parsing was successful, otherwise null</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.IsSimpleTeam">
            <summary>
            Determines whether Urn represents a simple team
            </summary>
            <returns><c>true</c> if represents simple team; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Common.Urn.IsSimpleTeam(System.String)">
            <summary>
            Determines whether Urn represents a simple team
            </summary>
            <param name="urn">The string urn to be checked</param>
            <returns><c>true</c> if represents simple team; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.BetSettlementCertainty">
            <summary>
            Enum BetSettlementCertainty
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.BetSettlementCertainty.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.BetSettlementCertainty.LiveScouted">
            <summary>
            The live scouted
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.BetSettlementCertainty.Confirmed">
            <summary>
            The confirmed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus">
            <summary>
            Enumerates market cashout availability
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus.Available">
            <summary>
            Indicates cashout for associated market is available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus.Unavailable">
            <summary>
            Indicates cashout for associated market is unavailable
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus.Closed">
            <summary>
            Indicates cashout for associated market is no longer available - is closed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType">
            <summary>
            Enumerates reasons why a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/> message was received
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.New">
            <summary>
            A new sport event has been added(typically used for events that are created and will start in the near-term)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.StartTime">
            <summary>
            The start time of the sport event has changed
            </summary>
            <remarks>On message this value is represented with DATETIME value - keeping same name to avoid breaking change</remarks>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.Cancelled">
            <summary>
            The sport event has been canceled
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.Format">
            <summary>
             Format changes to the fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.Coverage">
            <summary>
            Coverage of the sport event has been changed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.Pitcher">
            <summary>
            Pitcher has been changed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.Other">
            <summary>
             Other various changes to the fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.NotAvailable">
            <summary>
            Type not specified (not available - equal null)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus">
            <summary>
            Enumerates market statuses
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.Active">
            <summary>
            Indicating that the market should be displayed and bets on it should be accepted
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.Inactive">
            <summary>
            Indicates the market should NOT be displayed and bets on it should NOT be accepted
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.Suspended">
            <summary>
            Indicates that the market should be displayed but the bets on it should NOT be accepted
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.HandedOver">
            <summary>
            Indicates the market was handed over from one odds producer to another.
            If the odds for this market were already received from another producer this update should be ignored,
            otherwise associated market should be suspended until such odds are received.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.Settled">
            <summary>
            Indicates the markets has already been settled by a previous message
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus.Cancelled">
            <summary>
            Indicates the markets has already been cancelled by a previous message
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason">
            <summary>
            Enumerates possible reasons why the odds-change was generated
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason.Normal">
            <summary>
            Indicates the message was generated by normal service execution
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason.RiskAdjustment">
            <summary>
            Indicates the message was generated due to risk adjustment
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason.SystemDown">
            <summary>
            Indicates the message was generated because the feed system went down
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType">
            <summary>
            Enumerates possible options for displaying outcome odds
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType.Decimal">
            <summary>
            The decimal format
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType.American">
            <summary>
            The American odds format
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities">
            <summary>
            Additional probability attributes for markets which potentially will be (partly) refunded
            </summary>
            <remarks>This is valid only for those markets which are sent with x.0, x.25 and x.75 lines and in addition the "no bet" markets (draw no bet, home no bet, ...)</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities.Win">
            <summary>
            The win probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities.Lose">
            <summary>
            The lose probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities.HalfWin">
            <summary>
            The half_win probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities.HalfLose">
            <summary>
            The half_lose probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities.Refund">
            <summary>
            The refund probability
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1">
            <summary>
            Defines a contract implemented by bet-cancel messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1.StartTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the start of cancellation period.
            A null value indicates the period started with market activation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1.EndTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the end of cancellation period.
            A null value indicates the period ended when the market was closed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1.SupersededBy">
            <summary>
            If the market was cancelled because of a migration from a different sport event, it gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event from which the market has migrated.
            </summary>
            <value>The superseded by.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1">
            <summary>
            Defines a contract implemented by bet-settlement messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1.Certainty">
            <summary>
            Gets the certainty of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/>
            </summary>
            <value>The certainty of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/></value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1">
            <summary>
            Defines a contract implemented by bet-stop messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetStop`1.MarketStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.IBetStop`1.MarketStatus"/> specifying the new status of the associated markets
            </summary>
            <value>The market status.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IBetStop`1.Groups">
            <summary>
            Get a list of strings specifying which market groups needs to be stopped
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1">
            <summary>
            Defines a contract implemented by cash-out probability messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1.BetStopReason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> specifying the reason for betting being stopped, or a null reference if the reason is not known
            </summary>
            <value>The bet stop reason.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1.BettingStatus">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> indicating the odds change was triggered by a possible event
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IEventMessage`1">
            <summary>
            Defines a contract implemented by all messages associated with sport events
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived type used to describe the sport event associated with the fixture change</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IEventMessage`1.Event">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived instance representing the sport event associated with the current message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IEventMessage`1.RequestId">
            <summary>
            Get the id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IEventMessage`1"/> message or a null reference if
            no requestId was provided to the request
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IEventMessage`1.RawMessage">
            <summary>
            Gets the raw message
            </summary>
            <value>The raw message</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1">
            <summary>
            Defines a contract implemented by messages which indicate a fixture was changed
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type used to describe the sport event associated with the fixture change</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1.ChangeType">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType"/> indicating how the fixture was changed (added, re-scheduled, ...)
            </summary>
            <remarks>If not specified in message, returns <see cref="F:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType.NotAvailable"/></remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1.NextLiveTime">
            <summary>
            Gets a value specifying the start time of the fixture in milliseconds since EPOCH UTC after the fixture was re-scheduled
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1.StartTime">
            <summary>
            Gets a value specifying the start time of the fixture in milliseconds since EPOCH UTC
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarket">
            <summary>
            Represents a betting market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Id">
            <summary>
            Gets a <see cref="T:System.Int32"/> value specifying the market type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Specifiers">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers
            </summary>
            <remarks>Note that the <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Id"/> and <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Specifiers"/> combined uniquely identify the market within the event</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarket.AdditionalInfo">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional market information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarket.MarketDefinition">
            <summary>
            Gets the associated market definition instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarket.GetNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the market in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language in which to get the name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarket.GetMappedMarketIdsAsync">
            <summary>
            Asynchronously gets the mapping Ids of the specified market
            </summary>
            <returns>Returns the mapping Ids of the specified market</returns>
            <remarks>The result is <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping"/> or <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping"/></remarks>
            <example>
            <code>
            foreach (var marketMapping in mappedIds)
            {
                if (marketMapping is LcooMarketMapping lcooId)
                {
                     _log.LogInformation($"Market {market.Id} mapping TypeId:{lcooId.TypeId}, Sov:'{lcooId.Sov}'");
                }
                else if (marketMapping is LoMarketMapping loId)
                {
                    _log.LogInformation($"Market {market.Id} mapping TypeId:{loId.TypeId}, SubTypeId:{loId.SubTypeId}, Sov:'{loId.Sov}'");
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketCancel">
            <summary>
            Represents information for a market with void reason
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketCancel.VoidReason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> specifying the void reason, or a null reference if no void reason is specified
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition">
            <summary>
            Defines methods used to access market definition properties
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition.GetNameTemplate(System.Globalization.CultureInfo)">
            <summary>
            Returns the unmodified market name template
            </summary>
            <param name="culture">The culture in which the name template should be provided</param>
            <returns>The unmodified market name template</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition.GetOutcomeType">
            <summary>
            Returns an indication of which kind of outcomes the associated market includes
            </summary>
            <returns>An indication of which kind of outcomes the associated market includes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition.GetGroups">
            <summary>
            Returns a list of groups to which the associated market belongs to
            </summary>
            <returns>a list of groups to which the associated market belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition.GetAttributes">
            <summary>
            Returns a dictionary of associated market attributes
            </summary>
            <returns>A dictionary of associated market attributes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition.GetValidMappings">
            <summary>
            Returns a list of valid market mappings
            </summary>
            <returns>a list of valid market mappings</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2">
            <summary>
            Defines a contract implemented by all messages containing market related information
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarket"/> derived type specifying the type of markets</typeparam>
            <typeparam name="T1">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2.Markets">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2"/>
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata">
            <summary>
            Defines a contract for classes implementing additional market information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.NextBetstop">
            <summary>
            Gets a epoch timestamp in UTC when to betstop the associated market. Typically used for outrights and typically is the start-time of the event the market refers to
            </summary>
            <value>The next betstop</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.StartTime">
            <summary>
            Gets the start time of the event (as epoch timestamp)
            </summary>
            <value>The start time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.EndTime">
            <summary>
            Gets the end time of the event (as epoch timestamp)
            </summary>
            <value>The end time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.NextBetstopDate">
            <summary>
            Gets date/time when to betstop the associated market. Typically used for outrights and typically is the start-time of the event the market refers to
            </summary>
            <value>The next betstop</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.StartTimeDate">
            <summary>
            Gets the start time of the event
            </summary>
            <value>The start time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.EndTimeDate">
            <summary>
            Gets the end time of the event
            </summary>
            <value>The end time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata.AamsId">
            <summary>
            Gets the Italian AAMS id for this outright
            </summary>
            <value>The Italian AAMS id for this outright</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds">
            <summary>
            Defines a contract implemented by classes providing odds information for betting markets
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus"/> enum member specifying the status of the market associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.CashoutStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.CashoutStatus"/> enum member specifying the availability of cashout, or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.IsFavorite">
            <summary>
            Gets a value indicating whether the market associated with the current instance is the favorite market (i.e. the one with most balanced odds)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.OutcomeOdds">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds"/> instance provides
            odds information for one outcome(selection)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds.MarketMetadata">
            <summary>
            Gets the market metadata which contains the additional market information
            </summary>
            <value>The market metadata which contains the additional market information</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities">
            <summary>
            Defines a contract implemented by classes providing probability information for betting markets
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus"/> enum member specifying the status of the market associated with the current market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities.OutcomeProbabilities">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities"/> instance provides
            probabilities information for one outcome(selection)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities.CashoutStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities.CashoutStatus"/> enum member specifying the availability of cashout, or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities.MarketMetadata">
            <summary>
            Gets the market metadata which contains the additional market information
            </summary>
            <value>The market metadata which contains the additional market information</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithSettlement">
            <summary>
            Represents settlement information for a market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMarketWithSettlement.OutcomeSettlements">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement"/> instance provides
            settlement information for one outcome(selection)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMessage">
            <summary>
            Defines a contract followed by all top-level messages produced by the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessage.Producer">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMessage.Producer"/> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage"/> message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessage.Timestamps">
            <summary>
            Gets the timestamps when the message was generated, sent, received and dispatched by the sdk
            </summary>
            <value>The timestamps</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp">
            <summary>
            Defines a contract for all message timestamps
            </summary>
            <remarks>Created and Sent are generated on rabbit server and Received and Dispatched on a local machine running sdk. If the system clocks are not in-sync it may happen that Received is before Created. Similar logic applies also to other properties.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp.Created">
            <summary>
            Gets the value specifying when the message was generated and put in queue on rabbit server (milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp.Sent">
            <summary>
            Gets the value specifying when the message was sent from the rabbit server (milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp.Received">
            <summary>
            Gets the value specifying when the message was received for processing by the sdk (milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp.Dispatched">
            <summary>
            Gets the value specifying when the message was dispatched to the user from the sdk (milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.Win">
            <summary>
            The win probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.Lose">
            <summary>
            The lose probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.HalfWin">
            <summary>
            The half_win probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.HalfLose">
            <summary>
            The half_lose probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.Refund">
            <summary>
            The refund probability
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.AdditionalProbabilities.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Constructor for additional probabilities
            </summary>
            <param name="win">Win value</param>
            <param name="lose">Lose value</param>
            <param name="halfWin">HalfWin value</param>
            <param name="halfLose">HalfLose value</param>
            <param name="refund">Refund value</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor">
            <summary>
            Caches <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus"/> instances by inspecting odds change messages received from the feed
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.MessageProcessorBase" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.ExecutionLog">
            <summary>
            The execution log
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor._mapperFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2"/> used to created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.ProcessorId">
            <summary>
            The processor identifier
            </summary>
            <value>The processor identifier</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor._sportEventCache">
            <summary>
            The sport event cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor._cacheManager">
            <summary>
            The cache manager
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto},Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager,Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageHandler,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor"/> class
            </summary>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2"/> used to created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to handle <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/></param>
            <param name="cacheManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheManager"/> used to interact among caches</param>
            <param name="feedMessageHandler">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageHandler"/> for handling special cases</param>
            <param name="sportEventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> used to save eventId from BetPal to ignore timeline SES</param>
            <param name="producerManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> to get 'virtual' producers to ignore for fixture_change_fixture endpoint</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.ProcessMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Processes and dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance to be processed</param>
            <param name="interest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.HandleTournamentFixtureChange(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Fetches sport events for specific tournament (prefetching it - useful for virtual feeds)
            </summary>
            <param name="urn">The tournament id</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.CacheMessageProcessor.RemoveCacheItem(Sportradar.OddsFeed.SDK.Common.Urn,System.Boolean,System.Boolean)">
            <summary>
            Removes the cache item (SportEventStatus or SportEvent)
            </summary>
            <param name="eventId">The event identifier</param>
            <param name="removeEvent">if set to <c>true</c> [remove event]</param>
            <param name="removeSportEventStatus">if set to <c>true</c> [sport event status]</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Alive">
            <summary>
            Represents an alive message dispatched by the feed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Alive.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Alive" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="subscribed">A value indicating whether the SDK is subscribed to the producer specified by the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> property</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Alive.Subscribed">
            <summary>
            Gets a value indicating whether the SDK is subscribed to the producer specified by <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> property
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1">
            <summary>
            Represents a message dispatched by the feed when some of the market are canceled
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1.StartTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the start of cancellation period
            A null value indicates the period starts with market activation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1.EndTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the end of cancellation period
            A Null value indicates the period ends when the market was closed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1.SupersededBy">
            <summary>
            If the market was canceled because of a migration from a different sport event, it gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event from which the market has migrated
            </summary>
            <value>The superseded by</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketCancel},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="startTime">a number of milliseconds from UTC epoch representing the start of cancellation period</param>
            <param name="endTime">a number of milliseconds from UTC epoch representing the end of cancellation period</param>
            <param name="supersededBy">If the market was canceled because of a migration from a different sport event, a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the sport event from which the market has migrated</param>
            <param name="markets">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetSettlement`1">
            <summary>
            Represents a message dispatched by the feed indicating that markets have been cleared
            And bets associated with them can be settled
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetSettlement`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketWithSettlement},System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetSettlement`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="markets">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="certainty">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> certainty</param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1">
            <summary>
            Represents a message dispatched by the feed when betting on some markets have to be stopped
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1.MarketStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1.MarketStatus" /> specifying the new status of the associated markets
            </summary>
            <value>The market status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1.Groups">
            <summary>
            Get a groups specifying that all markets with that groups needs to be stopped
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus,System.Collections.Generic.IEnumerable{System.String},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="marketStatus">a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetStop`1.MarketStatus" /> specifying the new status of the associated markets</param>
            <param name="groups">a list of <see cref="T:System.String"/> specifying which market groups needs to be stopped</param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1">
            <summary>
            Represents a message dispatched by the feed indicating that odds of the betting market selections have changed
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1._bettingStatus">
            <summary>
            The id of the betting status or a null reference if betting status is not specified
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1._betStopReason">
            <summary>
            The id of the bet stop reason or a null reference if bet stop reason is not specified
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1._namedValueProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide names for betting status and bet stop reason
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1.BetStopReason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> specifying the reason for betting being stopped, or a null reference if the reason is not known
            </summary>
            <value>The bet stop reason.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1.BettingStatus">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> indicating the odds change was triggered by a possible event
            </summary>
            <value>The betting status.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider,System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1" /> class</summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="betStopReason">The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1.BetStopReason" /> enum member specifying the reason for betting being stopped, or a null reference if the reason is not known</param>
            <param name="bettingStatus">A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.CashOutProbabilities`1.BettingStatus"/> enum indicating whether the betting should be allowed</param>
            <param name="markets">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="namedValuesProvider">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide names for betting status and bet stop reason</param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition">
            <summary>
            Represents a sport event regardless to which sport it belongs
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition._sportEntityFactory">
            <summary>
            An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.MatchStatusCache">
            <summary>
            The match statuses cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.#ctor(Microsoft.Extensions.Logging.ILogger,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition"/> class
            </summary>
            <param name="executionLog">A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging</param>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance</param>
            <param name="sportEntityFactory">An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances</param>
            <param name="sportEventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> instance containing cache data information about the progress of a sport event associated with the current instance</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance containing <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/></param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.ICollection`1"/> specifying languages the current instance supports</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the initialized instance will handle potential exceptions</param>
            <param name="matchStatusesCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> cache for fetching match statuses</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetStatusAsync">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> instance containing information about the progress of a sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> instance containing information about the progress of the sport event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetEventStatusAsync">
            <summary>
            Gets the event status asynchronous
            </summary>
            <returns>Get the event status</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetBookingStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member providing booking status for the associated @event or a null reference if booking status is not known
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetVenueAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue"/> instance representing a venue where the sport event associated with the
            current instance will take place
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetConditionsAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions"/> instance representing live conditions of the sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetCompetitorsAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetCompetitorsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <param name="culture">The culture in which we want to return competitor data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetCompetitorIdsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <param name="culture">Optional culture in which we want to fetch competitor data (otherwise default is used)</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetSportEventTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Competition.GetLiveOddsAsync">
            <summary>
            Asynchronously gets a liveOdds
            </summary>
            <returns>A liveOdds</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw">
            <summary>
            Class Draw
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.ExecutionLogPrivate">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance containing <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/></param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the initialized instance will handle potential exceptions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.GetLotteryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> representing id of the associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery" />
            </summary>
            <returns>The id of the associated lottery</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.GetStatusAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus" /> associated with the current instance
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus" /> associated with the current instance</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.GetResultsAsync">
            <summary>
            Asynchronously gets list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult" />
            </summary>
            <returns>A list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult" /></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw.GetDisplayIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Int32"/> representing display id
            </summary>
            <returns>The display id</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1">
            <summary>
            Represents a base class for all messages dispatched by the feed associated with the sport event
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="sportEvent">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="rawMessage">The raw message </param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1.Event">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" />
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1.RequestId">
            <summary>
            Get the id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference if no requestId was provided to the request
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1.RawMessage">
            <summary>
            Gets the raw message received from the broker
            </summary>
            <value>The raw message received from the broker</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1">
            <summary>
            Represents a message dispatched by the feed when a fixture changes
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType,System.Nullable{System.Int64},System.Int64,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="changeType">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType"/> indicating how the fixture was changed (added, re-scheduled, ...)</param>
            <param name="nextLiveTime">The next live time</param>
            <param name="startTime">A value specifying the start time of the fixture in milliseconds since EPOCH UTC </param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1.ChangeType">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.FixtureChangeType"/> indicating how the fixture was changed (added, re-scheduled, ...)
            </summary>
            <remarks>ToDo: ideally this should be nullable</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1.NextLiveTime">
            <summary>
            Gets a value specifying the start time of the fixture in milliseconds since EPOCH UTC after the fixture was re-scheduled
            </summary>
            <value>The next live time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.FixtureChange`1.StartTime">
            <summary>
            Gets a value specifying the start time of the fixture in milliseconds since EPOCH UTC
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery">
            <summary>
            Class Lottery
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.ExecutionLogPrivate">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery._sportDataCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic information about the tournament(sport, category, names)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Draw"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance containing <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/></param>
            <param name="sportDataCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic tournament information</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the initialized instance will handle potential exceptions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetSportAsync">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance representing the sport associated with the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance representing the sport associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetCategoryAsync">
            <summary>
            Asynchronously gets the associated category
            </summary>
            <returns>The associated category</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetTournamentCoverage">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage"/> instance representing the tournament coverage associated with the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage"/> instance representing the tournament coverage associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetBonusInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetDrawInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetScheduledDrawsAsync">
            <summary>
            Asynchronously gets the list of ids of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Lottery.GetDrawsAsync">
            <summary>
            Asynchronously gets the list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market">
            <summary>
            Represents a market with only basic information
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market._nameProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.MappingProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.Id">
            <summary>
            Gets a <see cref="T:System.Int32" /> value specifying the market type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.Specifiers">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing market specifiers.
            </summary>
            <remarks>Note that the <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Id" /> and <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMarket.Specifiers" /> combined uniquely identify the market within the event</remarks>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market._names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.AdditionalInfo">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional market information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.MarketDefinition">
            <summary>
            Gets the associated market definition instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.#ctor(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.IMarketDefinition,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market" /> class
            </summary>
            <param name="id">a <see cref="T:System.Int32" /> value specifying the market type</param>
            <param name="specifiers">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing market specifiers</param>
            <param name="additionalInfo">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional market info</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s) </param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="marketDefinition">The associated market definition</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.GetNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the market in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language in which to get the name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Market.GetMappedMarketIdsAsync">
            <summary>
            Asynchronously gets the mapping Ids of the specified market
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketCancel">
            <summary>
            Represents a result of the betting market with void reason
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketCancel._voidReasonsCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> used to get void reason descriptions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketCancel._voidReason">
            <summary>
            A value specifying the void reason or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketCancel.VoidReason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> specifying the void reason, or a null reference if no void reason is specified
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketCancel.#ctor(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.IMarketDefinition,System.Nullable{System.Int32},Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithSettlement" /> class
            </summary>
            <param name="id">a <see cref="T:System.Int32" /> value specifying the market type</param>
            <param name="specifiers">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional market specifiers</param>
            <param name="additionalInfo">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional market info</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes</param>
            <param name="marketDefinition">The associated market definition</param>
            <param name="voidReason">A value specifying the void reason or a null reference</param>
            <param name="voidReasonsCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> used to get void reason descriptions</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition">
            <summary>
            Represents a market definition
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition._marketDescription">
            <summary>
            The associated market descriptor
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition._marketId">
            <summary>
            The market identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition._sportId">
            <summary>
            The associated event sport identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition._producerId">
            <summary>
            The id of the producer which generated the associated market
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition._specifiers">
            <summary>
            The associated market specifiers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.#ctor(System.Int32,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Common.Urn,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Constructs a new market definition. The market definition represents additional market data which can be used for more advanced use cases
            </summary>
            <param name="marketId">The id of the market</param>
            <param name="marketCacheProvider">The market cache provider used to retrieve name templates</param>
            <param name="sportId">The associated event sport identifier</param>
            <param name="producerId">The producer of the producer which generated the market</param>
            <param name="specifiers">The associated market specifiers</param>
            <param name="cultures">The cultures</param>
            <param name="exceptionHandlingStrategy">The exception handling strategy</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetNameTemplate(System.Globalization.CultureInfo)">
            <summary>
            Returns the unmodified market name template
            </summary>
            <param name="culture">The culture in which the name template should be provided</param>
            <returns>The unmodified market name template</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetOutcomeType">
            <summary>
            Returns an indication of which kind of outcomes the associated market includes
            </summary>
            <returns>An indication of which kind of outcomes the associated market includes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetGroups">
            <summary>
            Returns a list of groups to which the associated market belongs to
            </summary>
            <returns>a list of groups to which the associated market belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetAttributes">
            <summary>
            Returns a dictionary of associated market attributes
            </summary>
            <returns>A dictionary of associated market attributes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetValidMappings">
            <summary>
            Returns a list of valid market mappings
            </summary>
            <returns>a list of valid market mappings</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketDefinition.GetMarketDefinition">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketDefinition" /> associated with the provided data
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2">
            <summary>
            A base class for all messages containing information about betting markets
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2._markets">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2.Markets" /> property backing field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`1,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{`0},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="sportEvent">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="markets">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMessage`2.Markets">
            <summary>Gets a <see cref="T:System.Collections.Generic.IEnumerable`1" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.NextBetstop">
            <summary>
            Gets a timestamp in UTC when to betstop the associated market. Typically used for outrights and typically is the start-time of the event the market refers to
            </summary>
            <value>The next betstop.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.StartTime">
            <summary>
            Gets the start time of the event (as epoch timestamp)
            </summary>
            <value>The start time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.EndTime">
            <summary>
            Gets the end time of the event (as epoch timestamp)
            </summary>
            <value>The end time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.NextBetstopDate">
            <summary>
            Gets date/time when to betstop the associated market. Typically used for outrights and typically is the start-time of the event the market refers to
            </summary>
            <value>The next betstop</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.StartTimeDate">
            <summary>
            Gets the start time of the event
            </summary>
            <value>The start time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.EndTimeDate">
            <summary>
            Gets the end time of the event
            </summary>
            <value>The end time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.AamsId">
            <summary>
            Gets the Italian AAMS id for this outright
            </summary>
            <value>The Italian AAMS id for this outright</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata"/> class
            </summary>
            <param name="marketMetadata">The market meta data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketMetadata.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus"/> enum member specifying the status of the market associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.CashoutStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.CashoutStatus" /> enum member specifying the availability of cashout, or a null reference
            </summary>
            <value>The cashout status.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.OutcomeOdds">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds"/> instance specifies the odds
            for one outcome associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.MarketMetadata">
            <summary>
            Gets the market metadata which contains the additional market information
            </summary>
            <value>The market metadata which contains the additional market information</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.IsFavorite">
            <summary>
            Gets a value indicating whether the market associated with the current instance is the favorite market (i.e. the one with most balanced odds)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.#ctor(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus},System.Boolean,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds},Sportradar.OddsFeed.SDK.Entities.IMarketMetadata,Sportradar.OddsFeed.SDK.Entities.IMarketDefinition,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds"/> class
            </summary>
            <param name="id">a <see cref="T:System.Int32"/> value specifying the market type</param>
            <param name="specifiers">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <param name="additionalInfo">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional market info.</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s) </param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes</param>
            <param name="status">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus"/> enum member specifying the status of the market associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance</param>
            <param name="cashoutStatus">A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithOdds.CashoutStatus"/> to be set</param>
            <param name="isFavorite">Gets a value indicating whether the market associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance is the most
            balanced market.</param>
            <param name="outcomeOdds">a <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds"/> instance specifies the odds
            for one outcome associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds"/> instance</param>
            <param name="marketMetadata">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata"/> to be set</param>
            <param name="marketDefinition">The associated market definition</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus" /> enum member specifying the status of the market associated with the current market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.OutcomeProbabilities">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1" /> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities" /> instance provides
            probabilities information for one outcome(selection)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.CashoutStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.CashoutStatus"/> enum member specifying the availability of cashout, or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.MarketMetadata">
            <summary>
            Gets the market metadata which contains the additional market information
            </summary>
            <value>The market metadata which contains the additional market information</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.#ctor(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities},Sportradar.OddsFeed.SDK.Entities.IMarketDefinition,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Nullable{Sportradar.OddsFeed.SDK.Entities.Enums.CashoutStatus},Sportradar.OddsFeed.SDK.Entities.IMarketMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities"/> class
            </summary>
            <param name="id">a <see cref="T:System.Int32"/> value specifying the market type</param>
            <param name="specifiers">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <param name="additionalInfo">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional market info.</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s) </param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes</param>
            <param name="status">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.MarketStatus"/> enum member specifying the status of the market associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities"/> instance</param>
            <param name="outcomeProbabilities">a <see cref="T:System.Collections.Generic.IEnumerable`1"/> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities"/> instance specifies the odds
            for one outcome associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketWithProbabilities"/> instance</param>
            <param name="marketDefinition">The associated market definition</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="cashoutStatus">A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithProbabilities.CashoutStatus"/> enum member specifying the availability of cashout, or a null reference</param>
            <param name="marketMetadata">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMetadata"/> to be set</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithSettlement">
            <summary>
            Represents a result of the betting market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithSettlement.OutcomeSettlements">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1" /> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> instance providing outcome settling information
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithSettlement.#ctor(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.IMarketDefinition,System.Nullable{System.Int32},Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MarketWithSettlement" /> class
            </summary>
            <param name="id">a <see cref="T:System.Int32" /> value specifying the market type</param>
            <param name="specifiers">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional market specifiers</param>
            <param name="additionalInfo">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional market info</param>
            <param name="outcomes">An <see cref="T:System.Collections.Generic.ICollection`1" /> where each <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> instance providing outcome settling information
            </param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instance used to generate the market name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes</param>
            <param name="marketDefinition">The associated market definition</param>
            <param name="voidReason">A value specifying the void reason or a null reference</param>
            <param name="voidReasonsCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> used to get void reason descriptions</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match">
            <summary>
            Represents a sport event with home and away competitor
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.ExecutionLogPrivate">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match"/> class.
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the match associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance</param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> instance used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament"/> instances</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instances containing cache data associated with the current instance</param>
            <param name="sportEventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> instance containing cache data information about the progress of a match associated with the current instance</param>
            <param name="matchStatusCache">A localized match statuses cache</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the initialized instance will handle potential exceptions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus"/> containing information about the progress of the match
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the progress of the match</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetSeasonAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo"/> representing the season to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetTournamentRoundAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> representing the tournament round to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetHomeCompetitorAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor" /> representing home competitor of the match associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetHomeCompetitorAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor" /> representing home competitor of the match associated with the current instance
            </summary>
            <param name="culture">The culture in which we want to return competitor data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetAwayCompetitorAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor" /> representing away competitor of the match associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetAwayCompetitorAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor" /> representing away competitor of the match associated with the current instance
            </summary>
            <param name="culture">The culture in which we want to return competitor data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetTournamentAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the tournament to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetFixtureAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance containing information about the arranged sport event
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetEventTimelineAsync">
            <summary>
            Gets the associated event timeline
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetEventTimelineAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the associated event timeline for single culture
            </summary>
            <param name="culture">The languages to which the returned instance should be translated</param>
            <remarks>Recommended to be used when only <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventTimeline"/> is needed for this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/></remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetDelayedInfoAsync">
            <summary>
            Asynchronously gets the associated delayed info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the retrieval operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetCoverageInfoAsync">
            <summary>
            Asynchronously gets the associated coverage info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Match.GetNameAsync(System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message">
            <summary>
            A base class for all messages dispatched by the SDK
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message.Timestamps">
            <summary>
            Gets the timestamps when the message was generated, sent, received and dispatched by the sdk
            </summary>
            <value>The timestamps</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message.Producer">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMessage" /> message
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp">
            <summary>
            Class MessageTimestamp
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.Created">
            <summary>
            Gets the value specifying when the message was generated and put in rabbit queue (the milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.Sent">
            <summary>
            Gets the value specifying when the message was sent from the rabbit server (the milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.Received">
            <summary>
            Gets the value specifying when the message was received for processing by the sdk (the milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.Dispatched">
            <summary>
            Gets the value specifying when the message was dispatched to the user (the milliseconds since EPOCH UTC)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp"/> class
            </summary>
            <param name="timestamp">The timestamp</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.MessageTimestamp"/> class
            </summary>
            <param name="generated">The generated</param>
            <param name="sent">The sent</param>
            <param name="received">The received</param>
            <param name="dispatched">The dispatched</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1">
            <summary>
            Represents a message dispatched by the feed indicating that odds of the betting market selections have changed
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1._bettingStatus">
            <summary>
            The id of the betting status or a null reference if betting status is not specified
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1._betStopReason">
            <summary>
            The id of the bet stop reason or a null reference if bet stop reason is not specified
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1._namedValueProvider">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide names for betting status and bet stop reason
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.ChangeReason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason" /> member specifying the reason for the odds change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.BetStopReason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> specifying the reason for betting being stopped, or a null reference if the reason is not known
            </summary>
            <value>The bet stop reason.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.BettingStatus">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" /> indicating the odds change was triggered by a possible event
            </summary>
            <value>The betting status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.OddsGenerationProperties">
            <summary>
            Gets the odds generation properties (contains a few key-parameters that can be used in a client’s own special odds model, or even offer spread betting bets based on it)
            </summary>
            <value>The odds generation properties</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Nullable{Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketWithOdds},Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider,System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1" /> class</summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="changeReason">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> member specifying the reason for the odds change</param>
            <param name="betStopReason">the <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.BetStopReason" /> enum member specifying the reason for betting being stopped, or a null reference if the reason is not known</param>
            <param name="bettingStatus">a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsChange`1.BettingStatus"/> enum indicating whether the betting should be allowed</param>
            <param name="markets">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="oddsGenerationProperties">Provided by the prematch odds producer only, and contains a few key-parameters that can be used in a client’s own special odds model, or even offer spread betting bets based on it</param>
            <param name="namedValuesProvider">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide names for betting status and bet stop reason</param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsGeneration">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsGeneration"/>
            </summary>
            <remarks>Provided by the prematch odds producer only, and contains a few key-parameters that can be used in a client’s own special odds model, or even offer spread betting bets based on it.</remarks>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsGeneration" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsGeneration.ExpectedTotals">
            <summary>
            Gets the expected totals (how many goals are expected in total?)
            </summary>
            <value>The expected totals</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsGeneration.ExpectedSupremacy">
            <summary>
            Gets the expected supremacy (how big is the expected goal supremacy)
            </summary>
            <value>The expected supremacy</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsGeneration.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OddsGeneration"/> class
            </summary>
            <param name="oddsGenerationProperties">The odds generation properties</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome">
            <summary>
            Represents a betting market outcome (selection)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome._nameProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome._mappingProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapped ids of markets and outcomes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome._names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome.Id">
            <summary>
            Gets the value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome.OutcomeDefinition">
            <summary>
            Gets the associated outcome definition instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome.#ctor(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome" /> class
            </summary>
            <param name="id">the value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome" /> instance</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="outcomeDefinition"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome.GetNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the market in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language in which to get the name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Outcome.GetMappedOutcomeIdsAsync">
            <summary>
            Asynchronously gets the mapping Ids of the specified outcome
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeDefinition">
            <summary>
            Represents a outcome definition
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeDefinition.GetNameTemplate(System.Globalization.CultureInfo)">
            <summary>
            Returns the unmodified market name template
            </summary>
            <param name="culture">The culture in which the name template should be provided</param>
            <returns>The unmodified market name template</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds">
            <summary>
            Represents the odds for an outcome
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds.#ctor(System.String,System.Nullable{System.Boolean},System.Double,System.Nullable{System.Double},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition,Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> class
            </summary>
            <param name="id">the value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> instance</param>
            <param name="active">A value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> is active - i.e. should bets on it be accepted </param>
            <param name="odds">the odds for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> instance</param>
            <param name="probabilities">the probabilities for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> instance</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="outcomeDefinition">The associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition"/></param>
            <param name="additionalProbabilities">Additional probability attributes for markets which potentially will be (partly) refunded</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds.GetOdds(Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType)">
            <summary>
            Gets the odds in specified format
            </summary>
            <param name="oddsDisplayType">Display type of the odds (default: <see cref="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType.Decimal"/>)</param>
            <returns>The value of the outcome odds in specified format</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities">
            <summary>
            Represents market selection with probabilities
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities.Active">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds" /> is active - i.e. should bets on it be accepted
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities.Probabilities">
            <summary>
            Gets the probabilities for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds" /> instance or a null reference if probabilities are not known.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities.AdditionalProbabilities">
            <summary>
            Additional probability attributes for markets which potentially will be (partly) refunded
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Double},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition,Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities)">
            <summary>Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities" /> class</summary>
            <param name="id">The value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities" /> instance</param>
            <param name="active">A value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities" /> is active - i.e. should bets on it be accepted
            </param>
            <param name="probabilities">The probabilities for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeProbabilities" /> instance</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="outcomeDefinition">The associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition"/></param>
            <param name="additionalProbabilities">Additional probability attributes for markets which potentially will be (partly) refunded</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement">
            <summary>
            Represents the result of a market outcome (selection)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.#ctor(System.Nullable{System.Double},System.String,System.Int32,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition)">
            <summary>Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement" /> class</summary>
            <param name="deadHeatFactor">a dead-head factor for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> instance.</param>
            <param name="id">the value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /></param>
            <param name="result">a value indicating whether the outcome associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> is winning</param>
            <param name="voidFactor">the <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.VoidFactor" /> associated with a current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> or a null reference</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="outcomeDefinition">The associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition"/></param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.DeadHeatFactor">
            <summary>
            Gets a dead-head factor for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> instance.
            </summary>
            <remarks>
            A dead heat is defined as an event in which there are two or more joint winning contracts.
            Dead heat rules state that the stake should be divided by the number of competitors involved in the dead heat and then settled at the normal odds
            </remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.VoidFactor">
            <summary>
            Gets the <see cref="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.VoidFactor" /> associated with a current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement" /> or a null reference.
            The value indicates the percentage of the stake that should be voided(returned to the punter).
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeSettlement.OutcomeResult">
            <summary>
            Gets a value indicating whether the outcome associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement"/> is winning - i.e. have the bets placed on this outcome winning or losing
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds">
            <summary>
            Represents the odds for a player outcome
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IPlayerOutcomeOdds" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds._teamFlag">
            <summary>
            A value indicating whether the player is associated with home or away team - 1 : HomeTeam, 2 : AwayTeam
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds._match">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/> representing the match associated with the outcome / market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds.#ctor(System.String,System.Nullable{System.Boolean},System.Double,System.Nullable{System.Double},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider,Sportradar.OddsFeed.SDK.Entities.Rest.IMatch,System.Int32,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition,Sportradar.OddsFeed.SDK.Entities.IAdditionalProbabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds" /> class
            </summary>
            <param name="id">the value uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds" /> instance</param>
            <param name="active">
            A value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> is active - i.e. should bets on it be accepted
            </param>
            <param name="odds">the odds for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> instance</param>
            <param name="probabilities">the probabilities for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.OutcomeOdds" /> instance</param>
            <param name="nameProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> used to generate the outcome name(s)</param>
            <param name="mappingProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instance used for providing mapping ids of markets and outcomes</param>
            <param name="match">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/> representing the match associated with the outcome / market</param>
            <param name="teamFlag">A value indicating whether the player is associated with home or away team - 1 : HomeTeam, 2 : AwayTeam</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="outcomeDefinition">The associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition"/></param>
            <param name="additionalProbabilities">Additional probability attributes for markets which potentially will be (partly) refunded</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds.GetCompetitorAsync">
            <summary>
            Asynchronously gets the team to which the associated player belongs to.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.PlayerOutcomeOdds.HomeOrAwayTeam">
            <summary>
            Gets the value indicating whether the associated team is home or away
            </summary>
            <value>The value indicating whether the associated team is home or away</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.ProducerStatusChange">
            <summary>
            Represents a message indicating a producer serving odds via the feed went down. The class might be dispatched
            either by the feed or the SDK itself
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.ProducerStatusChange.#ctor(System.Int64,Sportradar.OddsFeed.SDK.Api.IProducer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.ProducerStatusChange" /> class
            </summary>
            <param name="timestamp">The value specifying when the message was generated in the milliseconds since EPOCH UTC </param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.ProducerStatusChange" /> message
            </param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetCancel`1">
            <summary>
            Represents a message dispatched by the feed indicating that cancellation specified by <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.BetCancel`1" /> message must be roll-backed
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetCancel`1.StartTime">
            <summary>
            Get the number of milliseconds from UTC epoch representing the start of rollback cancellation period.
            A null value indicates the period started with market activation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetCancel`1.EndTime">
            <summary>
            Gets the number of milliseconds from UTC epoch representing the end of rollback cancellation period.
            A null value indicates the period ended when the market was closed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetCancel`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketCancel},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetCancel`1" /> class
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="event">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="startTime">The number of milliseconds from UTC epoch representing the start of rollback cancellation period</param>
            <param name="endTime">The number of milliseconds from UTC epoch representing the end of rollback cancellation period</param>
            <param name="markets">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /></param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetSettlement`1">
            <summary>
            Represents a message dispatched by the feed indicating settlements notified by <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1" /> message have to be reverted
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetSettlement`1.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,`0,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.IMarketCancel},System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.RollbackBetSettlement`1" /> message
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="sportEvent">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition" /> derived instance representing the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="requestId">The id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /> message or a null reference</param>
            <param name="markets">An <see cref="T:Sportradar.OddsFeed.SDK.Entities.IMarketMessage`2" /> describing markets associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.EventMessage`1" /></param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.SnapshotCompleted">
            <summary>
            Represents a message dispatched by the feed after all the messages associated with snapshot request were dispatched
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.SnapshotCompleted.#ctor(Sportradar.OddsFeed.SDK.Entities.IMessageTimestamp,Sportradar.OddsFeed.SDK.Api.IProducer,System.Int64)">
            <summary>
            </summary>
            <param name="timestamp">The value specifying timestamps related to the message (in the milliseconds since EPOCH UTC)</param>
            <param name="producer">The <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> specifying the producer / service which dispatched the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Message" /> message</param>
            <param name="requestId">the id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.SnapshotCompleted" /> message</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.SnapshotCompleted.RequestId">
            <summary>
            Get the id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.SnapshotCompleted" /> message
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Stage.ExecutionLogPrivate">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Stage.GetAdditionalParentStagesAsync">
            <summary>
            Asynchronously gets a list of additional ids of the parent stages of the current instance or a null reference if the represented stage does not have the parent stages
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EntitiesImpl.Stage.GetStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStageStatus"/> containing information about the progress of the stage
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the progress of the stage</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs">
            <summary>
            An event argument used by events raised when a message from the feed is received
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs.Message">
            <summary>
            Gets a <see cref="T:System.String"/> representing deserialized message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs.Interest">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs.RawMessage">
            <summary>
            The raw message
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs"/> class
            </summary>
            <param name="message">a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> representing the received message</param>
            <param name="interest">a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session or a null reference
            if no session is associated with the received message</param>
            <param name="rawMessage">The raw message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs">
            <summary>
            Event arguments for the <see cref="E:Sportradar.OddsFeed.SDK.Api.Internal.FeedAccess.IMessageReceiver.FeedMessageDeserializationFailed"/> event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs.RawData">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing message unprocessed data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs.#ctor(System.Collections.Generic.ICollection{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.MessageDeserializationFailedEventArgs"/> class
            </summary>
            <param name="rawData">the name of the message which could not be deserialized, or a null reference if message name could not be retrieved</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageHandler.StopProcessingFixtureChange(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change)">
            <summary>
            Stops the processing fixture change (so it is not dispatched twice)
            </summary>
            <param name="fixtureChange">The fixture change</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper"/> implementation which maps feed messages to non-specific feed messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapAlive(Sportradar.OddsFeed.SDK.Messages.Feed.alive)">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> instance to be mapped (converted)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapSnapShotCompleted(Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete)">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> instance to be mapped (converted)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapFixtureChange``1(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change" /> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1" /> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change" /> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1" /> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapBetStop``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop" /> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1" /> instance
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop" /> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1" /> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapBetCancel``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapRollbackBetCancel``1(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapBetSettlement``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapRollbackBetSettlement``1(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapOddsChange``1(Sportradar.OddsFeed.SDK.Messages.Feed.odds_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.MapCashOutProbabilities``1(Sportradar.OddsFeed.SDK.Messages.Rest.cashout,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout" /> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1" /> instance
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout" /> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1" /> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout" /></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.BuildEvent``1(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.List{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived instance
            </summary>
            <param name="eventId">A <see cref="T:System.String"/> representation of the event id</param>
            <param name="sportId">The sport identifier</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the constructed instance should handle potential exceptions</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived constructed instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.GetEventForMessage``1(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.List{System.Globalization.CultureInfo})">
            <summary>
            Gets the new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance
            </summary>
            <param name="eventId">A <see cref="T:System.String"/> representation of the event id</param>
            <param name="sportId">The sport identifier</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <returns>Returns the new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageMapper.GetEventForNameProvider``1(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.List{System.Globalization.CultureInfo})">
            <summary>
            Gets the new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance
            </summary>
            <param name="eventId">A <see cref="T:System.String"/> representation of the event id</param>
            <param name="sportId">The sport identifier</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the mapped message will be translated</param>
            <returns>Returns the new <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator">
            <summary>
            A class used for validation of <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ExecutionLog">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator._defaultCulture">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing default culture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator._marketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> providing market descriptions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator._namedValuesProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide descriptions for named values
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator._producerManager">
            <summary>
            The producer manager
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider,Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator"/> class
            </summary>
            <param name="marketCacheProvider">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> used to get <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription"/></param>
            <param name="defaultCulture">The default culture used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription"/></param>
            <param name="namedValuesProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider"/> used to provide descriptions for named values</param>
            <param name="producerManager">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Managers.IProducerManager"/> used to check available producers</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.LogWarning``1(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.String,``0)">
            <summary>
            Logs the correctly formatted warning to execution log
            </summary>
            <typeparam name="T">The type of the incorrect value</typeparam>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> containing the incorrect value</param>
            <param name="propertyName">The name of the property set to incorrect value</param>
            <param name="propertyValue">The incorrect value</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.LogFailure``1(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,System.String,``0)">
            <summary>
            Logs the correctly formatted failure to execution log
            </summary>
            <typeparam name="T">The type of the incorrect value</typeparam>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> containing the incorrect value</param>
            <param name="propertyName">The name of the property set to incorrect value</param>
            <param name="propertyValue">The incorrect value</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateSpecifiers(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket,System.Int32)">
            <summary>
            Validates and parses the provided market specifiers
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance containing the market whose specifiers are being validated</param>
            <param name="market">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket"/> instance containing the specifiers to validate</param>
            <param name="marketId">The id of the <c>market</c> in the <c>message</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.CheckSpecifiersAsync(System.Int32,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Checks if the market descriptor exists for this marketId and specifiers
            </summary>
            <param name="producerId">The id of the producer which produced the message</param>
            <param name="marketId">A market identifier, identifying the market to be checked</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> representing specifiers of the associated market</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Validates the basic properties of the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
            <param name="message">The message to be validated</param>
            <returns>True if the validation was successful, otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateMessageWithMarkets(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Messages.Feed.market[])">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> and it's collection of <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.market"/> instances
            </summary>
            <param name="message">The message to be validated</param>
            <param name="markets">The message markets</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult"/> representing the result of the validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateSnapshotCompleted(Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateAlive(Sportradar.OddsFeed.SDK.Messages.Feed.alive)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateFixtureChange(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateBetStop(Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateBetSettlement(Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateBetCancel(Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.ValidateOddsChange(Sportradar.OddsFeed.SDK.Messages.Feed.odds_change)">
            <summary>
            Validates the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change" /> message
            </summary>
            <param name="message">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change" /> message to validate</param>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the result of validation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedMessageValidator.Validate(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Validates the specified <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" /> instance to be validated</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult" /> specifying the validation result</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder">
            <summary>
            Defines builder for routing keys and checks for feed sessions combo validation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.GenerateKeys(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Api.Config.MessageInterest},System.Int32)">
            <summary>
            Validates input list of message interests and returns list of routing keys combination per interest
            </summary>
            <param name="interests">The list of all session interests</param>
            <param name="nodeId">The node id</param>
            <returns></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.GetStandardKeys(System.Int32)">
            <summary>
            Gets the standard keys usually added to all sessions
            </summary>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.GetLiveKeys">
            <summary>
            Gets the live keys
            </summary>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.AllMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in all messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in all messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.LiveMessagesOnly">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in live messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in live messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.PrematchMessagesOnly">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in pre-match messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in pre-match messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.HighPriorityMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in hi priority messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in high priority messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.LowPriorityMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.VirtualSportMessages">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in low priority messages</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.FeedRoutingKeyBuilder.SpecificEventsOnly(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Constructs a <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages associated with specific events
            </summary>
            <param name="eventIds">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the target events</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> indicating an interest in messages associated with specific events</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive">
            <summary>
            Defines a contract implemented by classes representing alive message dispatched by feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive.Subscribed">
            <summary>
            Gets a value whether the SDK is currently subscribed to receive messages from the producer specified by <see cref="P:Sportradar.OddsFeed.SDK.Entities.IMessage.Producer"/> property
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageHandler">
            <summary>
            Defines a contract for handling special cases for processing feed messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageHandler.StopProcessingFixtureChange(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change)">
            <summary>
            Stops the processing of fixture change if the same message was already processed
            </summary>
            <param name="fixtureChange">The fixture change</param>
            <returns><c>true</c> if already processed then <c>true</c>, <c>false</c> otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper">
            <summary>
            Defines a contract implemented by classes used to map (convert) feed message to those used by the SDK
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapSnapShotCompleted(Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete)">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/> instance to be mapped (converted)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapAlive(Sportradar.OddsFeed.SDK.Messages.Feed.alive)">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/> instance to be mapped (converted)</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.IAlive"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapFixtureChange``1(Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IFixtureChange`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapBetStop``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetStop`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapBetCancel``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetCancel`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapRollbackBetCancel``1(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapBetSettlement``1(Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IBetSettlement`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapRollbackBetSettlement``1(Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapOddsChange``1(Sportradar.OddsFeed.SDK.Messages.Feed.odds_change,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change"/></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageMapper.MapCashOutProbabilities``1(Sportradar.OddsFeed.SDK.Messages.Rest.cashout,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Byte[])">
            <summary>
            Maps (converts) the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout"/> instance to the <see cref="T:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout"/> instance to be mapped (converted)</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the mapped message will be translated</param>
            <param name="rawMessage">The raw message</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.ICashOutProbabilities`1"/> instance constructed from information in the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor">
            <summary>
            Defines a contract implemented by classes capable of processing feed messages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor.ProcessorId">
            <summary>
            The processor identifier
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor.MessageProcessed">
            <summary>
            Raised when a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance has been processed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageProcessor.ProcessMessage(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage,Sportradar.OddsFeed.SDK.Api.Config.MessageInterest,System.Byte[])">
            <summary>
            Processes and dispatches the provided <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance to be processed</param>
            <param name="interest">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Config.MessageInterest"/> specifying the interest of the associated session</param>
            <param name="rawMessage">A raw message received from the feed</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator">
            <summary>
            Defines a contract implemented by classes used for validation of feed(AMQP) messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IFeedMessageValidator.Validate(Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage)">
            <summary>
            Validates the specified <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
            <param name="message">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance to be validated.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult"/> specifying the validation result.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.IPreloadableEntity">
            <summary>
            Represents an entity that supports asynchronous preloading from the API source.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.IPreloadableEntity.EnsureSummaryIsFetchedForLanguages(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions)">
            <summary>
            Asynchronously retrieves and populates the entity's data from the API.
            </summary>
            <param name="languages">Languages to fetch the summary for.</param>
            <param name="requestOptions">Options for the request.</param>
            <returns>A task that represents the asynchronous preload operation.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.MessageProcessorBase">
            <summary>
            Base class for message processor
            </summary>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Entities.Internal.MessageProcessorBase.MessageProcessed">
            <summary>
            Raised when a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance has been processed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.MessageProcessorBase.RaiseOnMessageProcessedEvent(Sportradar.OddsFeed.SDK.Entities.Internal.EventArguments.FeedMessageReceivedEventArgs)">
            <summary>
            Raise a <see cref="E:Sportradar.OddsFeed.SDK.Entities.Internal.MessageProcessorBase.MessageProcessed"/> event
            </summary>
            <param name="e">Send the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> originally received</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory">
            <summary>
            A factory used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> and <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory._sportDataCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve sport related info
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory._sportEventCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance used to retrieve sport events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory._eventStatusCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> used to retrieve statuses of sport events
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory._matchStatusCache">
            <summary>
            The match status cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory._profileCache">
            <summary>
            The profile cache
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory"/> class
            </summary>
            <param name="sportDataCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve sport related info</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance used to retrieve sport events</param>
            <param name="eventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> used to retrieve statuses of sport events</param>
            <param name="matchStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> used to retrieve match statuses</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> used to retrieve player profiles</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildSportInternal(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Constructs and returns a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> from the provided data
            </summary>
            <param name="sportData">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> instance containing info about the sport</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying the languages to which the sport data is translated</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildSportsAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            build sports as an asynchronous operation.
            </summary>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> representing the sport specified by its id
            </summary>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport which will be represented by the constructed instance</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildPlayerAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer"/> representing the player or competitor profile specified by its id
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player or competitor which will be represented by the constructed instance</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>        /// <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildSportEvent``1(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> derived class based on specified id
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> derived type</typeparam>
            <param name="eventId">The identifier</param>
            <param name="sportId">The sport identifier</param>
            <param name="cultures">The cultures used for returned instance</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildCompetitor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> id used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="competitorsReferences">The dictionary of competitor references (associated with specific match)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="competitorsReferences">The dictionary of competitor references (associated with specific match)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildTeamCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> class
            </summary>
            <param name="teamCompetitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEntityFactory.BuildCategoryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> class
            </summary>
            <param name="categoryId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/></param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper">
            <summary>
            Class SportEventStatusMapper.
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus" /> instance containing status data about the associated sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper" /> class.
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus" /> instance containing status data about the associated sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper.Create(Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus)">
            <summary>
            Construct and returns a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus"/> containing data used to build the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus"/> instance</param>
            <returns>a new instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/>
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Internal.SportEventStatusMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus)">
            <summary>
            Creates and returns a mapper instance for sport event status
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus"/> instance which the created mapper will map</param>
            <returns>New mapper instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult">
            <summary>
            Enumerates the results of object validation
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult.Success">
            <summary>
            The validation was successful, the validated object is valid
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult.ProblemsDetected">
            <summary>
            The validation detected some minor issues, but the validated object can still be used for further processing
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Internal.ValidationResult.Failure">
            <summary>
            The validation failed, the validated object is not valid
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1">
            <summary>
            Defines a contract implemented by odds-change messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1.ChangeReason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Enums.OddsChangeReason"/> enum member specifying the reason for odds change or a null reference if the reason is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1.BetStopReason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> specifying the reason for betting being stopped, or a null reference if the reason is not known
            </summary>
            <value>The bet stop reason.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1.BettingStatus">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> indicating the odds change was triggered by a possible event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsChange`1.OddsGenerationProperties">
            <summary>
            Gets the odds generation properties (contains a few key-parameters that can be used in a client’s own special odds model, or even offer spread betting bets based on it)
            </summary>
            <value>The odds generation properties</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOddsGeneration">
            <summary>
            Provided by the prematch odds producer only, and contains a few key-parameters that can be used in a client’s own special odds model, or even offer spread betting bets based on it.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsGeneration.ExpectedTotals">
            <summary>
            Gets the expected totals (how many goals are expected in total?)
            </summary>
            <value>The expected totals</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOddsGeneration.ExpectedSupremacy">
            <summary>
            Gets the expected supremacy (how big is the expected goal supremacy)
            </summary>
            <value>The expected supremacy</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOutcome">
            <summary>
            Represent a betting market outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcome.Id">
            <summary>
            Gets the value uniquely identifying the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IOutcome.GetNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the outcome in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language in which to get the name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IOutcome.GetMappedOutcomeIdsAsync">
            <summary>
            Asynchronously gets the mapping Ids of the specified outcome
            </summary>
            <returns>Returns the mapping Ids of the specified outcome</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcome.OutcomeDefinition">
            <summary>
            Gets the associated outcome definition instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition">
            <summary>
            Defines methods used to access outcome definition properties
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IOutcomeDefinition.GetNameTemplate(System.Globalization.CultureInfo)">
            <summary>
            Returns the unmodified outcome name template
            </summary>
            <param name="culture">The culture in which the name template should be provided</param>
            <returns>The unmodified name template</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds">
            <summary>
            Represents an odds for an outcome(selection)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds.GetOdds(Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType)">
            <summary>
            Gets the odds in specified format
            </summary>
            <param name="oddsDisplayType">Display type of the odds (default: <see cref="F:Sportradar.OddsFeed.SDK.Entities.Enums.OddsDisplayType.Decimal"/>)</param>
            <returns>The value of the outcome odds in specified format</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities">
            <summary>
            Represents a selection with probabilities information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcome" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities.Active">
            <summary>
            Gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcome"/> is active - i.e. should bets on it be accepted
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities.Probabilities">
            <summary>
            Gets the probabilities for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcome"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeProbabilities.AdditionalProbabilities">
            <summary>
            Additional probability attributes for markets which potentially will be (partly) refunded
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement">
            <summary>
            Represent settlement information for an outcome(market selection)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement.DeadHeatFactor">
            <summary>
            Gets a dead-heat factor for the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement"/> instance
            </summary>
            <remarks>
            A dead heat is defined as an event in which there are two or more joint winning contracts
            Dead heat rules state that the stake should be divided by the number of competitors involved in the dead heat and then settled at the normal odds
            </remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement.VoidFactor">
            <summary>
            Gets the <see cref="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement.VoidFactor"/> associated with a current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement"/> or a null reference. The value indicates
            the percentage of the stake that should be voided(returned to the punter).
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement.OutcomeResult">
            <summary>
            Gets a value indicating whether the outcome associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeSettlement"/> is winning - i.e. have the bets placed on this outcome winning or losing
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IPlayerOutcomeOdds">
            <summary>
            Represents an odds for a player outcome(selection)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.IOutcomeOdds" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.IPlayerOutcomeOdds.GetCompetitorAsync">
            <summary>
            Asynchronously gets the team to which the associated player belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IPlayerOutcomeOdds.HomeOrAwayTeam">
            <summary>
            Gets the value indicating whether the associated team is home or away
            </summary>
            <value>The value indicating whether the associated team is home or away</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IProducerStatusChange">
            <summary>
            Defines a contract implemented by messages indicating that a producer status changed to down or up
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1">
            <summary>
            Defines a contract implemented by bet-cancel-rollback messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1.StartTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the start of rollback cancellation period.
            A null value indicates the period started with market activation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.IRollbackBetCancel`1.EndTime">
            <summary>
            Gets number of milliseconds from UTC epoch representing the end of rollback cancellation period.
            A null value indicates the period ended when the market was closed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.IRollbackBetSettlement`1">
            <summary>
            Defines a contract implemented by bet-settlement-rollback messages
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> derived type specifying the type of the associated sport event</typeparam>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted">
            <summary>
            Defines a contract implemented by messages indicating that all messages from the requested snapshot were send
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted.RequestId">
            <summary>
            Get the id of the request which triggered the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.ISnapshotCompleted"/> message
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase">
            <summary>
            Abstract class used to export/import cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase.Id">
            <summary>
            A <see cref="T:System.String"/> representing id of the related entity
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated name of the item
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo">
            <summary>
            Class used to export/import bonus info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo.BonusBalls">
            <summary>
            A <see cref="T:System.Int32"/> representing the bonus balls
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo.BonusDrumType">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo.BonusDrumType"/> representing the bonus drum type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo.BonusRange">
            <summary>
            A <see cref="T:System.String"/> representing the bonus range
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar">
            <summary>
            Class used to export/import car item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar.Name">
            <summary>
            A <see cref="T:System.String"/> representing the name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar.Chassis">
            <summary>
            A <see cref="T:System.String"/> representing the chassis
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar.EngineName">
            <summary>
            A <see cref="T:System.String"/> representing the engine name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory">
            <summary>
            Class used to export/import category cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory.SportId">
            <summary>
            Gets the <see cref="T:System.String"/> specifying the id of the parent sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory.TournamentIds">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the ids of child tournaments
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition">
            <summary>
            Class used to export/import competition cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.BookingStatus">
            <summary>
            Gets the <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.BookingStatus"/> specifying the booking status
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.Venue">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue"/> specifying the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.Conditions">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions"/> specifying the conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.Competitors">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the competitors
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.ReferenceId">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IDictionary`2"/> specifying the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.CompetitorsQualifiers">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IDictionary`2"/> specifying the competitors qualifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.CompetitorsReferences">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IDictionary`2"/> specifying the competitors qualifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.LiveOdds">
            <summary>
            Gets a liveOdds
            </summary>
            <returns>A liveOdds</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.SportEventType">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.SportEventType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.SportEventType"/> for the associated sport event.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.StageType">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.StageType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetition.StageType"/> for the associated sport event.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor">
            <summary>
            Class used to export/import competitor cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.CountryNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing competitor's country name in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Abbreviations">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing competitor abbreviations in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.AssociatedPlayerIds">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing associated player ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.AssociatedPlayersJerseyNumbers">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing associated player jersey numbers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.IsVirtual">
            <summary>
            A <see cref="T:System.Boolean"/> indicating whether represented competitor is virtual
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.ReferenceIds">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Jerseys">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing jerseys
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.CountryCode">
            <summary>
            A <see cref="T:System.String"/> representing the country code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.State">
            <summary>
            A <see cref="T:System.String"/> representing the state
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Manager">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager"/> representing the manager
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Venue">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue"/> representing the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Gender">
            <summary>
            A <see cref="T:System.String"/> representing the gender
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.AgeGroup">
            <summary>
            A <see cref="T:System.String"/> representing the age group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.RaceDriverProfile">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile"/> representing the race driver profile
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.PrimaryCulture">
            <summary>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the primary culture
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.CultureCompetitorProfileFetched">
            <summary>
            The list of CultureInfo used to fetch competitor profiles
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.SportId">
            <summary>
            A <see cref="T:System.String"/> representing the sport id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.CategoryId">
            <summary>
            A <see cref="T:System.String"/> representing the category id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.ShortName">
            <summary>
            Gets the short name
            </summary>
            <value>The short name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor.Division">
            <summary>
            GEts the division
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCourse">
            <summary>
            Class used to export/import course item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCourse.Id">
            <summary>
            The id value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCourse.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated name of the item
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCourse.Holes">
            <summary>
            List of associated holes
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo">
            <summary>
            Class used to export/import coverage info cache item properties
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo.Level">
            <summary>
            A <see cref="T:System.String"/> representation of the level
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo.IsLive">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the coverage is live
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo.Includes">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the includes
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo.CoveredFrom">
            <summary>
            A <see cref="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo.CoveredFrom"/> representation of the covered from
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo">
            <summary>
            Class used to export/import current season info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.Year">
            <summary>
            A <see cref="T:System.String"/> representation of the year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.StartDate">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the start date
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.EndDate">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the end date
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.SeasonCoverage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage"/> representation of the coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.Groups">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the groups
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.CurrentRound">
            <summary>
            A <see cref="T:System.String"/> representation of the current round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.Competitors">
            <summary>
            A list representation of the competitors ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo.Schedule">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the schedule
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo">
            <summary>
            Class used to export/import referee cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo.Id">
            <summary>
            A <see cref="T:System.String" /> specifying the id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo.Descriptions">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing descriptions in different languages
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDivision">
            <summary>
            Class used to export/import division cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDivision.Id">
            <summary>
            The id of the division
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDivision.Name">
            <summary>
            The name of the division
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw">
            <summary>
            Class used to export/import draw cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.LotteryId">
            <summary>
            A <see cref="T:System.String"/> representing the lottery id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.DrawStatus">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.DrawStatus"/> representing the draw status
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.ResultsChronological">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the results are chronological
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.Results">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the results
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw.DisplayId">
            <summary>
            A <see cref="T:System.Int32"/> representing the display id
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo">
            <summary>
            Class used to export/import draw info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo.DrawType">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo.DrawType"/> representing the draw type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo.TimeType">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo.TimeType"/> representing the time type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo.GameType">
            <summary>
            A <see cref="T:System.String"/> representing the game type
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawResult">
            <summary>
            Class used to export/import draw result cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawResult.Value">
            <summary>
            A <see cref="T:System.Int32"/> representing the value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawResult.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated names
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer">
            <summary>
            Class used to export/import event player cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer.Bench">
            <summary>
            A <see cref="T:System.String"/> representing the bench value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer.Method">
            <summary>
            A <see cref="T:System.String"/> representing the method value
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayerAssist">
            <summary>
            Class used to export/import event player assist cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayerAssist.Type">
            <summary>
            A <see cref="T:System.String"/> representing the type
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline">
            <summary>
            Class used to export/import event timeline cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline.Timeline">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the timeline
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline.IsFinalized">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the time line is finished
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline.FetchedCultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the fetched cultures
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture">
            <summary>
            Class used to export/import fixture cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.StartTime">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the start time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.NextLiveTime">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the next live time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.StartTimeConfirmed">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the start time is confirmed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.StartTimeTbd">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the start time is TBD
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.ReplacedBy">
            <summary>
            A <see cref="T:System.String"/> representation of the replaced by
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.ExtraInfo">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representation of the extra info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.TvChannels">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the TV channels
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.CoverageInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo"/> representation of the coverage info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.ProductInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo"/> representation of the product info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.References">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representation of the references
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.ScheduledStartTimeChanges">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the scheduled start time changes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.ParentStageId">
            <summary>
            Gets a id of the parent stage associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture.AdditionalParentsIds">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the additional parent stages associated with the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup">
            <summary>
            Class used to export/import group cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup.Id">
            <summary>
            A <see cref="T:System.String"/> representation of the id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup.Name">
            <summary>
            A <see cref="T:System.String"/> representation of the name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup.Competitors">
            <summary>
            A list of competitor id Urn as string representation of the competitors ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup.CompetitorsReferences">
            <summary>
            A dictionary of competitor ids and references representation of the competitor references
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableHole">
            <summary>
            Class used to export/import hole item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableHole.Number">
            <summary>
            Gets the number of the hole
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableHole.Par">
            <summary>
            Gets the par
            </summary>
            <value>The par</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey">
            <summary>
            Class used to export/import jersey item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.BaseColor">
            <summary>
            Gets the value specifying the base color
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.Number">
            <summary>
            Gets the value specifying the number
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.SleeveColor">
            <summary>
            Gets the value specifying the sleeve color
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.Type">
            <summary>
            Gets the value specifying the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.HorizontalStripes">
            <summary>
            Gets the value specifying the horizontal stripes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.Split">
            <summary>
            Gets the value specifying the split
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.Squares">
            <summary>
            Gets the value specifying the squares
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.Stripes">
            <summary>
            Gets the value specifying the stripes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.StripesColor">
            <summary>
            Gets the value specifying the stripes color
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.SplitColor">
            <summary>
            Gets the value specifying the split color
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.ShirtType">
            <summary>
            Gets the value specifying the shirt type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.SleeveDetail">
            <summary>
            Gets the value specifying the sleeve detail
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.SquareColor">
            <summary>
            Gets the value specifying the square color
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey.HorizontalStripesColor">
            <summary>
            Gets the value specifying the horizontal stripes color
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery">
            <summary>
            Class used to export/import lottery cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery.CategoryId">
            <summary>
            A <see cref="T:System.String"/> representing the category id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery.BonusInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBonusInfo"/> representing the bonus info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery.DrawInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo"/> representing the draw info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery.ScheduledDraws">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the scheduled draws
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager">
            <summary>
            Class used to export/import manager item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager.Nationality">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated nationality of the item
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager.CountryCode">
            <summary>
            A <see cref="T:System.String"/> representing the country code of the manager
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch">
            <summary>
            Class used to export/import match cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.Season">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason"/> representation of the season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.TournamentRound">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound"/> representation of the tournament round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.TournamentId">
            <summary>
            A <see cref="T:System.String"/> representation of the tournament id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.Fixture">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableFixture"/> representation of the fixture
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.EventTimeline">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline"/> representation of the event timeline
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.DelayedInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo"/> representation of the delayed info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch.CoverageInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo"/> representation of the coverage info
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher">
            <summary>
            Class used to export/import pitcher cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher.Id">
            <summary>
            A <see cref="T:System.String"/> representing id of the related entity
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher.Name">
            <summary>
            A <see cref="T:System.String" /> specifying the name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher.Hand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PlayerHand" /> specifying the hand with which player pitches
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher.Competitor">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway" /> indicating if the competitor is Home or Away
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile">
            <summary>
            Class used to export/import player profile cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Nationalities">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing nationalities in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Type">
            <summary>
            A <see cref="T:System.String"/> representing the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.DateOfBirth">
            <summary>
            A <see cref="T:System.DateTime"/> representing the date of birth
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Height">
            <summary>
            A <see cref="T:System.Int32"/> representing the height
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Weight">
            <summary>
            A <see cref="T:System.Int32"/> representing the weight
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Abbreviation">
            <summary>
            A <see cref="T:System.String"/> representing the abbreviation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Gender">
            <summary>
            A <see cref="T:System.String"/> representing the gender
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.CompetitorId">
            <summary>
            The competitor id this player belongs to
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.CountryCode">
            <summary>
            Gets the country code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.FullName">
            <summary>
            Gets the full name of the player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile.Nickname">
            <summary>
            Gets the nickname of the player
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo">
            <summary>
            Class used to export/import product info cache item properties
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.IsAutoTraded">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the product is auto traded
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.IsInHostedStatistics">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the product is in hosted statistics
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.IsInLiveCenterSoccer">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the product is in live center soccer
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.IsInLiveMatchTracker">
            <summary>
            The <see cref="T:System.Boolean"/> indicating if the product is in live match tracker
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.IsInLiveScore">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the product is in live score
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.Links">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the links
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo.Channels">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representation of the channels
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfoLink">
            <summary>
            Class used to export/import product info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfoLink.Reference">
            <summary>
            A <see cref="T:System.String"/> representing the reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfoLink.Name">
            <summary>
            A <see cref="T:System.String"/> representing the name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile">
            <summary>
            Class used to export/import race driver profile item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile.RaceDriverId">
            <summary>
            A <see cref="T:System.String"/> representing the race driver id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile.RaceTeamId">
            <summary>
            A <see cref="T:System.String"/> representing the race team id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile.Car">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar"/> representing the car
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee">
            <summary>
            Class used to export/import referee cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee.Id">
            <summary>
            A <see cref="T:System.String"/> representing id of the related entity
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee.Nationality">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing referee nationality in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee.Name">
            <summary>
            A <see cref="T:System.String" /> specifying the name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound">
            <summary>
            Class used to export/import round cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representation of the round names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.PhaseOrGroupLongName">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representation of the phase or group long name in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.Type">
            <summary>
            A <see cref="T:System.String"/> representation of the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.Group">
            <summary>
            A <see cref="T:System.String"/> representation of the group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.GroupId">
            <summary>
            A <see cref="T:System.String"/> representation of the group id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.OtherMatchId">
            <summary>
            A <see cref="T:System.String"/> representation of the other match id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.Number">
            <summary>
            A <see cref="T:System.Int32"/> representation of the number
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.CupRoundMatches">
            <summary>
            A <see cref="T:System.Int32"/> representation of the cup round matches
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.CupRoundMatchNumber">
            <summary>
            A <see cref="T:System.Int32"/> representation of the cup round match number
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.BetradarId">
            <summary>
            A <see cref="T:System.Int32"/> representation of the betradar id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.Phase">
            <summary>
            A <see cref="T:System.String"/> representation of the phase
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound.BetradarName">
            <summary>
            A <see cref="T:System.String"/> representation of the betradar name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableScheduledStartTimeChange">
            <summary>
            Class used to export/import scheduled start time change cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableScheduledStartTimeChange.OldTime">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the old time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableScheduledStartTimeChange.NewTime">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the new time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableScheduledStartTimeChange.ChangedAt">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the changed at
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason">
            <summary>
            Class used to export/import season cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.SeasonId">
            <summary>
            Gets a string representing the Id of the represented sport entity
            </summary>
            <value>The identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing round names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end time.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason.TournamentId">
            <summary>
            Gets the associated tournament identifier.
            </summary>
            <value>The associated tournament identifier.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage">
            <summary>
            Class used to export/import season coverage cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.MaxCoverageLevel">
            <summary>
            A <see cref="T:System.String"/> representation of the max coverage level
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.MinCoverageLevel">
            <summary>
            A <see cref="T:System.String"/> representation of the min coverage level
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.MaxCovered">
            <summary>
            A <see cref="T:System.Int32"/> representation of the max covered
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.Played">
            <summary>
            A <see cref="T:System.String"/> representation of the year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.Scheduled">
            <summary>
            A <see cref="T:System.Int32"/> representation of the scheduled
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage.SeasonId">
            <summary>
            A <see cref="T:System.String"/> representation of the season id
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSport">
            <summary>
            Class used to export/import sport cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSport.CategoryIds">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the id's of child categories
            </summary>
            
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSport.LoadedCategories">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the loaded categories for tournament
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent">
            <summary>
            Class used to export/import sport event cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.SportId">
            <summary>
            Gets the <see cref="T:System.String"/> specifying the id of the parent sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.Scheduled">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the start time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.ScheduledEnd">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the end time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.StartTimeTbd">
            <summary>
            Gets the <see cref="T:System.Boolean"/> indicating if the start time is to be determined
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.ReplacedBy">
            <summary>
            Gets the <see cref="T:System.String"/> specifying the replacement sport event id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.LoadedFixtures">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> specifying the loaded fixtures
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent.LoadedSummaries">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> specifying the loaded summaries
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions">
            <summary>
            Class used to export/import sport event conditions cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions.Attendance">
            <summary>
            A <see cref="T:System.String" /> specifying the attendance of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions.EventMode">
            <summary>
            A <see cref="T:System.String" /> specifying the event mode
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions.Referee">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee" /> specifying the referee
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions.WeatherInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo" /> specifying the weather info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions.Pitchers">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the pitchers
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage">
            <summary>
            Class used to export/import pitcher cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage.CategoryId">
            <summary>
            A <see cref="T:System.String"/> representing the category id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage.ParentStageId">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage"/> representing the parent stage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage.ChildStages">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the child stages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage.AdditionalParentIds">
            <summary>
            A list of additional parents ids
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStreamingChannel">
            <summary>
            Class used to export/import product info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStreamingChannel.Id">
            <summary>
            A <see cref="T:System.Int32"/> representing the id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStreamingChannel.Name">
            <summary>
            A <see cref="T:System.String"/> representing the name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTeamCompetitor">
            <summary>
            Class used to export/import team competitor cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTeamCompetitor.Qualifier">
            <summary>
            A <see cref="T:System.String"/> representing the qualifier additionally describing the competitor (e.g. home, away, ...)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent">
            <summary>
            Class used to export/import pitcher cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Id">
            <summary>
            A <see cref="T:System.Int64" /> specifying the id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.HomeScore">
            <summary>
            A <see cref="T:System.Decimal" /> specifying the home score
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.AwayScore">
            <summary>
            A <see cref="T:System.Decimal" /> specifying the away score
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.MatchTime">
            <summary>
            A <see cref="T:System.Int32" /> specifying the match time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Period">
            <summary>
            A <see cref="T:System.String" /> specifying the period
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.PeriodName">
            <summary>
            A <see cref="T:System.String" /> specifying the period name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Points">
            <summary>
            A <see cref="T:System.String" /> specifying the points
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.StoppageTime">
            <summary>
            A <see cref="T:System.String" /> specifying the stoppage time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Team">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway" /> specifying the team
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Type">
            <summary>
            A <see cref="T:System.String" /> specifying the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Value">
            <summary>
            A <see cref="T:System.String" /> specifying the value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.X">
            <summary>
            A <see cref="T:System.Int32" /> specifying the x
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Y">
            <summary>
            A <see cref="T:System.Int32" /> specifying the y
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Time">
            <summary>
            A <see cref="T:System.DateTime" /> specifying the time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Assists">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the assists
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.GoalScorer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer" /> specifying the goal scorer
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.Player">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer" /> specifying the player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.MatchStatusCode">
            <summary>
            A <see cref="T:System.Int32" /> specifying the match status code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTimelineEvent.MatchClock">
            <summary>
            A <see cref="T:System.String" /> specifying the match clock
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentCoverage">
            <summary>
            Class used to export/import tournament coverage cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentCoverage.LiveCoverage">
            <summary>
            A <see cref="T:System.Boolean"/> indicating if the tournament has live coverage
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo">
            <summary>
            Class used to export/import tournament info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.CategoryId">
            <summary>
            A <see cref="T:System.String"/> representing the category id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.TournamentCoverage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentCoverage"/> representing the coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.Competitors">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the competitors ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.CurrentSeasonInfo">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo"/> representing the season info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.Groups">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the groups
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.ScheduleUrns">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the schedule urns
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.Round">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound"/> representing the round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.Year">
            <summary>
            A <see cref="T:System.String"/> representing the year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.TournamentInfoBasic">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfoBasic"/> representing the basic info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.ReferenceId">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the reference id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.SeasonCoverage">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage"/> representing the season coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.Seasons">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the seasons
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.LoadedSeasons">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the loaded seasons
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.LoadedSchedules">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the loaded schedules
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.CompetitorsReferences">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the competitors references
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo.ExhibitionGames">
            <summary>
            A <see cref="T:System.Boolean"/> representing the exhibition games
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfoBasic">
            <summary>
            Class used to export/import tournament info basic cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfoBasic.Category">
            <summary>
            A <see cref="T:System.String"/> representation of the category
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfoBasic.CurrentSeason">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo"/> representation of the current season
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel">
            <summary>
            Class used to export/import tv channel cache item properties
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel.Name">
            <summary>
            A <see cref="T:System.String"/> representation of the name
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel.StartTime">
            <summary>
            A <see cref="T:System.DateTime"/> representation of the start time
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel.StreamUrl">
            <summary>
            A <see cref="T:System.String"/> representation of the stream url
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue">
            <summary>
            Class used to export/import venue item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.CityNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing city of the venue in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.CountryNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing country of the venue in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.Capacity">
            <summary>
            Gets the capacity of the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.Coordinates">
            <summary>
            Gets a map coordinates specifying the exact location of the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.CountryCode">
            <summary>
            Gets a country code of the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.State">
            <summary>
            Gets a state of the venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue.Courses">
            <summary>
            Gets the course
            </summary>
            <value>The course</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo">
            <summary>
            Class used to export/import weather info cache item properties
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo.TemperatureCelsius">
            <summary>
            A <see cref="T:System.Int32" /> specifying the temperature
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo.Wind">
            <summary>
            A <see cref="T:System.String" /> specifying the wind
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo.WindAdvantage">
            <summary>
            A <see cref="T:System.String" /> specifying the wind advantage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo.Pitch">
            <summary>
            A <see cref="T:System.String" /> specifying the pitch
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo.WeatherConditions">
            <summary>
            A <see cref="T:System.String" /> specifying the weather conditions
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelections">
            <summary>
            Provides an available selections for a particular event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelections.EventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelections.Markets">
            <summary>
            Gets the list of markets for this event
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelectionsFilter">
            <summary>
            Provides an available selections for a particular event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelectionsFilter.EventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IAvailableSelectionsFilter.Markets">
            <summary>
            Gets the list of markets for this event
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation">
            <summary>
            Provides a probability calculation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation.Odds">
            <summary>
            Gets the odds
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation.Probability">
            <summary>
            Gets the probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation.AvailableSelections">
            <summary>
            The available selections
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation.GeneratedAt">
            <summary>
            DateTime when API response was generated
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculation.Harmonization">
            <summary>
            Get the value specifying if the calculation used harmonized method
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter">
            <summary>
            Provides a probability calculation filter
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter.Odds">
            <summary>
            Gets the odds
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter.Probability">
            <summary>
            Gets the probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter.AvailableSelections">
            <summary>
            The available selections
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter.GeneratedAt">
            <summary>
            DateTime when API response was generated
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter.Harmonization">
            <summary>
            Get the value specifying if the calculation used harmonized method
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarket">
            <summary>
            Provides an available selections for a particular market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarket.Id">
            <summary>
            Gets the id of the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarket.Specifiers">
            <summary>
            Gets the specifiers for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarket.Outcomes">
            <summary>
            Gets the outcomes for this market
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter">
            <summary>
            Provides an available selections for a particular market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter.Id">
            <summary>
            Gets the id of the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter.Specifiers">
            <summary>
            Gets the specifiers for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter.Outcomes">
            <summary>
            Gets the outcomes for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter.IsConflict">
            <summary>
            Value indicating if this market is in conflict
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IOutcomeFilter">
            <summary>
            Provides an outcomes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IOutcomeFilter.Id">
            <summary>
            Gets the id of the outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IOutcomeFilter.IsConflict">
            <summary>
            Value indicating if this outcome is in conflict
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection">
            <summary>
            Provides an requested selection
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection.EventId">
            <summary>
            Gets the event id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection.MarketId">
            <summary>
            Gets the market id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection.Specifiers">
            <summary>
            Gets the specifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection.OutcomeId">
            <summary>
            Gets the outcome id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection.Odds">
            <summary>
            Gets the odds
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BonusDrumType">
            <summary>
            Enumeration of possible bonus drum types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BonusDrumType.Same">
            <summary>
            The same
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BonusDrumType.Additional">
            <summary>
            The additional
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus">
            <summary>
            Enumerates values providing information on the booking status of an event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus.Buyable">
            <summary>
            Indicates if the associated event is buyable
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus.Bookable">
            <summary>
            Indicates that the associated event is not booked and information associated with it will not be provided, but the event could be booked
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus.Booked">
            <summary>
            Indicates that the associated event is booked and information associated with it will be provided
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus.Unavailable">
            <summary>
            Indicates that the associated event is not available for booking
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom">
            <summary>
            Enumeration of possible coverage locations
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom.Tv">
            <summary>
            Covered from TV
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom.Venue">
            <summary>
            Covered from venue
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus">
            <summary>
            Enumeration of possible draw statuses
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus.Open">
            <summary>
            The open
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus.Closed">
            <summary>
            The closed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus.Finished">
            <summary>
            The finished
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus.Cancelled">
            <summary>
            The cancelled
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawType">
            <summary>
            Enumeration of possible draw types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawType.Drum">
            <summary>
            The drum
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawType.Rng">
            <summary>
            The RNG
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus">
            <summary>
            Describes a high-level status of the sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.NotStarted">
            <summary>
            Indicates that the associated sport event has not yet been started
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Live">
            <summary>
            Indicates that the associated sport event is currently live (the match could be over-time, extended time or between periods too)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Suspended">
            <summary>
            Indicates that the associated sport event has already been started, but is currently suspended
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Ended">
            <summary>
            Indicates that the associated sport event has already ended according to our own data, the final results may not be ready yet
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Closed">
            <summary>
            Indicates that the associated sport event has already ended and no more changes for this event will be transmitted by the system (event closed)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Cancelled">
            <summary>
            The sport event has been cancelled, the event will not take place, there will be no results
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Delayed">
            <summary>
             If a match has passed its scheduled start time but is delayed, unknown when it will start this is something that often happens in Tennis
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Interrupted">
            <summary>
            Indicates that the associated sport event is interrupted. Interruption is expected to be just a few minutes. Longer interruptions may lead to a match being suspended, or possibly postponed.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Postponed">
            <summary>
            Indicates that the associated sport event is postponed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Abandoned">
            <summary>
            Sportradar aborts scouting the match - this means there will be no live reporting; the match will likely take place anyhow, and after the match has been played Sportradar will likely enter the results and the match will be moved to closed/finished
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.Unknown">
            <summary>
            If a hitherto unsupported sport-event-status is received
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus.MatchAboutToStart">
            <summary>
            The match is about to start
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway">
            <summary>
            An indication if the associated entity is home/away
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway.Home">
            <summary>
            The associated entity is home
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway.Away">
            <summary>
            The associated entity is away
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.OutcomeResult">
            <summary>
            An indication of the outcome result
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.OutcomeResult.Lost">
            <summary>
            Lost
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.OutcomeResult.Won">
            <summary>
            Won
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.OutcomeResult.UndecidedYet">
            <summary>
            Undecided yet
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PeriodType">
            <summary>
            Enumeration of all possible period types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PeriodType.RegularPeriod">
            <summary>
            The regular period
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PeriodType.Overtime">
            <summary>
            The overtime
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PeriodType.Penalties">
            <summary>
            The penalties
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PeriodType.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PlayerHand">
            <summary>
            Enumeration of possible player hand
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PlayerHand.Left">
            <summary>
            The left hand player
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.PlayerHand.Right">
            <summary>
            The right hand player
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.ReportingStatus">
            <summary>
            An enum describing the reporting status of a sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.ReportingStatus.NotAvailable">
            <summary>
            The reporting status of the sport event is not available
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.ReportingStatus.Live">
            <summary>
            The reporting status of the sport event is currently live
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.ReportingStatus.Suspended">
            <summary>
            The reporting status of the sport event is suspended or temporary lost contact
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.ReportingStatus.Unknown">
            <summary>
            The reporting status of the sport event is unknown
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType">
            <summary>
            Enumerates available types of sport event types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType.Parent">
            <summary>
            Indicates a parent sport event type (multi-stage race event, ...)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType.Child">
            <summary>
            Indicates a child sport event type(a specific stage in multi-stage race event, ...)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType">
            <summary>
            An enumeration of possible stage types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Parent">
            <summary>
            The parent
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Child">
            <summary>
            The child
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Event">
            <summary>
            The event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Season">
            <summary>
            The season
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Round">
            <summary>
            The round
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.CompetitionGroup">
            <summary>
            The competition group
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Discipline">
            <summary>
            The discipline
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Race">
            <summary>
            The race
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Stage">
            <summary>
            The stage
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Practice">
            <summary>
            The practice
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Qualifying">
            <summary>
            The qualifying
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.QualifyingPart">
            <summary>
            The qualifying part
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Lap">
            <summary>
            The lap
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Prologue">
            <summary>
            The prologue
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.Run">
            <summary>
            The run
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType.SprintRace">
            <summary>
            The sprint race
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.TimeType">
            <summary>
            Enumeration of possible time types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.TimeType.Interval">
            <summary>
            The interval
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.TimeType.Fixed">
            <summary>
            The fixed
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.TimeType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor">
            <summary>
            Specifies the void factor of the associated outcome. The value indicates
            the percentage of the stake that should be voided (returned to the punter).
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor.Zero">
            <summary>
            Indicates that the entire bet(stake) should be settled according to the result of the outcome
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor.Half">
            <summary>
            Indicates that the half of bet(stake) should be settled according to the result of the outcome
            and the other have should be voided (returned to the punter)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor.One">
            <summary>
            Indicates that the entire bet(stake) should be voided (returned to the punter)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IAssist">
            <summary>
            Defines a contract implemented by classes representing assists on a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IAssist.Type">
            <summary>
            Gets a <see cref="T:System.String"/> specifying the type of the assist
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity">
            <summary>
            Defines a contract for classes implementing basic entity information, containing Id as <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> and translatable Name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name associated with this instance in specific language
            </summary>
            <param name="culture">The language used to get the name</param>
            <returns>Name if available in specified language or null</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity.Names">
            <summary>
            Gets the list of translated names
            </summary>
            <value>The list of translated names</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament">
            <summary>
            Defines a contract for classes implementing tournament information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament.GetCategoryAsync">
            <summary>
            Asynchronously gets the category
            </summary>
            <returns>The category</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament.GetCompetitorsAsync">
            <summary>
            Asynchronously gets the competitors
            </summary>
            <returns>The competitors</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament.GetScheduleAsync">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo">
            <summary>
            Defines a contract for classes implementing the bonus info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo.BonusBalls">
            <summary>
            Gets the bonus balls info
            </summary>
            <value>The bonus balls info or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo.BonusDrumType">
            <summary>
            Gets the type of the bonus drum
            </summary>
            <value>The type of the bonus drum or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo.BonusRange">
            <summary>
            Gets the bonus range
            </summary>
            <value>The bonus range</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails">
            <summary>
            Defines  a contract implemented by classes representing bookmaker information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.Message">
            <summary>
            Gets an optional message associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.ExpireAt">
            <summary>
            Gets a value specifying the bookmaker's token will expire
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.BookmakerId">
            <summary>
            Gets the Sportradar's provided bookmaker id of the associated bookmaker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.ResponseCode">
            <summary>
            Gets the response code of the server's response or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.VirtualHost">
            <summary>
            Gets the virtual host which should be used when connecting to the AMQP broker
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IBookmakerDetails.ServerTimeDifference">
            <summary>
            Gets the server time difference
            </summary>
            <value>The server time difference</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICar">
            <summary>
            Represents a car
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICar.Name">
            <summary>
            Gets the car name
            </summary>
            <value>The car name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICar.Chassis">
            <summary>
            Gets the car chassis
            </summary>
            <value>The car chassis</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICar.EngineName">
            <summary>
            Gets the car engine name
            </summary>
            <value>The car engine name</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategory">
            <summary>
            Defines a contract implemented by classes representing sport category
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICategory.Tournaments">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the tournaments which belong to
            the category represented by the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary">
            <summary>
            Defines a contract implemented by classes representing sport category
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the category represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated category name
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name in specified culture language
            </summary>
            <param name="culture">The culture.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition">
            <summary>
            Defines a contract implemented by classes representing sport events regardless to which sport they belong
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetStatusAsync">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> instance containing information about the progress of a sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus"/> instance containing information about the progress of the sport event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetBookingStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member providing booking status for the associated entity or a null reference if booking status is not known
            </summary>
            <returns>Returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member providing booking status for the associated entity or a null reference if booking status is not known</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetVenueAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue"/> instance representing a venue where the sport event associated with the
            current instance will take place
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetConditionsAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions"/> instance representing live conditions of the sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetCompetitorsAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetEventStatusAsync">
            <summary>
            Gets the event status asynchronous
            </summary>
            <returns>Get the event status</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetSportEventTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetLiveOddsAsync">
            <summary>
            Asynchronously gets a liveOdds
            </summary>
            <returns>A liveOdds</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition.GetCompetitorsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <param name="culture">The culture in which we want to return competitor data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatistics">
            <summary>
            Defines a contract for classes implementing competition specific statistics
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus">
            <summary>
            Defines a contract implemented by classes representing the status of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.WinnerId">
            <summary>
            Gets the winner identifier
            </summary>
            <value>The winner identifier, if available, otherwise null</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus"/> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.ReportingStatus">
            <summary>
            Returns a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.ReportingStatus"/>  describing the reporting status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.EventResults">
            <summary>
            Gets the event results
            </summary>
            <value>The event results</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object"/> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus.PeriodOfLadder">
            <summary>
            Gets the period of ladder
            </summary>
            <value>The period of ladder</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor">
            <summary>
            Represents a team competing in a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Countries">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing competitor's country names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Abbreviations">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing competitor's abbreviations in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.IsVirtual">
            <summary>
            Gets a value indicating whether the current instance represents a placeholder team
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.References">
            <summary>
            Gets the reference ids
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.GetCountry(System.Globalization.CultureInfo)">
            <summary>
            Gets the competitor's country name in the specified language or a null reference.
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the country name.</param>
            <returns>The competitor's country name in the specified language or a null reference.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.GetAbbreviation(System.Globalization.CultureInfo)">
            <summary>
            Gets the competitor's abbreviation in the specified language or a null reference.
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the abbreviation.</param>
            <returns>The competitor's abbreviation in the specified language or a null reference.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.AssociatedPlayers">
            <summary>
            Gets the list of associated player ids
            </summary>
            <value>The associated player ids</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Jerseys">
            <summary>
            Gets the jerseys of known competitors
            </summary>
            <value>The jerseys</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Manager">
            <summary>
            Gets the manager
            </summary>
            <value>The manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Venue">
            <summary>
            Gets the venue
            </summary>
            <value>The venue</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Gender">
            <summary>
            Gets the gender
            </summary>
            <value>The gender</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.RaceDriverProfile">
            <summary>
            Gets the race driver profile
            </summary>
            <value>The race driver profile</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.AgeGroup">
            <summary>
            Gets the age group
            </summary>
            <value>The age group</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.State">
            <summary>
            Gets the state
            </summary>
            <value>The state</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.GetSportAsync">
            <summary>
            Gets associated sport
            </summary>
            <returns>The associated sport</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.GetCategoryAsync">
            <summary>
            Gets associated category
            </summary>
            <returns>The associated category</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.ShortName">
            <summary>
            Gets the short name
            </summary>
            <value>The short name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor.Division">
            <summary>
            Gets the division
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorPlayer">
            <summary>
            Defines a contract implemented by classes representing a player profile
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorPlayer.JerseyNumber">
            <summary>
            Gets the jersey number of the player
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorResult">
            <summary>
            Defines contract used by classes that provide competitor result information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorResult.Type">
            <summary>
            Get the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorResult.Value">
            <summary>
            Gets the value
            </summary>
            <value>The value</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitorResult.Specifiers">
            <summary>
            Gets the specifiers
            </summary>
            <value>The specifiers</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICourse">
            <summary>
            Defines a contract implemented by classes representing a golf course
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICourse.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICourse"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICourse.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing course's names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICourse.Holes">
            <summary>
            Get the list of holes associated with this course
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo">
            <summary>
            Defines a contract implemented by classes providing coverage information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo.Level">
            <summary>
            Gets a <see cref="T:System.String"/> describing the level of the available coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo.IsLive">
            <summary>
            Gets a value indicating whether the coverage represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo"/> is live coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo.Includes">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying what is included in the coverage represented by the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo.CoveredFrom">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo.CoveredFrom"/> describing the coverage location
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo">
            <summary>
            Defines a contract implemented by classes providing information about current season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing names of the season in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end date.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the season name in the specified languages
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name.</param>
            <returns>The season name in the specified languages.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Coverage">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage"/> instance containing information about coverage available for the season associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage"/> instance containing information about coverage available for the season associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Groups">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.CurrentRound">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> specifying the current round of the tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> specifying the current round of the tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Competitors">
            <summary>
            Gets the list of competitors
            </summary>
            <value>The list of competitors</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo.Schedule">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the season schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the season schedule</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo">
            <summary>
            Defines a contract implemented by classes representing delayed info in a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo.Id">
            <summary>
            Gets the id identifying the current instance
            </summary>
            <value>The id identifying the current instance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo.Descriptions">
            <summary>
            
            Gets the list of translated names
            </summary>
            <value>The list of translated names</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description associated with this instance in specific language
            </summary>
            <param name="culture">The language used to get the description</param>
            <returns>Description if available in specified language or null</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDivision">
            <summary>
            Represents a division of associated competitor
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDivision.Id">
            <summary>
            Id of the division
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDivision.Name">
            <summary>
            Name of the division
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw">
            <summary>
            Defines a contract implemented by classes, which represent information about a lottery draw
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw.GetLotteryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing id of the associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery"/>
            </summary>
            <returns>The id of the associated lottery</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw.GetStatusAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw.GetResultsAsync">
            <summary>
            Asynchronously gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw.GetDisplayIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Int32"/> representing display id
            </summary>
            <returns>The display id</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo">
            <summary>
            Defines a contract for classes implementing the draw info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo.DrawType">
            <summary>
            Gets the type of the draw
            </summary>
            <value>The type of the draw</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo.TimeType">
            <summary>
            Gets the type of the time
            </summary>
            <value>The type of the time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo.GameType">
            <summary>
            Gets the type of the game
            </summary>
            <value>The type of the game</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult">
            <summary>
            Defines a contract for classes implementing the draw result
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult.Value">
            <summary>
            Gets the value of the draw
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated names
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name in specified culture language
            </summary>
            <param name="culture">The culture</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEntityPrinter">
            <summary>
            A contract for implementing entity printer
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IEntityPrinter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IEntityPrinter.ToString(System.IFormatProvider)">
            <summary>
            Returns a string that represents the current object
            </summary>
            <param name="formatProvider">A format provider used to format the output string</param>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IEntityPrinter.ToString(System.String,System.IFormatProvider)">
            <summary>Formats the value of the current instance using the specified format.</summary>
            <returns>The value of the current instance in the specified format.</returns>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation. </param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. </param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock">
            <summary>
            Defines a contract implemented by classes representing the event clock
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.EventTime">
            <summary>
            Gets the event time of the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.StoppageTime">
            <summary>
            Gets the representation of the time the event associated with the current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock"/> has been stopped
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.StoppageTimeAnnounced">
            <summary>
            Gets the announced stoppage time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.RemainingDate">
            <summary>
            Gets the remaining date
            </summary>
            <value>The remaining date</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.RemainingTimeInPeriod">
            <summary>
            Gets the remaining time in period
            </summary>
            <value>The remaining time in period</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock.Stopped">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock"/> is stopped
            </summary>
            <value><c>true</c> if stopped; otherwise, <c>false</c></value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer">
            <summary>
            Defines a contract implemented by classes representing players or racers in a sport event timeline events
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing player names in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the player in the specified language or a null reference
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the player in the specified language or a null reference.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer.Bench">
            <summary>
            Gets the bench value
            </summary>
            <value>The bench value - in case of yellow or red card event, it is relevant to know if the player who is getting the card is sitting on the bench at that exact moment.</value>
            <remarks>The attribute is equal to 1 if the player who gets the card is sitting on the bench. In case the player who gets the card is on the field, then the attribute is not added at all.</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult">
            <summary>
            Defines methods used by classes that provide event result information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Id">
            <summary>
            Gets the id of the event result
            </summary>
            <value>The id of the event result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Position">
            <summary>
            Gets the position of the result
            </summary>
            <value>The position of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.PointsDecimal">
            <summary>
            Gets the points
            </summary>
            <value>The points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.WcPoints">
            <summary>
            Gets the wc?points
            </summary>
            <value>The wc?points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Time">
            <summary>
            Gets the time of the result
            </summary>
            <value>The time of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.TimeRanking">
            <summary>
            Gets the time ranking
            </summary>
            <value>The time ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Status">
            <summary>
            Gets the status of the result
            </summary>
            <value>The status of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.StatusComment">
            <summary>
            Gets the status comment
            </summary>
            <value>The status comment</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.SprintDecimal">
            <summary>
            Gets the sprint
            </summary>
            <value>The sprint</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.SprintRanking">
            <summary>
            Gets the sprint ranking
            </summary>
            <value>The sprint ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.ClimberDecimal">
            <summary>
            Gets the climber
            </summary>
            <value>The climber</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.ClimberRanking">
            <summary>
            Gets the climber ranking
            </summary>
            <value>The climber ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the match status
            </summary>
            <param name="culture">The culture used to get match status id and description</param>
            <returns>Returns the match status id and description in selected culture</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Grid">
            <summary>
            Gets the grid
            </summary>
            <value>The grid</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.Distance">
            <summary>
            Gets the distance
            </summary>
            <value>The distance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult.CompetitorResults">
            <summary>
            Gets the competitor results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventTimeline">
            <summary>
            Defines a contract for classes implementing event timeline for specific <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IEventTimeline.TimelineEvents">
            <summary>
            Gets the chronological list of events
            </summary>
            <value>The chronological list of events</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture">
            <summary>
            Defines a contract implemented by classes representing a fixture
            </summary>
            <remarks>
            A Fixture is a sport event that has been arranged for a particular time and place
            </remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.StartTime">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying when the fixture associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/>
            is scheduled to start
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.StartTimeConfirmed">
            <summary>
            Gets a value indicating whether the start time of the fixture represented by current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance has been confirmed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.StartTimeTbd">
            <summary>
            Gets a value indicating whether the start time is yet to be determent
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.NextLiveTime">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the live time in case the fixture represented by current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance was re-schedule, or a null reference if the fixture was not re-scheduled
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.ReplacedBy">
            <summary>
            When sport event is postponed this field indicates with which event it is replaced
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> this event is replaced by</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.ExtraInfo">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional information about the
            fixture represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance
            </summary>
            <remarks>The collection may contain deprecated key 'streaming'.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.TvChannels">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing TV channels covering the sport event
            represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.CoverageInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo"/> instance specifying what coverage is available for the sport event
            associated with current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.ProductInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo"/> instance providing Sportradar related information about the sport event associated
            with the current instance.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.References">
            <summary>
            Gets the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.ScheduledStartTimeChanges">
            <summary>
            Gets the scheduled start time changes
            </summary>
            <value>The scheduled start time changes</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.ParentStageId">
            <summary>
            Gets an id of the parent stage associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture.AdditionalParentsIds">
            <summary>
            Gets the list specifying the additional parent ids associated with the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange">
            <summary>
            Defines a contract implemented by classes representing fixture change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer">
            <summary>
            Defines a contract implemented by classes representing goal scorer in a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing player names in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the player in the specified language or a null reference
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the player in the specified language or a null reference.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer.Method">
            <summary>
            Gets the method value
            </summary>
            <value>The method value</value>
            <remarks>The attribute can assume values such as 'penalty' and 'own goal'. In case the attribute is not inserted, then the goal is not own goal neither penalty.</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup">
            <summary>
            Defines a contract implemented by classes representing a competition group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup.Competitors">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing group competitors
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup.Id">
            <summary>
            Gets the id of the group represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup"/> instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IHole">
            <summary>
            Defines a contract implemented by classes representing a hole of a golf course
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IHole.Number">
            <summary>
            Gets the number of the hole
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IHole.Par">
            <summary>
            Gets the par
            </summary>
            <value>The par</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey">
            <summary>
            Defines a contract for classes implementing jersey
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.BaseColor">
            <summary>
            Gets the base color of the jersey
            </summary>
            <value>The base color of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.Number">
            <summary>
            Gets the number of the jersey
            </summary>
            <value>The number of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.SleeveColor">
            <summary>
            Gets the color of the sleeves
            </summary>
            <value>The color of the sleeves</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.Type">
            <summary>
            Gets the typ of the jersey
            </summary>
            <value>The type of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.HorizontalStripes">
            <summary>
            Gets a value indicating whether jersey has horizontal stripes
            </summary>
            <value><c>null</c> if [horizontal stripes] contains no value, <c>true</c> if [horizontal stripes]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.Split">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey"/> is split
            </summary>
            <value><c>null</c> if [split] contains no value, <c>true</c> if [split]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.Squares">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey"/> has squares
            </summary>
            <value><c>null</c> if [squares] contains no value, <c>true</c> if [squares]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.Stripes">
            <summary>
            Gets a value indicating whether this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey"/> has stripes
            </summary>
            <value><c>null</c> if [stripes] contains no value, <c>true</c> if [stripes]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.StripesColor">
            <summary>
            Gets the stripes color of the jersey
            </summary>
            <value>The stripes color of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.SplitColor">
            <summary>
            Gets the split color of the jersey
            </summary>
            <value>The split color of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.ShirtType">
            <summary>
            Gets the shirt type of the jersey
            </summary>
            <value>The shirt type of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.SleeveDetail">
            <summary>
            Gets the sleeve detail of the jersey
            </summary>
            <value>The sleeve detail of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.SquareColor">
            <summary>
            Gets the square color of the jersey
            </summary>
            <value>The square color of the jersey</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IJersey.HorizontalStripesColor">
            <summary>
            Gets the horizontal stripes color of the jersey
            </summary>
            <value>The horizontal stripes color of the jersey</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue">
            <summary>
            Specifies a contract implemented by classes representing values with localized / translatable descriptions
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue.Descriptions">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description for specific locale
            </summary>
            <param name="culture">The culture.</param>
            <returns>Return the Description if exists, or null.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent">
            <summary>
            Defines a contract for classes implementing long term sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent.GetSportAsync">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance representing the sport associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance representing the sport associated with the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent.GetTournamentCoverage">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage"/> instance representing the tournament coverage associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage"/> instance representing the tournament coverage associated with the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery">
            <summary>
            Defines a contract implemented by classes, which represent information about a lottery
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery.GetCategoryAsync">
            <summary>
            Asynchronously gets the associated category
            </summary>
            <returns>The associated category</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery.GetBonusInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery.GetDrawInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery.GetScheduledDrawsAsync">
            <summary>
            Asynchronously gets the list of ids of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ILottery.GetDrawsAsync">
            <summary>
            Asynchronously gets the list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDraw"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IManager">
            <summary>
            Defines a contract for classes implementing manager info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IManager.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the manager
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IManager.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the manager
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>Return a name of the manager</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IManager.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the manager
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned nationality</param>
            <returns>Return a nationality of the manager</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IManager.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch">
            <summary>
            Defines a contract implemented by classes representing sport events of match type
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus"/> containing information about the progress of the match
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the progress of the match</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetHomeCompetitorAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> representing home competitor of the match associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetAwayCompetitorAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> representing away competitor of the match associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetSeasonAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo"/> representing the season to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetTournamentRoundAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> representing the tournament round to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetTournamentAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILongTermEvent"/> representing the season to which the sport event associated with the current instance belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetFixtureAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance containing information about the arranged sport event
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetEventTimelineAsync">
            <summary>
            Asynchronously gets the associated event timeline
            </summary>
            <remarks>Makes calls to timeline API endpoint for all specified cultures in config</remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetEventTimelineAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the associated event timeline for single culture
            </summary>
            <param name="culture">The languages to which the returned instance should be translated</param>
            <remarks>Recommended to be used when only <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventTimeline"/> is needed for this <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch"/></remarks>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetDelayedInfoAsync">
            <summary>
            Asynchronously gets the associated delayed info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatch.GetCoverageInfoAsync">
            <summary>
            Asynchronously gets the associated coverage info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatistics">
            <summary>
                Defines a contract for classes implementing match specific statistics
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatistics" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatistics.TotalStatistics">
            <summary>
            Gets the list of complete team statistics data
            </summary>
            <value>The list of complete team statistics data</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatistics.PeriodStatistics">
            <summary>
            Gets the list of separate period statistics
            </summary>
            <value>The list of separate period statistics</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus">
            <summary>
            Defines a contract implemented by classes representing a match status
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.EventClock">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock"/> instance describing the timings in the current event
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock"/> instance describing the timings in the current event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.PeriodScores">
            <summary>
            Gets the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore"/>
            </summary>
            <value>The list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore"/></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
            <value>The score of the home competitor competing on the associated sport event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
            <value>The score of the away competitor competing on the associated sport event</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the match status
            </summary>
            <param name="culture">The culture used to get match status id and description</param>
            <returns>Returns the match status id and description in selected culture</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.HomePenaltyScore">
            <summary>
            Gets the penalty score of the home competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.AwayPenaltyScore">
            <summary>
            Gets the penalty score of the away competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.DecidedByFed">
            <summary>
            Gets the indicator wither the event is decided by fed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus.Statistics">
            <summary>
            Gets the match statistics
            </summary>
            <value>The match statistics</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue">
            <summary>
            Specifies a contract implemented by classes representing values with names / descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue.Id">
            <summary>
            Gets the value associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue.Description">
            <summary>
            Gets the description associated with the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" /> used to retrieve bookmaker details
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider._deserializer">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider._fetcher">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider._mapperFactory">
            <summary>
                A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto})">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider" /> class
            </summary>
            <param name="bookmakerDetailsUriFormat">An address format used to retrieve sport event summary</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct
                instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.BookmakerDetailsProvider.GetData(System.String)">
            <summary>
                Gets a <see cref="!:T" /> instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem">
            <summary>
            Defines a cache item object for lottery draw bonus info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem.BonusBalls">
            <summary>
            Gets the bonus balls info
            </summary>
            <value>The bonus balls info or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem.BonusDrumType">
            <summary>
            Gets the type of the bonus drum
            </summary>
            <value>The type of the bonus drum or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem.BonusRange">
            <summary>
            Gets the bonus range
            </summary>
            <value>The bonus range</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem">
            <summary>
            Base class for cached representation of the sport hierarchy entity (sport, category, tournament)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing id of the related entity
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.Name">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated name of the item
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/> class.
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the item</param>
            <param name="name">The name of the item</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> representing the cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/> class.
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the item</param>
            <param name="name">The name of the item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/> to data held by current instance
            </summary>
            <param name="item">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/> containing the data to be merged to current instance</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the culture of data in the passed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> into instance
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> used for merge</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CarCacheItem">
            <summary>
            Provides information about race driver profile
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CarCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCar"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem">
            <summary>
            Competitor cache item to be saved within cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing competitor names in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem._countryNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing competitor's country name in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem._abbreviations">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing competitor abbreviations in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.CultureCompetitorProfileFetched">
            <summary>
            The list of CultureInfo used to fetch competitor profiles
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the competitor in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the competitor in the specified language if it exists, null otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetCountry(System.Globalization.CultureInfo)">
            <summary>
            Gets the country name of the competitor in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned country name</param>
            <returns>The country name of the competitor in the specified language if it exists, null otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetAbbreviation(System.Globalization.CultureInfo)">
            <summary>
            Gets the abbreviation of the competitor in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned abbreviation</param>
            <returns>The abbreviation of the competitor in the specified language if it exists, null otherwise</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.IsVirtual">
            <summary>
            Gets a value indicating whether represented competitor is virtual
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.ReferenceId">
            <summary>
            Gets the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.AssociatedPlayerIds">
            <summary>
            Gets the list of associated player ids
            </summary>
            <value>The associated player ids</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetAssociatedPlayerIds">
            <summary>
            Get associated player ids if already cached (no competitor profile is fetched)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.AssociatedPlayersJerseyNumbers">
            <summary>
            Gets the list of associated player ids
            </summary>
            <value>The associated player ids</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetAssociatedPlayersJerseyNumber">
            <summary>
            Get associated player jersey numbers if already cached (no competitor profile is fetched)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Jerseys">
            <summary>
            Gets the jerseys of known competitors
            </summary>
            <value>The jerseys</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Manager">
            <summary>
            Gets the manager
            </summary>
            <value>The manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Venue">
            <summary>
            Gets the venue
            </summary>
            <value>The venue</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Gender">
            <summary>
            Gets the gender
            </summary>
            <value>The gender</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.AgeGroup">
            <summary>
            Gets the age group
            </summary>
            <value>The age group</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.State">
            <summary>
            Gets the state
            </summary>
            <value>The state</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.SportId">
            <summary>
            Gets associated sport id
            </summary>
            <value>Sport id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.CategoryId">
            <summary>
            Gets associated category id
            </summary>
            <value>Category id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Division">
            <summary>
            Gets the division
            </summary>
            <value>The division</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.RaceDriverProfile">
            <summary>
            Gets the race driver profile
            </summary>
            <value>The race driver profile</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.ShortName">
            <summary>
            Gets the short name
            </summary>
            <value>The short name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.RootSource">
            <summary>
            Gets the type of the root source
            </summary>
            <value>The root source</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="playerCompetitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem"/> class
            </summary>
            <param name="originalCompetitorCacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> containing information about the sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor"/> containing information about the sport entity</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> into the current instance
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> into the current instance
            </summary>
            <param name="competitorProfile">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> into the current instance
            </summary>
            <param name="simpleTeamProfile">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> into the current instance
            </summary>
            <param name="playerCompetitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> containing information about the competitor</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the passed <c>dto</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> into the current instance
            </summary>
            <param name="item">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> containing information about the competitor</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.IsEligibleForFetch(System.Globalization.CultureInfo)">
            <summary>
            Check if culture is eligible for fetching (is not yet fetched)
            </summary>
            <param name="culture">Check for specified language</param>
            <returns>Returns true if it should be fetched, otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetMissingProfileCultures(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Get the list of cultures which are requested filtered by those already received within last timeout
            </summary>
            <param name="wantedCultures">The list of cultures which we wanted</param>
            <returns>The list of cultures which are requested filtered by those already received within last timeout</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.CreateExportableBaseAsync``1">
            <summary>
            Create exportable CacheItem as an asynchronous operation
            </summary>
            <typeparam name="T"></typeparam>
            <returns>Task&lt;T&gt;.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Import(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCompetitor"/> containing information about the sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object</summary>
            <returns>true if the specified object  is equal to the current object; otherwise, false</returns>
            <param name="obj">The object to compare with the current object</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem.GetHashCode">
            <summary>Serves as the default hash function</summary>
            <returns>A hash code for the current object</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CourseCacheItem">
            <summary>
            A cache item representing a course (used in golf course)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CoverageInfoCacheItem">
            <summary>
            Defines a cache item for coverage info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CoverageInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CoverageInfoCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CoverageInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem">
            <summary>
            Cache item for current season info
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.SeasonCoverage">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> instance containing information about coverage available for the season associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> instance containing information about coverage available for the season associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.Groups">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.CurrentRound">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> specifying the current round of the tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> specifying the current round of the tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.CompetitorsIds">
            <summary>
            Gets the list of competitors ids
            </summary>
            <value>The list of competitors ids</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.Schedule">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> that belongs to the season schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> that belongs to the season schedule</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem"/> class
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCurrentSeasonInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem"/> class
            </summary>
            <param name="exportable">The exportable</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified dto
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem">
            <summary>
            Defines a cache item for fixture delayed info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.Id">
            <summary>
            Gets the identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.Descriptions">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing descriptions in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem"/> class
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto"/> used to create new instance</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDelayedInfo"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem"/> into instance
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto"/> used for merging</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the Name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem">
            <summary>
            Defines a cache item object for lottery draw info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.DrawType">
            <summary>
            Gets the type of the draw
            </summary>
            <value>The type of the draw</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.TimeType">
            <summary>
            Gets the type of the time
            </summary>
            <value>The type of the time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.GameType">
            <summary>
            Gets the type of the game
            </summary>
            <value>The type of the game</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawInfoDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawInfoDto"/> instance containing information about the draw info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawInfo"/> instance containing information about the draw info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem">
            <summary>
            Defines a cache item object for lottery draw result
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.Value">
            <summary>
            Gets the value of the draw
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing result name in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto"/> instance containing information about the draw result</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDrawResult"/> instance containing information about the draw result</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto"/> into instance
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto"/> used to merge into instance</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto"/> used to merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the player in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the player in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem">
            <summary>
            A cache item for event player assist
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerAssistDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem"/> class.
            </summary>
            <param name="dto">The dto containing data</param>
            <param name="culture">The culture of the data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayerAssist)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem"/> class.
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayerAssist"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerAssistCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem">
            <summary>
            A cache item for event player
            Implements the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.Bench">
            <summary>
            Gets the bench value
            </summary>
            <value>The bench value - in case of yellow or red card event, it is relevant to know if the player who is getting the card is sitting on the bench at that exact moment.</value>
            <remarks>The attribute is equal to 1 if the player who gets the card is sitting on the bench. In case the player who gets the card is on the field, then the attribute is not added at all.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.Method">
            <summary>
            Gets the method value
            </summary>
            <value>The method value</value>
            <remarks>The attribute can assume values such as 'penalty' and 'own goal'. In case the attribute is not inserted, then the goal is not own goal neither penalty.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem"/> class.
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto"/> data</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventPlayer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> representing the cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem"/> class.
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the item</param>
            <param name="name">The name of the item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem">
            <summary>
            Defines a cache item for event timeline (aka MatchTimeline)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem"/> class.
            </summary>
            <param name="dto">The events.</param>
            <param name="culture"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableEventTimeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem"/> class.
            </summary>
            <param name="exportable">The events.</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.Timeline">
            <summary>
            Gets the list of timeline events
            </summary>
            <returns>The list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TimelineEventCacheItem"/></returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.IsFinalized">
            <summary>
            Gets a value indicating whether this instance is finalized
            </summary>
            <value><c>true</c> if this instance is finalized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.FetchedCultureInfos">
            <summary>
            Gets the list already fetched cultures
            </summary>
            <value>The list already fetched cultures</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified dto
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventTimelineCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem">
            <summary>
            A implementation of cache item for Group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.Id">
            <summary>
            Gets the id of the group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.Name">
            <summary>
            Gets the name of the group
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.CompetitorsIds">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> representing group competitors
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.CompetitorsReferences">
            <summary>
            The competitors references
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem"/> class
            </summary>
            <param name="group">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto"/> containing group information</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided group information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableGroup"/> containing group information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the provided group information with the information held by the current instance
            </summary>
            <param name="group">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto"/> containing group information</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided group information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.HoleCacheItem">
            <summary>
            A cache item representing a hole (used in golf course)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.HoleCacheItem.Number">
            <summary>
            Gets the number of the hole
            </summary>
            <value>The number</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.HoleCacheItem.Par">
            <summary>
            Gets the par
            </summary>
            <value>The par</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.JerseyCacheItem">
            <summary>
            An implementation of Jersey cache item
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.JerseyCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableJersey"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem">
            <summary>
            An implementation of the Manager cache item
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.Nationality">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IDictionary`2"/> containing translated nationality of the item
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.CountryCode">
            <summary>
            Gets the country code of the manager
            </summary>
            <value>The country code of the manager</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ManagerDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem"/> class
            </summary>
            <param name="item">The dto with manager info</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager"/> with manager info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ManagerDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified item
            </summary>
            <param name="item">The item with the manager info</param>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableManager"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem">
            <summary>
            Provides information about pitcher (cache item)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.Name">
            <summary>
            Gets the name of the pitcher
            </summary>
            <value>The name of the pitcher</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.Hand">
            <summary>
            Gets the hand with which player pitches
            </summary>
            <value>The hand with which player pitches</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.Competitor">
            <summary>
            Gets the indicator if the competitor is Home or Away
            </summary>
            <value>The indicator if the competitor is Home or Away</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem"/> class
            </summary>
            <param name="pitcher">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto"/> containing information about the pitcher</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the pitcher</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePitcher"/> containing information about the pitcher</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the provided information about the current pitcher
            </summary>
            <param name="pitcher">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto"/> containing pitcher info</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the pitcher info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem">
            <summary>
            A data-transfer-object representing player's profile
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing player name in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem._nationalities">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing player nationality in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Type">
            <summary>
            Gets a value describing the type(e.g. forward, defense, ...) of the player represented by current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.DateOfBirth">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the date of birth of the player associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Height">
            <summary>
            Gets the height in centimeters of the player represented by the current instance or a null reference if height is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Weight">
            <summary>
            Gets the weight in kilograms of the player represented by the current instance or a null reference if weight is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Abbreviation">
            <summary>
            The abbreviation
            </summary>
            <remarks>Available via <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/></remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Gender">
            <summary>
            Gets the gender
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.CountryCode">
            <summary>
            Gets the country code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.FullName">
            <summary>
            Gets the full name of the player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Nickname">
            <summary>
            Gets the nickname of the player
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem._fetchedCultures">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages for which the current instance has translations
            </summary>
            <value>The fetched cultures</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.CompetitorId">
            <summary>
            The competitor id this player belongs to
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> class
            </summary>
            <param name="profile">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> used to create instance</param>
            <param name="competitorId">The competitor id this player belongs to</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> used to create new instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> class
            </summary>
            <param name="playerCompetitor">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> used to create instance</param>
            <param name="competitorId">The competitor id this player belongs to</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> used to create new instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportablePlayerProfile"/> used to create instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> into instance
            </summary>
            <param name="profile">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> used to merge into instance</param>
            <param name="competitorId">The competitor id this player belongs to</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> used to merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto,Sportradar.OddsFeed.SDK.Common.Urn,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> into instance
            </summary>
            <param name="playerCompetitor">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> used to merge into instance</param>
            <param name="competitorId">The competitor id this player belongs to</param>
            <param name="culture">The culture of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> used to merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the player in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the player in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the player in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned nationality</param>
            <returns>The nationality of the player in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RaceDriverProfileCacheItem">
            <summary>
            Provides information about race driver profile
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RaceDriverProfileCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRaceDriverProfile"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem">
            <summary>
            Provides information about referee (cache item)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem._nationality">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing referee nationality in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.Name">
            <summary>
            Gets the name of the referee
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem"/> class.
            </summary>
            <param name="referee">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto"/> containing information about the referee</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the referee info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableReferee"/> containing information about the referee</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the referee in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned nationality.</param>
            <returns>The nationality of the referee in the specified language.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the provided information about the current referee
            </summary>
            <param name="referee">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto"/> containing referee info.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the referee info.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem">
            <summary>
            A ReferenceId representation for cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem._betradarId">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.BetradarId"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem._betfairId">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.BetfairId"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem._rotationNumber">
            <summary>
            The rotation number
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem._aamsId">
            <summary>
            The AAMS id for this instance if provided among reference ids, null otherwise
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem._lugasId">
            <summary>
            The Lugas id for this instance if provided among reference ids, null otherwise
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.BetradarId">
            <summary>
            Gets the Betradar id for this instance if provided among reference ids
            </summary>
            <returns>If exists among reference ids, result is greater then 0</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.BetfairId">
            <summary>
            Gets the Betfair id for this instance if provided among reference ids
            </summary>
            <returns>If exists among reference ids, result is greater then 0</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.RotationNumber">
            <summary>
            Gets the rotation number if provided among reference ids
            </summary>
            <value>If exists among reference ids, result is greater then 0</value>
            <remarks>This id only exists for US leagues</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.ReferenceIds">
            <summary>
            Gets all the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.AamsId">
            <summary>
            Returns the AAMS id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The AAMS id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.LugasId">
            <summary>
            Returns the Lugas id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The Lugas id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/> class
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem.Merge(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Merges the specified reference ids
            </summary>
            <param name="referenceIds">The reference ids</param>
            <param name="checkDic">Check the dictionary for new values</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem">
            <summary>
            Defines a cache item for round
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem._names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing round names in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem._phaseOrGroupLongName">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing phase or group long name in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.Type">
            <summary>
            Type of the round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.Group">
            <summary>
            Gets the name of the group associated with the current round.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.GroupId">
            <summary>
            Gets the id of the group associated with the current round.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.OtherMatchId">
            <summary>
            Gets the id of the other match
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.Number">
            <summary>
            Gets a value specifying the round number or a null reference if round number is not defined
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.CupRoundMatches">
            <summary>
            Gets a value specifying the number of matches in the current cup round or a null reference
            if number of matches is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.CupRoundMatchNumber">
            <summary>
            Gets a value specifying the number of the match in the current cup round or a null reference
            if match number is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.BetradarId">
            <summary>
            Gets the betradar identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.Phase">
            <summary>
            Gets the phase
            </summary>
            <value>The phase</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.BetradarName">
            <summary>
            Gets the betradar name
            </summary>
            <value>The betradar name</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> class
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> used to create new instance</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableRound"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> into instance
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> used fro merging</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the Name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.GetPhaseOrGroupLongName(System.Globalization.CultureInfo)">
            <summary>
            Gets the phase or group long name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the phase or group long name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem">
            <summary>
            Defines a cache item for season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the ID of the represented sport entity
            </summary>
            <value>The identifier</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.Names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing season names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.StartDate">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the start date of the season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.EndDate">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the end date of the season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.Year">
            <summary>
            Gets the <see cref="T:System.String"/> representation the year of the season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.TournamentId">
            <summary>
            Gets the associated tournament identifier
            </summary>
            <value>The associated tournament identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem"/> class
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> used to create new instance</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the season info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the associated season in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language in which to get the name</param>
            <returns>The name of the associated season in the specified language.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> to the current instance
            </summary>
            <param name="season">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> containing season info</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the season info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> to the current instance
            </summary>
            <param name="season">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem"/> containing season info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> class
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeason"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem">
            <summary>
            Defines a cache item object for season coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.MaxCoverageLevel">
            <summary>
            Gets the string representation of the maximum coverage available for the season associated with the current instance
            </summary>
            <value>The maximum coverage level.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.MinCoverageLevel">
            <summary>
            Gets the name of the minimum coverage guaranteed for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.MaxCovered">
            <summary>
            Gets the max covered value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.Played">
            <summary>
            Gets the played value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.Scheduled">
            <summary>
            Gets the scheduled value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.SeasonId">
            <summary>
            Gets the identifier of the season
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> class.
            </summary>
            <param name="coverageDto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto"/> instance containing information about the coverage</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSeasonCoverage"/> instance containing information about the coverage</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem">
            <summary>
            A representation of the sport entity used by the cache
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.Id">
            <summary>
            Gets the id of the represented sport entity
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> containing information about the sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing information about the sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> containing the sport entity id</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object</summary>
            <returns>true if the specified object  is equal to the current object; otherwise, false</returns>
            <param name="obj">The object to compare with the current object</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEntityCacheItem.GetHashCode">
            <summary>Serves as the default hash function</summary>
            <returns>A hash code for the current object</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem">
            <summary>
            A implementation of cache item for SportEventConditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.Attendance">
            <summary>
            Gets a <see cref="T:System.String" /> specifying the attendance of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.EventMode">
            <summary>
            The mode of the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.Referee">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee" /> instance representing the referee presiding over the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.WeatherInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo" /> instance representing the expected weather on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.Pitchers">
            <summary>
            Gets the pitchers
            </summary>
            <value>The pitchers</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto"/> used to create new instance</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the sport event conditions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEventConditions"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto"/> into instance
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto"/> containing information about the sport event conditions</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the sport event conditions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem._id">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem.Id"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem._name">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem.Name"/> property backing field
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem.Id">
            <summary>
            Gets a value uniquely identifying the current streaming channel
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem.Name">
            <summary>
            Gets the name of the streaming channel represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StreamingChannelDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.StreamingChannelCacheItem"/> class.
            </summary>
            <param name="dto">a value uniquely identifying the current streaming channel</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem">
            <summary>
            Team competitor cache item representation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.Qualifier">
            <summary>
            Gets a qualifier additionally describing the competitor (e.g. home, away, ...)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes new TeamCompetitorCacheItem instance
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/> to be used to construct new instance</param>
            <param name="culture">A culture to be used to construct new instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch missing data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem)">
            <summary>
            Initializes new TeamCompetitorCacheItem instance
            </summary>
            <param name="competitor">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/> to be used to construct new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTeamCompetitor,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager)">
            <summary>
            Initializes new TeamCompetitorCacheItem instance
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTeamCompetitor"/> to be used to construct new instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to fetch missing data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/> into instance
            </summary>
            <param name="competitor">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/> used for merge</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> into instance
            </summary>
            <param name="item">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> used for merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TimelineEventCacheItem">
            <summary>
            A cache item for basic event (used in match timeline) (on REST and Dto is called basicEvent); this has different name to be similar to java version
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TimelineEventCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem">
            <summary>
            A cache item for TournamentCoverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem.LiveCoverage">
            <summary>
            Gets a value indicating whether [live coverage].
            </summary>
            <value><c>true</c> if [live coverage]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentCoverageDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem"/> class.
            </summary>
            <param name="tournamentCoverage">The tournament coverage.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentCoverage)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem"/> class.
            </summary>
            <param name="exportable">The tournament coverage.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem">
            <summary>
            Class TournamentInfoBasicCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.Category">
            <summary>
            Gets the category
            </summary>
            <value>The category</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.CurrentSeason">
            <summary>
            Gets the current season
            </summary>
            <value>The current season</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem"/> class
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfoBasic)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem"/> class
            </summary>
            <param name="exportable">The exportable</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified dto
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem">
            <summary>
            Provides information about venue of a sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem._names">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing venue name in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem._cityNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing city of the venue in different languages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem._countryNames">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing country of the venue in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.Capacity">
            <summary>
            Gets the capacity of the venue associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem" /> instance, or a null
            reference if the capacity is not specified
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.Coordinates">
            <summary>
            Gets a map coordinates specifying the exact location of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.CountryCode">
            <summary>
            Gets a country code of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.State">
            <summary>
            Gets a state of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.Courses">
            <summary>
            Gets the course
            </summary>
            <value>The course</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem"/> class
            </summary>
            <param name="venue">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto"/> containing information about a venue</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the <c>dto</c></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue"/> containing information about a venue</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto,System.Globalization.CultureInfo)">
            <summary>
            Merges information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto"/> into the current instance
            </summary>
            <param name="venue">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto"/> containing information about a venue</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the venue in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the venue in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.GetCity(System.Globalization.CultureInfo)">
            <summary>
            Gets the city name of the venue in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned city name</param>
            <returns>The city name of the venue in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.GetCountry(System.Globalization.CultureInfo)">
            <summary>
            Gets the country name of the venue in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned country name</param>
            <returns>The country name of the venue in the specified language if it exists. Null otherwise.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableVenue"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem">
            <summary>
            Provides information about weather
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem.TemperatureCelsius">
            <summary>
            Gets the temperature in degrees celsius or a null reference if the temperature is not known
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.WeatherInfoDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem"/> class.
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.WeatherInfoDto"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem"/> class.
            </summary>
            <param name="exportable">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableWeatherInfo"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem">
            <summary>
            Class CompetitionCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._bookingStatus">
            <summary>
            The booking status
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._venue">
            <summary>
            The venue
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._conditions">
            <summary>
            The conditions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.Competitors">
            <summary>
            The competitors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._referenceId">
            <summary>
            The reference identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._competitorsQualifiers">
            <summary>
            The competitors qualifiers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem._competitorsReferences">
            <summary>
            The competitors references
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ...)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem" /> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent" /> representing the sport event</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.FetchSportEventStatusAsync">
            <summary>
            Asynchronously fetch event summary associated with the current instance (saving done in <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/>)
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetBookingStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member providing booking status for the associated entity or a null reference if booking status is not known
            </summary>
            <returns>Asynchronously returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> if available</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetVenueAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get venue as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetConditionsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get conditions as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetCompetitorsIdsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get competitors as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetReferenceIdsAsync">
            <summary>
            get reference ids as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetCompetitorsReferencesAsync">
            <summary>
            Asynchronously get the list of available team <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetCompetitorsQualifiersAsync">
            <summary>
            Asynchronously get the list of available team qualifiers
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetLiveOddsAsync">
            <summary>
            Asynchronously gets a liveOdds
            </summary>
            <returns>A liveOdds</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetSportEventTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.GetStageTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType"/> for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.ActualMerge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.MergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixtureDto
            </summary>
            <param name="fixtureDto">The fixtureDto</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.Book">
            <summary>
            Change booking status to Booked
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem">
            <summary>
            Class DrawCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem._lotteryId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> id of the lottery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem._drawStatus">
            <summary>
            Gets the status of the draw
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem._resultsChronological">
            <summary>
            Gets a value indicating whether results are in chronological order
            </summary>
            <value><c>true</c> if [results chronological]; otherwise, <c>false</c></value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem._results">
            <summary>
            Gets the results of the draws
            </summary>
            <value>The results of the draws</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem._displayId">
            <summary>
            The display identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableDraw" /> specifying the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.GetLotteryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing id of the associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem"/>
            </summary>
            <returns>The id of the associated lottery</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.GetStatusAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.AreResultsChronologicalAsync">
            <summary>
            Asynchronously gets a boolean value indicating if the results are in chronological order
            </summary>
            <returns>The value indicating if the results are in chronological order</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.GetResultsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem"/>
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.GetDisplayIdAsync">
            <summary>
            Gets the display identifier
            </summary>
            <value>The display identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.ActualMerge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.MergeDrawResults(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto},System.Globalization.CultureInfo)">
            <summary>
            Merges the draw results
            </summary>
            <param name="results">The draw results</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.DrawCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a competition
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.FetchSportEventStatusAsync">
            <summary>
            Asynchronously fetch event summary associated with the current instance (saving done in <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/>)
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetBookingStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member providing booking status for the associated entity or a null reference if booking status is not known
            </summary>
            <returns>Asynchronously returns the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> if available</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetVenueAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem"/> instance representing a venue where the sport event associated with the
            current instance will take place
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetConditionsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem"/> instance representing live conditions of the sport event associated with the current instance
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetCompetitorsIdsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> providing information about competitors competing in a sport event
            associated with the current instance
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetReferenceIdsAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetCompetitorsQualifiersAsync">
            <summary>
            Asynchronously get the list of available team qualifiers
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetCompetitorsReferencesAsync">
            <summary>
            Asynchronously get the list of available team <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.MergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the fixture
            </summary>
            <param name="fixtureDto">The fixture dto</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetLiveOddsAsync">
            <summary>
            Asynchronously gets a liveOdds
            </summary>
            <returns>A liveOdds</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetSportEventTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem.GetStageTypeAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType"/> for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType"/> for the associated sport event.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a lottery draw
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem.GetLotteryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing id of the associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem"/>
            </summary>
            <returns>The id of the associated lottery</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem.GetStatusAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.DrawStatus"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem.AreResultsChronologicalAsync">
            <summary>
            Asynchronously gets a bool value indicating if the results are in chronological order
            </summary>
            <returns>The value indicating if the results are in chronological order</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem.GetResultsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem"/>
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem.GetDisplayIdAsync">
            <summary>
            Gets the display identifier
            </summary>
            <value>The display identifier</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a lottery
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem.GetCategoryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing  the associated category id
            </summary>
            <returns>The id of the associated category</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem.GetBonusInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem.GetDrawInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem.GetScheduledDrawsAsync">
            <summary>
            Asynchronously gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a match sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetSeasonAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem"/> instance providing basic information about
            the season to which the sport event associated with the current instance belongs to
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetTournamentRoundAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> instance describing the tournament round to which the
            sport event associated with current instance belongs to
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetTournamentIdAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the tournament to which the sport event belongs to
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetFixtureAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance containing information about the arranged sport event
            </summary>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetEventTimelineAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the associated event timeline
            </summary>
            <remarks>The timeline is cached only after the event status indicates that the event has finished</remarks>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetDelayedInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem"/> instance providing delayed info
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.GetCoverageInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CoverageInfoDto"/> instance providing coverage info
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem.MergeTimeline(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the timeline
            </summary>
            <param name="timelineDto">The timeline dto</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider">
            <summary>
            Defines a contract implemented by classes used to provide access to named values (e.g bet stop reasons, void reasons, ...)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider.VoidReasons">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> providing void reason descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider.BetStopReasons">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> providing bet stop reason descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider.BettingStatuses">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.INamedValueCache"/> providing betting status descriptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.INamedValuesProvider.MatchStatuses">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> providing localized (translatable) match status descriptions
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.FetchMissingSummary(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions,System.Boolean)">
            <summary>
            Fetches sport event detail info for those of the specified languages which are not yet fetched
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <param name="requestOptions">Request options</param>
            <param name="forceFetch">Should the cached data be ignored</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport event associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetNamesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the names of the sport event for specific cultures
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>Return a name of the race, or match</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetSportIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing sport id
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the sport this sport event belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetScheduledAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.DateTime"/> instance specifying when the sport event associated with the current
            instance was scheduled, or a null reference if the time is not known.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> instance specifying when the sport event associated with the current
            instance was scheduled, or a null reference if the time is not known.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetScheduledEndAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.DateTime" /> instance specifying for when the sport event associated with the current instance is
            scheduled to end or a null reference if the value is not known
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetStartTimeTbdAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the start time to be determined is set for the associated sport event.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the start time to be determined is set for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.GetReplacedByAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> into instance
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> used for merge</param>
            <param name="culture">The culture of the input <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/></param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem">
            <summary>
            Defines a contract for classes implementing sport event status cache item
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus"/> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.IsReported">
            <summary>
            Gets a value indicating whether a data journalist is present on the associated sport event, or a
            null reference if the information is not available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.MatchStatusId">
            <summary>
            Gets the match status for specific locale
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.WinnerId">
            <summary>
            Gets the winner identifier
            </summary>
            <value>The winner identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.ReportingStatus">
            <summary>
            Gets the reporting status
            </summary>
            <value>The reporting status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.PeriodScores">
            <summary>
            Gets the period scores
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.EventClock">
            <summary>
            Gets the event clock
            </summary>
            <value>The event clock</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.EventResults">
            <summary>
            Gets the event results
            </summary>
            <value>The event results</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.SportEventStatistics">
            <summary>
            Gets the sport event statistics
            </summary>
            <value>The sport event statistics</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.HomeAwayCompetitors">
            <summary>
            Gets the indicator for competitors if there are home or away
            </summary>
            <value>The indicator for competitors if there are home or away</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object"/> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.HomePenaltyScore">
            <summary>
            Gets the penalty score of the home competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.AwayPenaltyScore">
            <summary>
            Gets the penalty score of the away competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.DecidedByFed">
            <summary>
            Gets the indicator wither the event is decided by fed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem.PeriodOfLadder">
            <summary>
            Gets the period of ladder.
            </summary>
            <value>The period of ladder.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a stage
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem.GetCategoryIdAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the category to which the sport event belongs to
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem.GetParentStageAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets an id of the parent stage of the current instance or a null reference if the represented stage does not have the parent stage
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem.GetAdditionalParentStagesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of additional ids of the parent stages of the current instance or a null reference if the represented stage does not have the parent stages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem.GetStagesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing child stages ids of the current instance or a null reference if the represented stage does not have children
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <returns></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem">
            <summary>
            Defines a contract implemented by classes, which represent cached information about a long term event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCategoryIdAsync">
            <summary>
            Asynchronously gets category identifier as an asynchronous operation.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetTournamentCoverageAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem"/> providing information about coverage of the tournament
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCompetitorsIdsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> ids providing information about competitors competing in a sport event
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCompetitorsIdsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> ids providing information about competitors competing in a sport event
            </summary>
            <param name="culture">A languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCurrentSeasonInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CurrentSeasonInfoCacheItem"/> providing information about current season
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetGroupsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem"/> providing information about groups
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetScheduleAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> providing information about competitions
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCurrentRoundAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> providing information about current round
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetYearAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.String"/> providing information about year
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetTournamentInfoAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem"/> providing information about current round
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetReferenceIdsAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetSeasonCoverageAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> providing information about coverage of the season
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetSeasonsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the associated seasons
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetCompetitorsReferencesAsync">
            <summary>
            Asynchronously get the list of available team <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem">
            <summary>
            Class LotteryCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ILotteryCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem._categoryId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> id of the category
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem._bonusInfo">
            <summary>
            Gets the bonus info
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem._drawInfo">
            <summary>
            Gets the draw info
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem._scheduledDraws">
            <summary>
            Gets the scheduled draws
            </summary>
            <value>The scheduled draws</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableLottery" /> specifying the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.GetCategoryIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing  the associated category id
            </summary>
            <returns>The id of the associated category</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.GetBonusInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.GetDrawInfoAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem"/> associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.GetScheduledDrawsAsync">
            <summary>
            Asynchronously gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of associated <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IDrawCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.LotteryCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem">
            <summary>
            Class MatchCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IMatchCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._season">
            <summary>
            The season
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._tournamentRound">
            <summary>
            The tournament round
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._tournamentId">
            <summary>
            The tournament identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._fixture">
            <summary>
            The fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._eventTimeline">
            <summary>
            The event timeline
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._delayedInfo">
            <summary>
            The delayed info
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem._coverageInfo">
            <summary>
            The coverage info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem"/> class
            </summary>
            <param name="fixture">The fixture data</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableMatch" /> specifying the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetSeasonAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get season as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetTournamentRoundAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get tournament round as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetTournamentIdAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get tournament identifier as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetFixtureAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get fixture as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
            <remarks>A Fixture is a sport event that has been arranged for a particular time and place</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetEventTimelineAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Gets the associated event timeline
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>The timeline is cached only after the event status indicates that the event has finished</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetDelayedInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem" /> instance providing delayed info
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.GetCoverageInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CoverageInfoDto" /> instance providing coverage info
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.ActualMerge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.MergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="fixtureDto">The fixture</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.ActualMergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="fixture">The fixture</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.MergeTimeline(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="timelineDto">The match timeline</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.ActualMergeTimeline(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="timelineDto">The match timeline</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.MatchCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem">
            <summary>
            Base class of the cache item for sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.ExecutionLog">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.DataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain sport event summary and fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.SemaphorePool">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain <see cref="T:System.Threading.SemaphoreSlim" /> instances used to sync async calls
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.MergeLock">
            <summary>
            A <see cref="T:System.Object" /> instance used for thread synchronization
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.DefaultCulture">
            <summary>
            A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.Names">
            <summary>
            The names
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem._sportId">
            <summary>
            The sport identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.Scheduled">
            <summary>
            The scheduled
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.ScheduledEnd">
            <summary>
            The scheduled end
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem._startTimeTbd">
            <summary>
            The start time to be determined
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem._replacedBy">
            <summary>
            The replaced by
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.LoadedFixtures">
            <summary>
            The loaded fixtures
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.LoadedSummaries">
            <summary>
            The loaded summaries
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.FixtureTimestampCacheStore">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> class
            </summary>
            <param name="eventSummary">The sport event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo" /> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" /> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSportEvent" /> representing the sport event</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance
            </summary>
            <value>The identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetNamesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get names as an asynchronous operation
            </summary>
            <param name="cultures">The cultures</param>
            <returns>Return a name of the race, or match</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetSportIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing sport id
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the sport this sport event belongs to</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetScheduledAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.DateTime"/> instance specifying when the sport event associated with the current
            instance was scheduled, or a null reference if the time is not known.
            </summary>
            <returns>A <see cref="T:System.DateTime"/> instance specifying when the sport event associated with the current
            instance was scheduled, or a null reference if the time is not known</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetScheduledEndAsync">
            <summary>
            get scheduled end as an asynchronous operation.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetStartTimeTbdAsync">
            <summary>
            Asynchronously gets a value specifying if the start time to be determined is set for the associated sport event
            </summary>
            <returns>A value specifying if the start time to be determined is set for the associated sport event</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.GetReplacedByAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.HasTranslationsFor(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Determines whether the current instance has translations for the specified languages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <returns>True if the current instance contains data in the required locals. Otherwise false</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.FetchMissingSummary(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions,System.Boolean)">
            <summary>
            Fetches sport event detail info for those of the specified languages which are not yet fetched
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <param name="requestOptions">Request options for fetching summaries</param>
            <param name="forceFetch">Should the cached data be ignored</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.FetchMissingSummary(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Fetches sport event detail info for those of the specified languages which are not yet fetched
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <param name="forceFetch">Should the cached data be ignored</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.FetchMissingFixtures(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Fetches fixture info for those of the specified languages which are not yet fetched
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the required languages</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merge current instance with the data obtained via provider
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> used to merge properties with current instance</param>
            <param name="culture">A language code of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> data</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.CreateExportableBaseAsync``1">
            <summary>
            Create exportable cache items
            </summary>
            <typeparam name="T"></typeparam>
            <returns>Exportable cache items</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem">
            <summary>
            Class SportEventStatusCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ISportEventStatusCacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus"/> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.IsReported">
            <summary>
            Gets a value indicating whether a data journalist is present on the associated sport event, or a
            null reference if the information is not available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.MatchStatusId">
            <summary>
            Gets the match status for specific locale
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.WinnerId">
            <summary>
            Gets the winner identifier
            </summary>
            <value>The winner identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.ReportingStatus">
            <summary>
            Gets the reporting status
            </summary>
            <value>The reporting status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.PeriodScores">
            <summary>
            Gets the period scores
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.EventClock">
            <summary>
            Gets the event clock
            </summary>
            <value>The event clock</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.EventResults">
            <summary>
            Gets the event results
            </summary>
            <value>The event results</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.SportEventStatistics">
            <summary>
            Gets the sport event statistics
            </summary>
            <value>The sport event statistics</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.HomeAwayCompetitors">
            <summary>
            Gets the indicator for competitors if there are home or away
            </summary>
            <value>The indicator for competitors if there are home or away</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.HomePenaltyScore">
            <summary>
            Gets the penalty score of the home competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.AwayPenaltyScore">
            <summary>
            Gets the penalty score of the away competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.DecidedByFed">
            <summary>
            Gets the indicator wither the event is decided by fed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.PeriodOfLadder">
            <summary>
            Gets the period of ladder.
            </summary>
            <value>The period of ladder.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object"/> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.FeedStatusDto">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the feed
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the feed</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.SapiStatusDto">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the Sports API
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the Sports API</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> class
            </summary>
            <param name="feedStatusDto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the feed</param>
            <param name="sapiStatusDto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the Sports API</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.SetFeedStatus(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto)">
            <summary>
            Save the status received from the feed
            </summary>
            <param name="feedDto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the feed</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem.SetSapiStatus(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto)">
            <summary>
            Save the status received from the Sports API
            </summary>
            <param name="sapiDto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> received from the Sports API</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem">
             <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem"/> interface
             </summary>
             <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem" />
             <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.IStageCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem._categoryId">
            <summary>
            The category identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem._parentStageId">
            <summary>
            The parent stage
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem._childStages">
            <summary>
            The child stages
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem._additionalParentIds">
            <summary>
            The additional parent ids
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem"/> class
            </summary>
            <param name="id">The identifier</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem"/> class
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem"/> class
            </summary>
            <param name="fixture">The event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem"/> class
            </summary>
            <param name="tournamentSummary">The tournament summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="currentCulture">The current culture</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStage,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem"/> class
            </summary>
            <param name="exportable">The exportable cache item</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixtureDto</param>
            <param name="semaphorePool">The semaphore pool</param>
            <param name="defaultCulture">The default culture</param>
            <param name="fixtureTimestampCacheStore">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixtureDto timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.GetCategoryIdAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get category identifier as an asynchronous operation.
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.GetParentStageAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            get parent stage as an asynchronous operation.
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.GetAdditionalParentStagesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a list of additional ids of the parent stages of the current instance or a null reference if the represented stage does not have the parent stages
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.GetStagesAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get stages as an asynchronous operation.
            </summary>
            <param name="cultures">The cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.ActualMerge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.ActualMergeTournament(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified event summary
            </summary>
            <param name="eventSummary">The event summary</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.MergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixtureDto
            </summary>
            <param name="fixtureDto">The fixtureDto</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.StageCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem">
            <summary>
            Class TournamentInfoCacheItem
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ITournamentInfoCacheItem" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._categoryId">
            <summary>
            The category identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._tournamentCoverage">
            <summary>
            The tournament coverage
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._competitors">
            <summary>
            The competitors ids
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._currentSeasonInfo">
            <summary>
            The current season information
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._groups">
            <summary>
            The groups
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._scheduleUrns">
            <summary>
            The schedule urns
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._round">
            <summary>
            The round
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._year">
            <summary>
            The year
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._tournamentInfoBasic">
            <summary>
            The tournament information basic
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._referenceId">
            <summary>
            The reference identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._seasonCoverage">
            <summary>
            The season coverage
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._seasons">
            <summary>
            The seasons
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._loadedSeasons">
            <summary>
            The loaded seasons for tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._loadedSchedules">
            <summary>
            The loaded schedules for tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._competitorsReferences">
            <summary>
            The competitors references
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem._exhibitionGames">
            <summary>
            The indicator specifying if the tournament is exhibition game
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the id of the sport event associated with the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> class
            </summary>
            <param name="eventSummary">The sport event summary</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo" /> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> class
            </summary>
            <param name="fixture">The fixture data</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="currentCulture">A <see cref="T:System.Globalization.CultureInfo" /> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTournamentInfo" /> specifying the current instance</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain summary and fixture</param>
            <param name="semaphorePool">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.ISemaphorePool" /> instance used to obtain sync objects</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language used when fetching info which is not translatable (e.g. Scheduled, ..)</param>
            <param name="fixtureTimestampCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ICacheStore`1"/> used to cache the sport events fixture timestamps</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCategoryIdAsync">
            <summary>
            Get category identifier as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetTournamentCoverageAsync">
            <summary>
            Get tournament coverage as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCompetitorsIdsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get competitors ids as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCompetitorsIdsAsync(System.Globalization.CultureInfo)">
            <summary>
            Get competitors ids as an asynchronous operation
            </summary>
            <param name="culture">A languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCurrentSeasonInfoAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get current season information as an asynchronous operation
            </summary>
            <param name="cultures">The cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetGroupsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get groups as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetScheduleAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get schedule as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCurrentRoundAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get current round as an asynchronous operation
            </summary>
            <param name="cultures">The cultures</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetYearAsync">
            <summary>
            Get year as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetTournamentInfoAsync">
            <summary>
            Get tournament information as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetReferenceIdsAsync">
            <summary>
            Get reference ids as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetSeasonCoverageAsync">
            <summary>
            Get season coverage as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetSeasonsAsync(System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Get seasons as an asynchronous operation
            </summary>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying the languages to which the returned instance should be translated</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetCompetitorsReferencesAsync">
            <summary>
            Asynchronously get the list of available team <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified dto
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
            <param name="useLock">if set to <c>true</c> [use lock].</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.ActualMerge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified dto
            </summary>
            <param name="dto">The dto</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.MergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="fixture">The fixture</param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.ActualMergeFixture(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto,System.Globalization.CultureInfo)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="fixture">The fixture</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Merges the specified fixture
            </summary>
            <param name="tournamentSeasonsDto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto"/></param>
            <param name="culture">The culture</param>
            <param name="useLock">Should the lock mechanism be used during merge</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.MergeCompetitors(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto},System.Globalization.CultureInfo)">
            <summary>
            Merges the groups
            </summary>
            <param name="competitors">The groups</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.MergeGroups(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto},System.Globalization.CultureInfo)">
            <summary>
            Merges the groups
            </summary>
            <param name="groups">The groups</param>
            <param name="culture">The culture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.TournamentInfoCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableBase">
            <summary>
            Interface used by cache items to export their properties
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableBase.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableSdkCache">
            <summary>
            Defines a contract for classes implementing cache export/import functionally
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableSdkCache.ExportAsync">
            <summary>
            Exports current items in the cache
            </summary>
            <returns>Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> containing all the items currently in the cache</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableSdkCache.ImportAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase})">
            <summary>
            Imports provided items into the cache
            </summary>
            <param name="items">Collection of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> to be inserted into the cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Exportable.IExportableSdkCache.CacheStatus">
            <summary>
            Returns current cache status
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing all cache item types in the cache and their counts</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem">
            <summary>
            Represents a cached tournament entity
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.SportId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the parent sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.TournamentIds">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the ids of child tournaments
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> containing the category data</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided data</param>
            <param name="sportId">The id of the parent sport</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategorySummaryDto,System.Globalization.CultureInfo,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> containing the category data</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided data</param>
            <param name="sportId">The id of the parent sport</param>
            <param name="tournamentIds">The list of tournament ids</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCategory" /> representing the cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData">
            <summary>
            Contains basic information about a sport tournament
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData.Tournaments">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the ids of tournaments, which belong to category represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String},System.String,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData"/> class.
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the associated category</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated entity name</param>
            <param name="countryCode">the country code</param>
            <param name="tournaments">the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the tournaments, which belong to the category</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem">
            <summary>
            Represents a cached sport entity
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem.CategoryIds">
            <summary>
            Gets <see cref="T:System.Collections.Generic.ICollection`1"/> specifying the id's of child categories
            </summary>
            
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem._loadedCategories">
            <summary>
            The loaded categories for tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem._loadedCategoriesSemaphore">
            <summary>
            Lock object used for loading categories
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem._dataRouterManager">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain categories
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto" /> instance containing sport data</param>
            <param name="dataRouterManager">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataRouterManager"/> used to obtain categories</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSport)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableSport" /> representing the cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem.Merge(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem,System.Globalization.CultureInfo)">
            <summary>
            Merges the information from the provided <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" /> to data held by current instance
            </summary>
            <param name="item">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" /> containing the data to be merged to current instance</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the culture of data in the passed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CacheItem" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportCacheItem.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData">
            <summary>
            Contains basic information about a sport (soccer, basketball, ...)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData.Categories">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the categories, which belong to the sport
            represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.CategoryData})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportData"/> class.
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the associated sport</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated sport name</param>
            <param name="categories">the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the categories, which belong to the sport</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData">
            <summary>
            Contains sport related entity (sport, category, tournament) data
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData.Id">
            <summary>
            Gets <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the associated entity.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated entity name
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData"/> class.
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the associated entity</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated entity name</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.TournamentData">
            <summary>
            Contains basic information about a sport tournament
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.SportEntityData" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.TournamentData.Scheduled">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the scheduled start time of the associated tournament or a null reference if start time is not known
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.TournamentData.ScheduledEnd">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the scheduled end time of the associated tournament or a null reference if end time is not known
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.TournamentData.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Sports.TournamentData"/> class.
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the associated tournament</param>
            <param name="scheduled">a <see cref="T:System.DateTime"/> specifying the scheduled start time of the associated tournament or a null reference if start time is not known</param>
            <param name="scheduledEnd">a <see cref="T:System.DateTime"/> specifying the scheduled end time of the associated tournament or a null reference if end time is not known</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated sport name</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityFilteredProvider">
            <summary>
            An implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityFilteredProvider"/> which fetches the data, deserializes it and than maps / converts it to the output type
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityFilteredProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityFilteredProvider" /> class.
            </summary>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="poster">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityFilteredProvider.GetDataAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto"/> instance
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the probability calculation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityProvider">
            <summary>
            An implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityProvider"/> which fetches the data, deserializes it and than maps / converts it to the output type
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityProvider" /> class.
            </summary>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="poster">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataPoster" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CalculateProbabilityProvider.GetDataAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto"/> instance
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the probability calculation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> which wraps multiple market validators
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator._validators">
            <summary>
            The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing actual validators
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator.#ctor(System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator"/> class.
            </summary>
            <param name="validators">The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> containing actual validators.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator.Validate(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Validate the provided specifiers against current instance.
            </summary>
            <param name="specifiers">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <returns>True if the mapping associated with the current instance can be used to map associated market; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Validation cannot be performed against the provided specifiers</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.CompositeMappingValidator.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2">
            <summary>
            An implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" /> which fetches the data, deserializes it and then maps / converts it to the output type
            </summary>
            <typeparam name="TIn">Specifies the type of data-transfer-object instance which will be mapped to returned instance</typeparam>
            <typeparam name="TOut">Specifies the type of instances provided</typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger" /> used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2._deserializer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2._mapperFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2._uriFormat">
            <summary>
            The url format specifying the url of the resources fetched by the fetcher
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{`0},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" /> class.
            </summary>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="dataFetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />A type mapper</param>
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.RawApiDataReceived">
            <summary>
            Event raised when the data provider receives the message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.DataFetcher">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.GetDataAsync(System.String)">
            <summary>
            Get data as an asynchronous operation.
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the
            SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.GetDataAsync(System.String[])">
            <summary>
            Asynchronously gets a <typeparamref name="TOut" /> instance specified by the provided identifiersA two letter
            language code of the <see cref="T:System.Globalization.CultureInfo" />
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the
            SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.GetDataAsyncInternal(System.Uri,System.String,System.String)">
            <summary>
            Fetches and deserializes the data from the provided <see cref="T:System.Uri" />.
            </summary>
            <param name="uri">A <see cref="T:System.Uri" /> specifying the data location</param>
            <param name="requestParams">The parameters associated with the request (if present)</param>
            <param name="culture">The language associated with the request</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the ongoing operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.GetDataInternal(System.Uri,System.String,System.String)">
            <summary>
            Fetches and deserializes the data from the provided <see cref="T:System.Uri" />.
            </summary>
            <param name="uri">A <see cref="T:System.Uri" /> specifying the data location</param>
            <param name="requestParams">The parameters associated with the request (if present)</param>
            <param name="culture">The language associated with the request</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the ongoing operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2.GetRequestUri(System.String[])">
            <summary>
            Constructs and returns an <see cref="T:System.Uri" /> instance used to retrieve resource with specified <c>id</c>
            </summary>
            <param name="identifiers">Identifiers uniquely identifying the data to fetch</param>
            <returns>an <see cref="T:System.Uri" /> instance used to retrieve resource with specified <c>identifiers</c></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProviderNamed`2">
            <summary>
            An implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> which fetches the data, deserializes it and than maps / converts it
            to the output type
            </summary>
            <typeparam name="TIn">Specifies the type of data-transfer-object instance which will be mapped to returned instance</typeparam>
            <typeparam name="TOut">Specifies the type of instances provided</typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProviderNamed`2.#ctor(System.String,System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{`0},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" /> class.
            </summary>
            <param name="name">A unique name for this data provider</param>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DateScheduleProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve sport events scheduled for a specified date
            or currently live sport events
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DateScheduleProvider._liveScheduleUriFormat">
            <summary>
            An address format used to retrieve live sport events
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DateScheduleProvider.#ctor(System.String,System.String,System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DateScheduleProvider"/> class.
            </summary>
            <param name="name">Name for the date schedule provider</param>
            <param name="liveScheduleUriFormat">An address format used to retrieve live sport events</param>
            <param name="dateScheduleUriFormat">An address format used to retrieve sport events for a specified date</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DateScheduleProvider.GetRequestUri(System.String[])">
            <summary>
            Constructs and returns an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>id</c>
            </summary>
            <param name="identifiers">Identifiers uniquely identifying the data to fetch</param>
            <returns>an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>identifiers</c></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> which validates the decimal part of the provided value against a predefined value
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator._specifierName">
            <summary>
            The name of the specifier in the valid for attribute
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator._allowedDecimalValue">
            <summary>
            A value specifying the allowed value of the decimal part
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator.#ctor(System.String,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator"/> class.
            </summary>
            <param name="specifierName">The name of the specifier in the valid for attribute.</param>
            <param name="allowedDecimalValue">A value specifying the allowed value of the decimal part.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator.Validate(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Validate the provided specifiers against current instance.
            </summary>
            <param name="specifiers">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <returns>True if the mapping associated with the current instance can be used to map associated market; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Validation cannot be performed against the provided specifiers</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DecimalValueMappingValidator.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> implementation which uses <see cref="P:System.Xml.XmlElement.LocalName" /> property to determine to
            which type the data should be deserialized
            </summary>
            <typeparam name="T">Specifies the type that can be deserialized</typeparam>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.BaseTypes">
            <summary>
            A list of <see cref="T:System.Type"/> specifying base types which are supported by the deserializer. All subclasses
            of the specified types can be deserialized by the deserializer
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.Serializers">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing serializers for all supported types
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.#cctor">
            <summary>
            Initializes the <c>Serializers</c> static field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize the provided<see cref="T:System.Byte"/> array to a <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> derived instance
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> instance containing data to be deserialized </param>
            <returns>The <c>data</c> deserialized to <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.Deserialize``1(System.IO.Stream)">
            <summary>
            Deserialize the provided <see cref="T:System.Byte" /> array to a <typeparamref name="T1" /> instance
            </summary>
            <typeparam name="T1">A <typeparamref name="T" /> derived type specifying the target of deserialization</typeparam>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance containing data to be deserialized</param>
            <returns>The <c>data</c> deserialized to <typeparamref name="T1" /> instance</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Deserializer`1.NamespaceIgnorantXmlTextReader">
            <summary>
            A <see cref="T:System.Xml.XmlReader"/> derived class, which is capable of deserializing Odds Feed REST messages. Those messages have schema issues
            which this class handles. Once the schema issues are fixed this class will be removed
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicEventDto">
            <summary>
            A data-transfer-object for <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent"/> used in <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.TournamentCoverage">
            <summary>
            Gets the tournament coverage
            </summary>
            <value>The tournament coverage</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.Category">
            <summary>
            Gets the category
            </summary>
            <value>The category</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.Competitors">
            <summary>
            Gets the competitors
            </summary>
            <value>The competitors</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto"/> class.
            </summary>
            <param name="sportEvent">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> used for creating instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto"/> class.
            </summary>
            <param name="tournamentInfo">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournament"/> used for creating instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BasicTournamentDto"/> class.
            </summary>
            <param name="tournament">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto">
            <summary>
            A data-access-object representing a bookmaker details
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.Id">
            <summary>
            Gets the bookmaker id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.VirtualHost">
            <summary>
            Gets the specific virtual host of the bookmaker
            </summary>
            <value>The virtual host</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.Expires">
            <summary>
            Gets the expire date of the token
            </summary>
            <value>The expires</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.Message">
            <summary>
            Gets the message of the request
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.ResponseCode">
            <summary>
            Gets the <see cref="T:System.Net.HttpStatusCode"/> specifying the server's response code;
            </summary>
            <value>The response code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.ServerTimeDifference">
            <summary>
            Gets the server time difference
            </summary>
            <value>The server time difference</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto"/> class
            </summary>
            <param name="msg">The MSG</param>
            <param name="serverTimeDifference">The server time difference</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CarDto">
            <summary>
            A data-transfer-object for manager
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto">
            <summary>
            A data-transfer-object representing a sport category
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto.EqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used to compare different <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto.Tournaments">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing tournaments which belong to the associated category
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto.#ctor(System.String,System.String,System.String,System.Collections.Generic.ICollection{Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> class
            </summary>
            <param name="id">The id of the category</param>
            <param name="name">The name of the category</param>
            <param name="countryCode">A country code</param>
            <param name="tournaments">A <see cref="T:System.Collections.Generic.ICollection`1"/> containing tournaments belonging to category</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto.TournamentByTournamentIdEqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation used for equality comparison of <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instances
            </summary>
            <seealso cref="T:System.Collections.Generic.IEqualityComparer`1" />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategorySummaryDto">
            <summary>
            A data-transfer-object representing a sport category
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategorySummaryDto.CountryCode">
            <summary>
            The country code
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategorySummaryDto.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> class
            </summary>
            <param name="id">The id of the category</param>
            <param name="name">The name of the category</param>
            <param name="countryCode">A country code</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategorySummaryDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.category)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> class
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto">
            <summary>
            A data-transfer-object containing basic information about a competition
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.SportEventStatus">
            <summary>
            Gets the sport event status
            </summary>
            <value>The sport event status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.BookingStatus">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.BookingStatus"/> enum member specifying the booking status of the associated sport event
            </summary>
            <remarks>For more information see <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.BookingStatus"/> enumeration</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.Venue">
            <summary>
            Gets the venue info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.Conditions">
            <summary>
            Gets the sport event conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.Competitors">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the competitors of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.HomeAwayCompetitors">
            <summary>
            Gets the home away competitors
            </summary>
            <value>The home away competitors</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.Type">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> specifying the type of the associated sport event or a null reference if property is not applicable
            for the associated sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.StageType">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.StageType"/> specifying the stage type of the associated sport event or a null reference if property is not applicable
            for the associated sport event
            </summary>
            <seealso cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.StageType"/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.LiveOdds">
            <summary>
            Gets the live odds property
            </summary>
            <value>The live odds property</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> class
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> instance containing basic information about the sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> class
            </summary>
            <param name="matchSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> instance containing basic information about the sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> class
            </summary>
            <param name="stageSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint"/> instance containing basic information about the sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> class
            </summary>
            <param name="stageSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event"/> instance containing basic information about the sport event</param>
            <remarks>LiveOdds = null</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.parentStage)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> class
            </summary>
            <param name="parentStage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage"/> instance containing basic information about the sport event</param>
            <remarks>LiveOdds = null</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto">
            <summary>
            A data-transfer-object representing a sport competitor
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.Abbreviation">
            <summary>
            Gets the competitor's abbreviation
            </summary>
            <value>The abbreviation</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.CountryName">
            <summary>
            Gets the name of the competitor's country
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.IsVirtual">
            <summary>
            Gets a value indicating whether current competitor is virtual
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.ReferenceIds">
            <summary>
            The reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.State">
            <summary>
            Gets the state
            </summary>
            <value>The state</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.Players">
            <summary>
            Gets the players
            </summary>
            <value>The players</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.Gender">
            <summary>
            Gets the gender
            </summary>
            <value>The gender</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.AgeGroup">
            <summary>
            Gets the age group
            </summary>
            <value>The age group</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.SportId">
            <summary>
            Gets the sport id
            </summary>
            <value>The sport id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.CategoryId">
            <summary>
            Gets the category id
            </summary>
            <value>The category id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.ShortName">
            <summary>
            Gets the short name
            </summary>
            <value>The short name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.Division">
            <summary>
            Get the division
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.team)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> class from the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.team"/> instance
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.team"/> containing information about a team</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto">
            <summary>
            A data-transfer-object representing competitor's (team's) profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.Competitor">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> representing the competitor represented by the current profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.Players">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing players which are part of the represented competitor
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.Jerseys">
            <summary>
            Gets the jerseys of the players
            </summary>
            <value>The jerseys</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.Manager">
            <summary>
            Gets the manager
            </summary>
            <value>The manager</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.Venue">
            <summary>
            Gets the venue
            </summary>
            <value>The venue</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.RaceDriverProfile">
            <summary>
            Gets the race driver profile
            </summary>
            <value>The race driver profile</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> containing information about the profile</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorResultDto">
            <summary>
            A data-transfer-object for competitor result
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CourseDto">
            <summary>
            A data-access-object representing a course (used in golf course)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CourseDto.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the represented course
            </summary>
            <value>The identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CourseDto.Name">
            <summary>
            Gets the name of the represented course
            </summary>
            <value>The name</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto">
            <summary>
            Class CurrentSeasonInfoDto
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.SeasonCoverage">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto"/> instance containing information about coverage available for the season associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto"/> instance containing information about coverage available for the season associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.Groups">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.CurrentRound">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> specifying the current round of the tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> specifying the current round of the tournament associated with the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.Competitors">
            <summary>
            Gets the list of competitors
            </summary>
            <value>The list of competitors</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.Schedule">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> that belongs to the season schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> that belongs to the season schedule</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto"/> class
            </summary>
            <param name="season">The season</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CurrentSeasonInfoDto"/> class
            </summary>
            <param name="season">The season</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto">
            <summary>
            Defines a data-transfer-object for available selections for the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto.EventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto.Markets">
            <summary>
            Gets the list of markets for this event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.String"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto">
            <summary>
            Defines a data-transfer-object for probability calculations
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto.Odds">
            <summary>
            Gets the odds
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto.Probability">
            <summary>
            Gets the probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto.GeneratedAt">
            <summary>
            Gets the value specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto.Harmonization">
            <summary>
            Get the value specifying if the calculation used harmonized method
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto.AvailableSelections">
            <summary>
            Gets the available selections
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredAvailableSelectionsDto">
            <summary>
            Defines a data-transfer-object for available selections for the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredAvailableSelectionsDto.EventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredAvailableSelectionsDto.Markets">
            <summary>
            Gets the list of markets for this event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredAvailableSelectionsDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.String"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto">
            <summary>
            Defines a data-transfer-object for probability calculations
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto.Odds">
            <summary>
            Gets the odds
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto.Probability">
            <summary>
            Gets the probability
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.String"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto.Harmonization">
            <summary>
            Get the value specifying if the calculation used harmonized method
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto.AvailableSelections">
            <summary>
            Gets the available selections
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto">
            <summary>
            Defines a data-transfer-object for available selections for the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto.Id">
            <summary>
            Gets the id of the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto.Specifiers">
            <summary>
            Gets the specifiers for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto.Outcomes">
            <summary>
            Gets the outcomes for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto.IsConflict">
            <summary>
            Value indicating if this market is in conflict
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredOutcomeDto">
            <summary>
            Defines a data-transfer-object for available selections for the filtered outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredOutcomeDto.Id">
            <summary>
            Gets the id of the outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredOutcomeDto.IsConflict">
            <summary>
            Value indicating if this outcome is in conflict
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto">
            <summary>
            Defines a data-transfer-object for available selections for the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto.Id">
            <summary>
            Gets the id of the market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto.Specifiers">
            <summary>
            Gets the specifiers for this market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto.Outcomes">
            <summary>
            Gets the outcomes for this market
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto">
            <summary>
            Represents a delayed info for sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto.Id">
            <summary>
            Gets a identifier
            </summary>
            <value>The identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto.Description">
            <summary>
            Gets the description of delayed info
            </summary>
            <value>The description</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto"/> class
            </summary>
            <param name="id">a identifier</param>
            <param name="description">the description of the represented sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.DelayedInfoDto.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1">
            <summary>
            Represents a list or collection of sport related entities
            </summary>
            <typeparam name="T">The type of the entities held by the instance</typeparam>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1.Items">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing sport related instances associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> class.
            </summary>
            <param name="items">a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing sport related instances associated with the current instance.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto">
            <summary>
            A data-transfer-object representing a player info within timeline events
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto.Bench">
            <summary>
            Gets the bench value
            </summary>
            <value>The bench value - in case of yellow or red card event, it is relevant to know if the player who is getting the card is sitting on the bench at that exact moment.</value>
            <remarks>The attribute is equal to 1 if the player who gets the card is sitting on the bench. In case the player who gets the card is on the field, then the attribute is not added at all.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto.Method">
            <summary>
            Gets the method value
            </summary>
            <value>The method value</value>
            <remarks>The attribute can assume values such as 'penalty' and 'own goal'. In case the attribute is not inserted, then the goal is not own goal neither penalty.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventPlayerDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer"/> containing information about a player</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto">
            <summary>
            Class EventResultDto
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Id">
            <summary>
            Gets the identifier
            </summary>
            <value>The identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Position">
            <summary>
            Gets the position
            </summary>
            <value>The position</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.PointsDecimal">
            <summary>
            Gets the points
            </summary>
            <value>The points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.WcPoints">
            <summary>
            Gets the wc? points
            </summary>
            <value>The wc? points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Time">
            <summary>
            Gets the time
            </summary>
            <value>The time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.TimeRanking">
            <summary>
            Gets the time ranking
            </summary>
            <value>The time ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Status">
            <summary>
            Gets the status
            </summary>
            <value>The status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.StatusComment">
            <summary>
            Gets the status comment
            </summary>
            <value>The status comment</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.SprintDecimal">
            <summary>
            Gets the sprint
            </summary>
            <value>The sprint</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.SprintRanking">
            <summary>
            Gets the sprint ranking
            </summary>
            <value>The sprint ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.ClimberDecimal">
            <summary>
            Gets the climber
            </summary>
            <value>The climber</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.ClimberRanking">
            <summary>
            Gets the climber ranking
            </summary>
            <value>The climber ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.MatchStatus">
            <summary>
            Gets the match status
            </summary>
            <value>The match status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.HomeScore">
            <summary>
            Gets the home score
            </summary>
            <value>The home score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.AwayScore">
            <summary>
            Gets the away score
            </summary>
            <value>The away score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Grid">
            <summary>
            Gets the grid
            </summary>
            <value>The grid</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.Distance">
            <summary>
            Gets the distance
            </summary>
            <value>The distance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.CompetitorResults">
            <summary>
            Gets the competitor results
            </summary>
            <value>The results</value>
            <remarks>Sportradar</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.resultType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto"/> class
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.resultScore)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto"/> class
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EventResultDto"/> class
            </summary>
            <param name="stageResultCompetitor">The stage result competitor</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto">
            <summary>
            A data-transfer-object for fixture change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto">
            <summary>
            A data-transfer-object representing a fixture
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto.ParentStage">
            <summary>
            Gets a id of the parent stage associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto.AdditionalParents">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the additional parent stages associated with the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto">
            <summary>
            A data-transfer-object representing a group
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.HoleDto">
            <summary>
            A data-access-object representing a hole (used in golf course)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.JerseyDto">
            <summary>
            A data-transfer-object for jersey
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.BonusInfoDto">
            <summary>
            Defines a data-transfer-object for bonus info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.BonusInfoDto.BonusBalls">
            <summary>
            Gets the bonus balls
            </summary>
            <value>The bonus balls</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.BonusInfoDto.BonusDrumType">
            <summary>
            Gets the type of the bonus drum
            </summary>
            <value>The type of the bonus drum</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.BonusInfoDto.BonusRange">
            <summary>
            Gets the bonus range
            </summary>
            <value>The bonus range</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto">
            <summary>
            Defines a data-transfer-object for lottery draw
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.Lottery">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.Status">
            <summary>
            Gets the status of the draw
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.ResultsChronological">
            <summary>
            Gets a value indicating whether results are in chronological order
            </summary>
            <value><c>true</c> if [results chronological]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.Results">
            <summary>
            Gets the results
            </summary>
            <value>The results</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.DisplayId">
            <summary>
            Gets the display identifier
            </summary>
            <value>The display identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawInfoDto">
            <summary>
            Defines a data-transfer-object for draw info
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto">
            <summary>
            Defines a data-transfer-object for draw result
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto.Value">
            <summary>
            Gets the value of the draw
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawResultDto.Name">
            <summary>
            Gets the name (translatable)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto">
            <summary>
            Defines a data-transfer-object for lottery
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.Sport">
            <summary>
            Gets the sport
            </summary>
            <value>The sport</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.Category">
            <summary>
            Gets the category
            </summary>
            <value>The category</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.BonusInfo">
            <summary>
            Gets the bonus information
            </summary>
            <value>The bonus information</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.DrawInfo">
            <summary>
            Gets the draw information
            </summary>
            <value>The draw information</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.DrawEvents">
            <summary>
            Gets the draw events
            </summary>
            <value>The draw events</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ManagerDto">
            <summary>
            A data-transfer-object for manager
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketAttributeDto">
            <summary>
            A data-transfer-object representing a market description attributes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketAttributeDto.Name">
            <summary>
            Gets the attribute name
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketAttributeDto.Description">
            <summary>
            Gets the attribute description
            </summary>
            <value>The description.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketAttributeDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.attributesAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketAttributeDto"/> class.
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.attributesAttribute"/> representing attribute object obtained by parsing the xml.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto">
            <summary>
            A data transfer object for market description
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto.OverrideId(System.Int64)">
            <summary>
            Overrides the identifier.
            </summary>
            <param name="newId">The new identifier.</param>
            <remarks>Used when returned variant market description has different id then the requesting one</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto.OverrideGroups(System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Overrides the group list
            </summary>
            <param name="groups">The new groups</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketMappingDto">
            <summary>
            A data-transfer-object representing a market mapping
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto">
            <summary>
            A data-transfer-object containing basic information about a match
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.Season">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> instance specifying the season to which the sport event associated with the current instance belongs to.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.Round">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> representing the tournament round to which the associated sport event belongs to.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.Tournament">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> representing the tournament to which the associated sport event belongs to.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.Coverage">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CoverageInfoDto"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto"/> class
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> instance containing basic information about the sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto"/> class
            </summary>
            <param name="matchSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> instance containing basic information about the sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.fixture)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto"/> class
            </summary>
            <param name="fixture">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixture"/> instance containing basic information about the sport event</param>
            <remarks>Not all properties are filled via fixture (i.e.Venue, Conditions,..)</remarks>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto">
            <summary>
            A data-transfer-object for match timeline
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto">
            <summary>
            A data-access-object representing a named value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto.Id">
            <summary>
            Gets the id of the match status
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto.Description">
            <summary>
            Gets the description
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.NamedValueDto"/> class.
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.OutcomeDescriptionDto">
            <summary>
            A data-transfer-object for outcome description
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.OutcomeMappingDto">
            <summary>
            A data-transfer-object representing a market mapping for outcome
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodCompetitorResultDto">
            <summary>
            Class PeriodCompetitorResultDto.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodCompetitorResultDto.Id">
            <summary>
            Gets the competitor id
            </summary>
            <value>The competitor id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodCompetitorResultDto.CompetitorResults">
            <summary>
            Gets the competitor results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto">
            <summary>
            Class PeriodScoreDto
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.HomeScore">
            <summary>
            Gets the home score
            </summary>
            <value>The home score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.AwayScore">
            <summary>
            Gets the away score
            </summary>
            <value>The away score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.PeriodNumber">
            <summary>
            Gets the period number
            </summary>
            <value>The period number</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.MatchStatusCode">
            <summary>
            Gets the match status code
            </summary>
            <value>The match status code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.Type">
            <summary>
            Gets the type
            </summary>
            <value>The type</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto"/> class
            </summary>
            <param name="periodScore">The period score</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.periodScore)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto"/> class
            </summary>
            <param name="periodScore">The period score</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodStatusDto">
            <summary>
            Class PeriodStatusDto.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodStatusDto.Number">
            <summary>
            Gets the number of the specific lap.
            </summary>
            <value>The number of the specific lap.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodStatusDto.Type">
            <summary>
            Gets the type
            </summary>
            <value>The type</value>
            <remarks>Possible values: lap</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodStatusDto.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
            <remarks>Possible values: not_started, started, completed.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodStatusDto.PeriodResults">
            <summary>
            Gets the period results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto">
            <summary>
            A data-transfer-object containing data for stage period summary
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport event associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto.PeriodStatuses">
            <summary>
            Gets the period statuses
            </summary>
            <value>The period statuses</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> class
            </summary>
            <param name="stagePeriod">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> containing data</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto">
            <summary>
            A data-access-object representing a pitcher
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto.Hand">
            <summary>
            Gets the hand with which player pitches
            </summary>
            <value>The hand with which player pitches</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto.Competitor">
            <summary>
            Gets the indicator if the competitor is Home or Away
            </summary>
            <value>The indicator if the competitor is Home or Away</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.pitcher)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PitcherDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher"/> containing information about a pitcher</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto">
            <summary>
            A data-access-object representing a player as a member of competitor
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto.Abbreviation">
            <summary>
            Gets the abbreviation
            </summary>
            <value>The abbreviation</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto.Nationality">
            <summary>
            Gets the nationality
            </summary>
            <value>The nationality</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerCompetitorDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor"/> containing information about a player as a member of competitor</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerDto">
            <summary>
            A data-access-object representing a player
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.player)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.player"/> containing information about a player</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto">
            <summary>
            A data-transfer-object representing player's profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Type">
            <summary>
            Gets a value describing the type(e.g. forward, defense, ...) of the player represented by current instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.DateOfBirth">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the date of birth of the player associated with the current instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Nationality">
            <summary>
            Gets the nationality of the player represented by the current instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Height">
            <summary>
            Gets the height in centimeters of the player represented by the current instance or a null reference if height is not known
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Weight">
            <summary>
            Gets the weight in kilograms of the player represented by the current instance or a null reference if weight is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.FullName">
            <summary>
            Gets the full name of the player
            </summary>
            <value>The full name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Nickname">
            <summary>
            Gets the nickname of the player
            </summary>
            <value>The nickname</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.JerseyNumber">
            <summary>
            Gets the jersey number
            </summary>
            <value>The jersey number</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.Gender">
            <summary>
            Gets the gender
            </summary>
            <value>The gender</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended"/> containing information about the player</param>
            <param name="generatedAt">The timestamp when the response was created</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto">
            <summary>
            A data-transfer-object representing producer info returned by Sports API
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.Id">
            <summary>
            Gets the Id of the associated producer
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.Name">
            <summary>
            Gets the name of the associated producer
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.Description">
            <summary>
            Gets the description of the associated producer
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.Active">
            <summary>
            Gets a value indicating whether the associated producer is active
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.Url">
            <summary>
            Gets the url of the associated producer
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.ScopeNames">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the scope names to which the producer belongs to.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.StatefulRecoveryWindow">
            <summary>
            Gets the stateful recovery window in minutes
            </summary>
            <value>The stateful recovery window in minutes</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.producer)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProducerDto"/> class
            </summary>
            <param name="producer">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producer"/> containing deserialized response from 'available producers' endpoint</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProductInfoDto">
            <summary>
            A data-transfer-object representation for product info
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProductInfoLinkDto">
            <summary>
            A data-transfer-object representation for product info link
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RaceDriverProfileDto">
            <summary>
            A data-transfer-object for race driver profile
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto">
            <summary>
            A data-access-object representing a sport event referee
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto.Nationality">
            <summary>
            Gets the nationality of the represented referee
            </summary>
            <value>The nationality.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.referee)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RefereeDto"/> class.
            </summary>
            <param name="referee">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.referee"/> containing information about a referee.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper">
            <summary>
            A helper for mapping of rest data to sdk data-transfer-objects
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapSportEvent(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Maps the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> instance to the one of the derived types of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/>
            </summary>
            <param name="item">The item to be mapped</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> derived instance</returns>
            <exception cref="T:System.ArgumentException">id</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapSportEvent(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended)">
            <summary>
            Maps the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instance to the one of the derived types of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/>
            </summary>
            <param name="item">The item to be mapped</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> derived instance</returns>
            <exception cref="T:System.ArgumentException">id</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.FillHomeAwayCompetitors(System.Collections.Generic.IReadOnlyCollection{Sportradar.OddsFeed.SDK.Messages.Rest.teamCompetitor})">
            <summary>
            It checks if there are exactly 2 competitors and one is home and seconds away. If so, it returns dictionary indicating which of team is home and which away; else null
            </summary>
            <param name="competitors">The competitors to be checked</param>
            <returns>The dictionary of home and away competitor ids</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapBonusDrumType(Sportradar.OddsFeed.SDK.Messages.Rest.bonusDrumType,System.Boolean)">
            <summary>
            Maps the type of the bonus drum
            </summary>
            <param name="bonusDrumType">Type of the bonus drum</param>
            <param name="restTypeSpecified">if set to <c>true</c> [rest type specified]</param>
            <returns>System.Nullable&lt;BonusDrumType&gt;</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapDrawType(Sportradar.OddsFeed.SDK.Messages.Rest.drawType,System.Boolean)">
            <summary>
            Maps the type of the draw
            </summary>
            <param name="drawType">Type of the draw</param>
            <param name="restTypeSpecified">if set to <c>true</c> [rest type specified]</param>
            <returns>DrawType</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapDrawStatus(Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus,System.Boolean)">
            <summary>
            Maps the draw status
            </summary>
            <param name="drawStatus">The draw status</param>
            <param name="restTypeSpecified">if set to <c>true</c> [rest type specified]</param>
            <returns>DrawStatus</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapTimeType(Sportradar.OddsFeed.SDK.Messages.Rest.timeType,System.Boolean)">
            <summary>
            Maps the type of the time
            </summary>
            <param name="timeType">Type of the time</param>
            <param name="restTypeSpecified">if set to <c>true</c> [rest type specified]</param>
            <returns>TimeType</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.MapResponseCode(Sportradar.OddsFeed.SDK.Messages.Rest.response_code,System.Boolean)">
            <summary>
            Maps the response code
            </summary>
            <param name="item">The item</param>
            <param name="itemSpecified">if set to <c>true</c> [item specified]</param>
            <returns>System.Nullable&lt;HttpStatusCode&gt;</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.TryGetBookingStatus(System.String,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus}@)">
            <summary>
            Tries to map the provided <see cref="T:System.String"/> to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> enum member
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/>, or a null reference. Note that mapping of a null
            reference is allowed and result of mapping is a null reference</param>
            <param name="result">When the call is completed it contains <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/> which was obtained by mapping or a null reference if a null reference
            was provided or mapping failed</param>
            <returns>True if the provided <see cref="T:System.String"/> was successfully mapped to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.BookingStatus"/>; False otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.TryGetSportEventType(System.String,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType}@)">
            <summary>
            Tries to map the provided <see cref="T:System.String"/> to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> enum member
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/></param>
            <param name="result">When invocation completes contains a mapped value if method returned true. Undefined otherwise</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> member obtained by mapping. A null reference is mapped to null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.TryGetStageType(System.String,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.StageType}@)">
            <summary>
            Tries to map the provided <see cref="T:System.String"/> to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> enum member
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/></param>
            <param name="result">When invocation completes contains a mapped value if method returned true. Undefined otherwise</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.SportEventType"/> member obtained by mapping. A null reference is mapped to null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RestMapperHelper.TryGetCoveredFrom(System.String,System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom}@)">
            <summary>
            Tries to map the provided <see cref="T:System.String"/> to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom"/> enum member
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom"/>, or a null reference. Note that mapping of a null
            reference is allowed and result of mapping is a null reference</param>
            <param name="result">When the call is completed it contains <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom"/> which was obtained by mapping or a null reference if a null reference
            was provided or mapping failed</param>
            <returns>True if the provided <see cref="T:System.String"/> was successfully mapped to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom"/>; False otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto">
            <summary>
            A data-transfer-object for result change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto">
            <summary>
            A data-transfer-object representation for round
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchRound)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> class
            </summary>
            <param name="round">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound"/> used for creating new instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto">
            <summary>
            A data-transfer-object for scheduled start time change (used in fixtures)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto.OldTime">
            <summary>
            Gets the old time
            </summary>
            <value>The old time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto.NewTime">
            <summary>
            Gets the new time
            </summary>
            <value>The new time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto.ChangedAt">
            <summary>
            Gets the changed at
            </summary>
            <value>The changed at</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.scheduledStartTimeChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto"/> class
            </summary>
            <param name="timeChange">The time change</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto">
            <summary>
            Defines a data-transfer object for season coverage info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.MaxCovered">
            <summary>
            Gets the maximum covered value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.MaxCoverageLevel">
            <summary>
            Gets the string representation of the maximum coverage available for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.MinCoverageLevel">
            <summary>
            Gets the name of the minimum coverage guaranteed for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.Played">
            <summary>
            Gets the played value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.Scheduled">
            <summary>
            Gets the scheduled value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.SeasonId">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the ID of the season
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto"/> class.
            </summary>
            <param name="coverageInfo">The coverage message</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto">
            <summary>
            A data-access-object representing a competition season
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.StartDate">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the start date of the represented season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.EndDate">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the end date of the represented season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.Year">
            <summary>
            Gets a string representation of the season's year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.TournamentId">
            <summary>
            Gets the associated tournament identifier.
            </summary>
            <value>The associated tournament identifier.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> class
            </summary>
            <param name="season">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended"/> containing information about a season.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.currentSeason)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> class
            </summary>
            <param name="season">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended"/> containing information about a season.</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto">
            <summary>
            A data-transfer-object representing competitor's (simple team's) profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto.Competitor">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorDto"/> representing the competitor represented by the current profile
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> containing information about the profile</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SpecifierDto">
            <summary>
            A data-transfer-object representation for specifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SpecifierDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SpecifierDto"/> class.
            </summary>
            <param name="specifier">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto">
            <summary>
            A data-transfer-object for sport categories
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto.Sport">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> specifying the parent sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto.Categories">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto"/> specifying associated categories
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto">
            <summary>
            A data-transfer-object representing a sport
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto.EqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used to compare different <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto.Categories">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing categories which belong to the sport
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto"/> from the provided tournaments
            </summary>
            <param name="id">The id of the sport</param>
            <param name="name">The name of the sport</param>
            <param name="tournaments">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing tournament which belong to the sport</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CategoryDto})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto"/> from the provided tournaments
            </summary>
            <param name="id">The id of the sport</param>
            <param name="name">The name of the sport</param>
            <param name="categories">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing categories which belong to the sport</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportDto.TournamentByCategoryIdEqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used for equality comparison of <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instances. Instances are
            considered equal if they belong to same category
            </summary>
            <seealso cref="T:System.Collections.Generic.IEqualityComparer`1" />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto">
            <summary>
            Represents a base class for all data-access-objects representing sport related entities
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the ID of the represented sport entity
            </summary>
            <value>The identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto.Name">
            <summary>
            Gets the name of the represented sport entity
            </summary>
            <value>The name</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> class
            </summary>
            <param name="id">a <see cref="T:System.String"/> representing the ID of the represented sport entity</param>
            <param name="name">the name of the represented sport entity</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto">
            <summary>
            A data-transfer-object representation for sport event conditions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventConditionsDto"/> class
            </summary>
            <param name="conditions">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatisticsDto">
            <summary>
            A data-transfer-object representation for sport event status statistics. The status can be receiver through messages or fetched from the API
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto">
            <summary>
            A data-transfer-object representation for sport event status (primarily received via feed message)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus"/> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.IsReported">
            <summary>
            Gets a value indicating whether a data journalist is present on the associated sport event, or a
            null reference if the information is not available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.MatchStatusId">
            <summary>
            Gets the match status for a specific locale
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.WinnerId">
            <summary>
            Gets the winner identifier
            </summary>
            <value>The winner identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.PeriodOfLadder">
            <summary>
            Gets the period of ladder.
            </summary>
            <value>The period of the ladder</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.ReportingStatus">
            <summary>
            Gets the reporting status
            </summary>
            <value>The reporting status</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.PeriodScores">
            <summary>
            Gets the period scores
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.EventClock">
            <summary>
            Gets the event clock
            </summary>
            <value>The event clock</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.EventResults">
            <summary>
            Gets the event results
            </summary>
            <value>The event results</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.SportEventStatistics">
            <summary>
            Gets the sport event statistics
            </summary>
            <value>The sport event statistics</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.HomeAwayCompetitors">
            <summary>
            Gets the indicator for competitors if they are home or away
            </summary>
            <value>The indicator for competitors if there are home or away</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.HomePenaltyScore">
            <summary>
            Gets the penalty score of the home competitor competing in the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.AwayPenaltyScore">
            <summary>
            Gets the penalty score of the away competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.DecidedByFed">
            <summary>
            Gets the indicator wither the event is decided by fed
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway,Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> class
            </summary>
            <param name="ses">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus" /> instance containing status data about the associated sport event</param>
            <param name="homeAwayCompetitors">The list of competitors with the indicator if it is a home or away team</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus,Sportradar.OddsFeed.SDK.Messages.Rest.matchStatistics,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.HomeAway,Sportradar.OddsFeed.SDK.Common.Urn})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> class.
            </summary>
            <param name="restSes">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus" /> instance containing status data about the associated sport event</param>
            <param name="statistics"></param>
            <param name="homeAwayCompetitors"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto"/> class.
            </summary>
            <param name="stageSes">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus" /> instance containing status data about the associated sport event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object"/> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventStatusDto.ApplyPropertyValue(System.Boolean,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds the provided <c>name</c> and <c>value</c> to the provided <see cref="T:System.Collections.Generic.IDictionary`2"/>
            if so specified by the <c>specified</c>"/> field
            </summary>
            <param name="specified">Specifies whether the provided name and value should be added to the dictionary</param>
            <param name="name">The name of the property</param>
            <param name="value">The value of the property</param>
            <param name="target">A <see cref="T:System.Collections.Generic.IDictionary`2"/>to which the name / value pair will be added</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto">
            <summary>
            A data-transfer-object containing basic information about a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport event associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.SportId">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.Scheduled">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the scheduled start date for the sport event associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.ScheduledEnd">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the scheduled end time of the sport event associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.Name">
            <summary>
            Gets a name o f the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.StartTimeTbd">
            <summary>
            Gets a <see cref="T:System.Boolean"/> specifying if the start time to be determined is set for the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.ReplacedBy">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event
            for the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.StatusOnEvent">
            <summary>
            Gets the status (directly from sportEvent)
            </summary>
            <value>The status (directly from sportEvent)</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> class
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> containing basic information about the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.parentStage)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> class
            </summary>
            <param name="parentStage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage"/> containing basic information about the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto"/> class
            </summary>
            <param name="childStage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event"/> containing basic information about the event</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto">
            <summary>
            A data-transfer-object containing basic information about a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.ParentStage">
            <summary>
            Gets a id of the parent stage associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.AdditionalParents">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the additional parent stages associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.Stages">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying the child stages associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.Tournament">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> representing the tournament to which the associated sport event belongs to
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto"/> class
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> containing basic information about the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto"/> class
            </summary>
            <param name="stageEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint"/> containing basic information about the event</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StageDto"/> class
            </summary>
            <param name="childStage">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event"/> containing basic information about the event</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StreamingChannelDto">
            <summary>
            A data-transfer-object representation for streaming channel
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StreamingChannelDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.streamingChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.StreamingChannelDto"/> class.
            </summary>
            <param name="channel">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.streamingChannel"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto">
            <summary>
            Provides information about team competitor
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto.Qualifier">
            <summary>
            Gets the competitor's qualifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.teamCompetitor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TeamCompetitorDto"/> class
            </summary>
            <param name="record">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.teamCompetitor"/> containing information about the team</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto">
            <summary>
            Provides information about tournament (when fetching the all tournaments for all sports)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.Scheduled">
            <summary>
            Gets a <see cref="T:System.DateTime"/> indicating when the tournament is scheduled to start, or a null reference if value is not known.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.ScheduledEnd">
            <summary>
            Gets a <see cref="T:System.DateTime"/> indicating when the tournament is scheduled to end, or a null reference if value is not known.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.Sport">
            <summary>
            A sport to which this tournament belongs to
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.Category">
            <summary>
            A category to which this tournament belongs to
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.CurrentSeason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto"/> representing the current season of the tournament
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.SeasonCoverage">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonCoverageDto"/> containing information about the tournament coverage.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournament)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> class
            </summary>
            <param name="tournament">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournament"/> used for creating instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> class.
            </summary>
            <param name="tournament">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto">
            <summary>
            A data-access-object containing tournament information (when fetching summary or fixture)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.TournamentCoverage">
            <summary>
            Gets the tournament coverage
            </summary>
            <value>The tournament coverage</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Category">
            <summary>
            Gets the category
            </summary>
            <value>The category</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Sport">
            <summary>
            Gets the sport
            </summary>
            <value>The sport</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Competitors">
            <summary>
            Gets the competitors
            </summary>
            <value>The competitors</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.CurrentSeason">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> representing the current season of the tournament
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Season">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> representing the season of the tournament
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.SeasonCoverage">
            <summary>
            Gets the season coverage
            </summary>
            <value>The season coverage</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Groups">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing tournament groups
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Schedule">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> that belongs to the season schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitionDto"/> that belongs to the season schedule</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.CurrentRound">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.RoundDto"/> representing current tournament round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.TournamentInfo">
            <summary>
            Gets the tournament information for the season
            </summary>
            <value>The tournament information for the season</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.ExhibitionGames">
            <summary>
            Gets the <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> class
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> containing basic tournament info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournament)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> class
            </summary>
            <param name="tournament">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent"/> containing basic tournament info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> class
            </summary>
            <param name="tournament">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournament"/> containing detailed tournament info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> class
            </summary>
            <param name="tournament">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> containing basic tournament info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> class
            </summary>
            <param name="season">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SeasonDto"/> containing basic tournament info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> class
            </summary>
            <param name="fixture">The fixture</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto.TournamentInfo"/> class
            </summary>
            <param name="tournament">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> containing basic tournament info</param>
            <param name="overwriteSeason">Overwrite tournament base data with season info</param>
            <param name="overwriteCurrentSeason">Overwrite tournament base data with current season info</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto">
            <summary>
            A data-transfer-object for tournament season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto.Tournament">
            <summary>
            Gets the tournament
            </summary>
            <value>The tournament</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto.Seasons">
            <summary>
            Gets the seasons
            </summary>
            <value>The seasons</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto.GeneratedAt">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying when the associated message was generated (on the server side)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto"/> class
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TvChannelDto">
            <summary>
            A data-transfer-object representation for tv channel
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TvChannelDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TvChannelDto"/> class
            </summary>
            <param name="tvChannel">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VariantDescriptionDto">
            <summary>
            A data transfer object for variant market description
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto">
            <summary>
            A data-access-object representing a venue
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEntityDto" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.Capacity">
            <summary>
            Gets the capacity of the represented venue or a null reference if value is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.City">
            <summary>
            Gets the city of the represented venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.Country">
            <summary>
            Gets the country of the represented venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.CountryCode">
            <summary>
            Gets the country code of the represented venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.State">
            <summary>
            Gets the state of the represented venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.Coordinates">
            <summary>
            Gets the GPS coordinates of the represented venue.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.Courses">
            <summary>
            Gets the course
            </summary>
            <value>The course</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.venue)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VenueDto"/> class
            </summary>
            <param name="venue">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.venue"/> instance containing venue related information</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.WeatherInfoDto">
            <summary>
            A data-transfer-object representation for weather info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.WeatherInfoDto.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.WeatherInfoDto"/> class.
            </summary>
            <param name="weatherInfo">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo"/> used for creating instance</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist">
            <summary>
            Represents an assists on a sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Player" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IAssist" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist.Type">
            <summary>
            Gets a <see cref="T:System.String" /> specifying the type of the assist
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist"/> class.
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor" /> instance</param>
            <param name="names">A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing assist names in different languages</param>
            <param name="type">a <see cref="T:System.String" /> specifying the type of the assist</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Assist.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity"/>, containing Id as <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> and translatable Name
            </summary>
            <remarks>Id is required, name(s) can be null</remarks>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> identifying the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> identifying the current instance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.Names">
            <summary>
            Gets the list of translated names
            </summary>
            <value>The list of translated names</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name
            </summary>
            <param name="culture">The culture</param>
            <returns>System.String</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBaseEntity"/> class
            </summary>
            <param name="id">The identifier</param>
            <param name="names">The names</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament">
            <summary>
            Class BasicTournament.
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBasicTournament" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.ExecutionLogPrivate">
            <summary>
            This <see cref="T:Microsoft.Extensions.Logging.ILogger"/> should not be used since it is also exposed by the base class
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament._sportDataCache">
            <summary>
            The sport data cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament._sportEntityFactory">
            <summary>
            An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament"/> class
            </summary>
            <param name="id">The identifier</param>
            <param name="sportId">The sport identifier</param>
            <param name="sportEntityFactory">An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances</param>
            <param name="sportEventCache">The sport event cache</param>
            <param name="sportDataCache">The sport data cache</param>
            <param name="cultures">The cultures</param>
            <param name="exceptionStrategy">The exception strategy</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetSportAsync">
            <summary>
            get sport as an asynchronous operation.
            </summary>
            <returns>Task&lt;ISportSummary&gt;</returns>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary" /> instance representing the sport associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.EnsureSummaryIsFetchedForLanguages(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions)">
            <summary>
            Asynchronously retrieves and populates the entity's data from the API.
            </summary>
            <param name="languages">Languages to fetch the summary for.</param>
            <param name="requestOptions">Options for the request.</param>
            <returns>A task that represents the asynchronous preload operation.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetTournamentCoverage">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance
            </summary>
            <returns>Task&lt;ITournamentCoverage&gt;</returns>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetCategoryAsync">
            <summary>
            Get category as an asynchronous operation.
            </summary>
            <returns>Task&lt;ICategorySummary&gt;</returns>
            <value>The category</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetCompetitorsAsync">
            <summary>
            get competitors as an asynchronous operation.
            </summary>
            <returns>Task&lt;IEnumerable&lt;ICompetitor&gt;&gt;</returns>
            <value>The competitors</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BasicTournament.GetScheduleAsync">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo">
            <summary>
            Class BonusInfo
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IBonusInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.BonusBalls">
            <summary>
            Gets the bonus balls info
            </summary>
            <value>The bonus balls info or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.BonusDrumType">
            <summary>
            Gets the type of the bonus drum
            </summary>
            <value>The type of the bonus drum or null if not known</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.BonusRange">
            <summary>
            Gets the bonus range
            </summary>
            <value>The bonus range</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.BonusInfoCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BonusInfo.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails">
            <summary>
            Represents a bookmaker details
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.BookmakerId">
            <summary>
            Gets the bookmaker id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.VirtualHost">
            <summary>
            Gets the specific virtual host of the bookmaker
            </summary>
            <value>The virtual host</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.ServerTimeDifference">
            <summary>
            Gets the server time difference
            </summary>
            <value>The server time difference</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.ExpireAt">
            <summary>
            Gets the expire date of the token
            </summary>
            <value>The expires</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.ResponseCode">
            <summary>
            Gets the response code of the server's response or a null reference
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.Message">
            <summary>
            Gets the message of the request
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.BookmakerDetailsDto"/> to be used for constructing new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BookmakerDetails.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Car">
            <summary>
            Represents a car
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Car.Name">
            <summary>
            Gets the car name
            </summary>
            <value>The car name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Car.Chassis">
            <summary>
            Gets the car chassis
            </summary>
            <value>The car chassis</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Car.EngineName">
            <summary>
            Gets the car engine name
            </summary>
            <value>The car engine name</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category">
            <summary>
            Represents a sport category
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String},System.String,System.Collections.Generic.IReadOnlyCollection{Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category"/> class
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategory"/> instance</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated category name</param>
            <param name="countryCode">a country code</param>
            <param name="tournaments">a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> representing the tournaments which belong to the category represented by the current instance </param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category.Tournaments">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the tournaments which belong to
            the category represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Category.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CategorySummary">
            <summary>
            Implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CategorySummary.CountryCode">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CategorySummary.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String},System.String)">
            <summary>
            Creates new instance of category summary
            </summary>
            <param name="id"> a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the category represented by the current instance</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated category name</param>
            <param name="countryCode">a country code</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CategorySummary.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CategorySummary.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus">
            <summary>
            Class CompetitionStatus
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.SportEventStatusCacheItem">
            <summary>
            The sport event status dto
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.WinnerId">
            <summary>
            Gets the winner identifier
            </summary>
            <value>The winner identifier, if available, otherwise null</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus" /> describing the high-level status of the associated sport event
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.ReportingStatus">
            <summary>
            Returns a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.ReportingStatus" /> describing the reporting status of the associated sport event
            </summary>
            <value>The reporting status.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.EventResults">
            <summary>
            Gets the event results
            </summary>
            <value>The event results</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional event status values</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.PeriodOfLadder">
            <summary>
            Gets the period of ladder.
            </summary>
            <value>The period of ladder.</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.MatchStatusCache">
            <summary>
            The cache for match statuses
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object" /> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus"/> class.
            </summary>
            <param name="ci">The status cache item</param>
            <param name="matchStatusesCache">The <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> used to get match status id and description</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor">
            <summary>
            Represents a player or a team competing in a sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Player" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem)">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor" /> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem" /> used to create new instance</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache" /> used for fetching profile data</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem" /></param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory" /> used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile" />
            </param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy" /> used in sport entity factory</param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem" /> to which this competitor belongs to</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem})">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor" /> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem" /> used to create new instance</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache" /> used for fetching profile data</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem" /></param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory" /> used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile" />
            </param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy" /> used in sport entity factory</param>
            <param name="competitorsReferences">A list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem" /> for all competitors</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem})">
            <summary>
                Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor" /> class
            </summary>
            <param name="competitorId">A competitor id used to create new instance</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache" /> used for fetching profile data</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem" /></param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory" /> used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile" />
            </param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy" /> used in sport entity factory</param>
            <param name="competitorsReferences">A list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem" /> for all competitors</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.GetCountry(System.Globalization.CultureInfo)">
            <summary>
                Gets the name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the Country if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.GetAbbreviation(System.Globalization.CultureInfo)">
            <summary>
                Gets the competitor's abbreviation in the specified language or a null reference
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the abbreviation</param>
            <returns>The competitor's abbreviation in the specified language or a null reference</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.PrintC">
            <summary>
                Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor.PrintF">
            <summary>
                Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitorResult.Type">
            <summary>
            Get the type
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitorResult.Value">
            <summary>
            Gets the value
            </summary>
            <value>The value</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitorResult.Specifiers">
            <summary>
            Gets the specifiers
            </summary>
            <value>The specifiers</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitorResult.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo">
            <summary>
            Provides coverage information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo._level">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.Level"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo._isLive">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.IsLive"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo._includes">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.Includes"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo._coveredFrom">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.CoveredFrom"/> property backing field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.#ctor(System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Sportradar.OddsFeed.SDK.Entities.Rest.Enums.CoveredFrom})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo"/> class.
            </summary>
            <param name="level">a <see cref="T:System.String" /> describing the level of the available coverage</param>
            <param name="isLive">a value indicating whether the coverage represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" /> is live coverage</param>
            <param name="includes">a <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying what is included in the coverage represented by the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" /> instance</param>
            <param name="coveredFrom"></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableCoverageInfo" /> specifying the current item</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.Level">
            <summary>
            Gets a <see cref="T:System.String" /> describing the level of the available coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.IsLive">
            <summary>
            Gets a value indicating whether the coverage represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" /> is live coverage
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.Includes">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1" /> specifying what is included in the coverage represented by the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.CoveredFrom">
            <summary>
            Gets a <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.CoveredFrom"/> describing the coverage location
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CoverageInfo.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelections">
            <summary>
            Implements methods used to access available selections for the event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelections.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelections"/> class
            </summary>
            <param name="availableSelections">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto"/> representing the available selections</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelectionsFilter">
            <summary>
            Implements methods used to access available selections for the event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelectionsFilter.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredAvailableSelectionsDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.AvailableSelections"/> class
            </summary>
            <param name="availableSelections">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto"/> representing the available selections</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Calculation">
            <summary>
            Implements methods used to provides a probability calculation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Calculation.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Calculation"/> class
            </summary>
            <param name="calculation">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto"/> representing the calculation</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.CalculationFilter">
            <summary>
            Implements methods used to provides a probability calculation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.CalculationFilter.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ICalculationFilter"/> class
            </summary>
            <param name="calculation">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto"/> representing the calculation</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Market">
            <summary>
            Implements methods used to access available selections for the market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Market.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Market"/> class
            </summary>
            <param name="market">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.MarketDto"/> representing the market</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.MarketFilter">
            <summary>
            Implements methods used to access available selections for the market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.MarketFilter.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.IMarketFilter"/> class
            </summary>
            <param name="market">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredMarketDto"/> representing the market</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.OutcomeFilter.Id">
            <inheritdoc />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.OutcomeFilter.IsConflict">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Selection">
            <summary>
            Implements methods used to provides an requested selection
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CustomBet.Selection.ToString">
            <inheritdoc />
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo">
            <summary>
            Class DelayedInfo
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.Id">
            <summary>
            Gets the id identifying the current instance
            </summary>
            <value>The id identifying the current instance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.Descriptions">
            <summary>
            Gets the list of translated names
            </summary>
            <value>The list of translated names</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description associated with this instance in specific language
            </summary>
            <param name="culture">The language used to get the description</param>
            <returns>Description if available in specified language or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DelayedInfoCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDelayedInfo"/>
            </summary>
            <param name="delayedInfoCacheItem">The delayed info cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DelayedInfo.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo">
            <summary>
            Class DrawInfo
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.DrawType">
            <summary>
            Gets the type of the draw
            </summary>
            <value>The type of the draw</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.TimeType">
            <summary>
            Gets the type of the time
            </summary>
            <value>The type of the time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.GameType">
            <summary>
            Gets the type of the game
            </summary>
            <value>The type of the game</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawInfoCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo"/> class
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawInfo.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult">
            <summary>
            Class DrawResult
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IDrawResult" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.Value">
            <summary>
            Gets the value of the draw
            </summary>
            <value>The value</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing translated names
            </summary>
            <value>The names</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name in specified culture language
            </summary>
            <param name="culture">The culture</param>
            <returns>The name in specified language</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.DrawResultCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult"/> class
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.DrawResult.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter">
            <summary>
            Printer used to format ToString display for entities
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.ToString">
            <summary>Returns a string that represents the current objects identifier.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.ToString(System.IFormatProvider)">
            <summary>
            Returns a string that represents the current object
            </summary>
            <param name="formatProvider">A format provider used to format the output string</param>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.ToString(System.String)">
            <summary>Formats the value of the current instance using the specified format.</summary>
            <returns>The value of the current instance in the specified format.</returns>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation. </param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.ToString(System.String,System.IFormatProvider)">
            <summary>Formats the value of the current instance using the specified format.</summary>
            <returns>The value of the current instance in the specified format.</returns>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation. </param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system. </param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.PrintJ(System.Type,System.Object)">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <param name="type">A <see cref="T:System.Type"/> specifying the type of the instance whose representation to create.</param>
            <param name="item">A <see cref="T:System.Object"/> representing the instance whose representation to create.</param>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock">
            <summary>
            Represents an event clock
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock._eventTime">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.EventTime"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock._stoppageTime">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.EventTime"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock._stoppageTimeAnnounced">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.StoppageTimeAnnounced"/> property backing field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock"/> class.
            </summary>
            <param name="eventTime">the event time of the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" /> instance</param>
            <param name="stoppageTime">the <see cref="T:System.String" /> representation of the stoppage time the event associated with the current</param>
            <param name="stoppageTimeAnnounced"></param>
            <param name="remainingDate">the remaining date</param>
            <param name="remainingTimeInPeriod">the remaining time in period</param>
            <param name="stopped">a value indicating if it is stopped</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.EventTime">
            <summary>
            Gets the event time of the sport event associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.StoppageTime">
            <summary>
            Gets the <see cref="T:System.String" /> representation of the time the event associated with the current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" /> has been stopped
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.StoppageTimeAnnounced">
            <summary>
            Gets a value indicating whether the stoppage time has been announced.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventClock.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer">
            <summary>
            Represents a player in a sport event timeline event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer.Bench">
            <summary>
            Gets the bench value
            </summary>
            <value>The bench value - in case of yellow or red card event, it is relevant to know if the player who is getting the card is sitting on the bench at that exact moment.</value>
            <remarks>The attribute is equal to 1 if the player who gets the card is sitting on the bench. In case the player who gets the card is on the field, then the attribute is not added at all.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer"/> class
            </summary>
            <param name="data">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem"/> data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventPlayer.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult">
            <summary>
            Class EventResult
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventResult" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Id">
            <summary>
            Gets the id of the event result
            </summary>
            <value>The id of the event result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Position">
            <summary>
            Gets the position of the result
            </summary>
            <value>The position of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.PointsDecimal">
            <summary>
            Gets the points
            </summary>
            <value>The points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.WcPoints">
            <summary>
            Gets the WC points
            </summary>
            <value>The WC points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Time">
            <summary>
            Gets the time of the result
            </summary>
            <value>The time of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.TimeRanking">
            <summary>
            Gets the time ranking
            </summary>
            <value>The time ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Status">
            <summary>
            Gets the status of the result
            </summary>
            <value>The status of the result</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.StatusComment">
            <summary>
            Gets the status comment
            </summary>
            <value>The status comment</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.SprintDecimal">
            <summary>
            Gets the sprint
            </summary>
            <value>The sprint</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.SprintRanking">
            <summary>
            Gets the sprint ranking
            </summary>
            <value>The sprint ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.ClimberDecimal">
            <summary>
            Gets the climber
            </summary>
            <value>The climber</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.ClimberRanking">
            <summary>
            Gets the climber ranking
            </summary>
            <value>The climber ranking</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
            <value>The home score.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
            <value>The away score.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Grid">
            <summary>
            Gets the grid
            </summary>
            <value>The grid</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.Distance">
            <summary>
            Gets the distance
            </summary>
            <value>The distance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.CompetitorResults">
            <summary>
            Gets the results.
            </summary>
            <value>The results.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EventResult.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the match status
            </summary>
            <param name="culture">The culture used to get match status id and description</param>
            <returns>Returns the match status id and description in selected culture</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture">
            <summary>
            A implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> used to return results to user
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.StartTime">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying when the fixture associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/>
            is scheduled to start
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.NextLiveTime">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the live time in case the fixture represented by current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture"/> instance was re-schedule, or a null reference if the fixture was not re-scheduled
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.StartTimeConfirmed">
            <summary>
            Gets a value indicating whether the start time of the fixture represented by current
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture" /> instance has been confirmed
            </summary>
            <value><c>true</c> if [start time confirmed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.StartTimeTbd">
            <summary>
            Gets a value indicating whether the start time is to be determent
            </summary>
            <value><c>null</c> if [start time TBD] contains no value, <c>true</c> if [start time TBD]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ReplacedBy">
            <summary>
            When sport event is postponed this field indicates with which event it is replaced
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> this event is replaced by</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ExtraInfo">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional information about the
            fixture represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture" /> instance
            </summary>
            <value>The extra information.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.TvChannels">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1" /> representing TV channels covering the sport event
            represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixture" /> instance
            </summary>
            <value>The TV channels.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.CoverageInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICoverageInfo" /> instance specifying what coverage is available for the sport event
            associated with current instance
            </summary>
            <value>The coverage information.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ProductInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo" /> instance providing sportradar related information about the sport event associated
            with the current instance.
            </summary>
            <value>The product information.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.References">
            <summary>
            Gets the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ScheduledStartTimeChanges">
            <summary>
            Gets the scheduled start time changes
            </summary>
            <value>The scheduled start time changes</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ParentStageId">
            <summary>
            Gets a id of the parent stage associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.AdditionalParentsIds">
            <summary>
            Gets the list specifying the additional parent ids associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.PrintJ">
            <summary>
            Constructs and returns a string containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Fixture.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange">
            <summary>
            Provides information about fixture changes
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IFixtureChange" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureChangeDto"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.FixtureChange.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer">
            <summary>
            Represents a goal scorer in a sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventPlayer" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer.Method">
            <summary>
            Gets the method value
            </summary>
            <value>The method value</value>
            <remarks>The attribute can assume values such as 'penalty' and 'own goal'. In case the attribute is not inserted, then the goal is not own goal neither penalty.</remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGoalScorer"/> class
            </summary>
            <param name="data">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.EventPlayerCacheItem"/> data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.GoalScorer.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group">
            <summary>
            Represents a competition group
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group._competitors">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.Competitors"/> property backing field
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.Id">
            <summary>
            Gets the id of the group represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.Name">
            <summary>
            Gets the name of the group represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.Competitors">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1" /> representing group competitors
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group"/> class
            </summary>
            <param name="name">the name of the group represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup" /> instance</param>
            <param name="competitors">the <see cref="T:System.Collections.Generic.IEnumerable`1" /> representing group competitors</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group"/> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.GroupCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.GroupDto"/></param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile"/></param>
            <param name="exceptionStrategy">The exception strategy</param>
            <param name="competitorsReferenceIds">A list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/> for all competitors</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Group.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole">
            <summary>
            Represents a hole
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IHole" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.Number">
            <summary>
            Gets the number of the hole
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.Par">
            <summary>
            Gets the par
            </summary>
            <value>The par</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Hole.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue">
            <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ILocalizedNamedValue"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue.Descriptions">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing translated descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String},System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="descriptions">The descriptions.</param>
            <param name="defaultCulture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the default language</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description for specific locale
            </summary>
            <returns>Return the Description if exists, or null.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.LocalizedNamedValue.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Manager">
            <summary>
            Class Manager
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.BaseEntity" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IManager" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Manager.Nationalities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing nationalities in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Manager.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>The country code</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Manager.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the manager
            </summary>
            <param name="culture">The culture.</param>
            <returns>Return a nationality of the manager</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Manager.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ManagerCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IManager"/> class
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus">
            <summary>
            Class MatchStatus
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IMatchStatus" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.EventClock">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" /> instance describing the timings in the current event
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IEventClock" /> instance describing the timings in the current event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.PeriodScores">
            <summary>
            Gets the list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" />
            </summary>
            <value>The list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" /></value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
            <value>The score of the home competitor competing on the associated sport event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
            <value>The score of the away competitor competing on the associated sport event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.HomePenaltyScore">
            <summary>
            Gets the penalty score of the home competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.AwayPenaltyScore">
            <summary>
            Gets the penalty score of the away competitor competing on the associated sport event (for Ice Hockey)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.DecidedByFed">
            <summary>
            Gets the indicator wither the event is decided by fed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.Statistics">
            <summary>
            Returns match statistics
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus"/> class
            </summary>
            <param name="ci">The cache item</param>
            <param name="matchStatusesCache">The match statuses cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Get match status as an asynchronous operation
            </summary>
            <param name="culture">The culture used to fetch status id and description</param>
            <returns>ILocalizedNamedValue</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue">
            <summary>
            An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.INamedValue"/> implementation
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue.Id">
            <summary>
            Gets the value associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue.Description">
            <summary>
            Gets the description associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue"/> class.
            </summary>
            <param name="id">The value associated with the current instance.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.NamedValue"/> class.
            </summary>
            <param name="id">The value associated with the current instance.</param>
            <param name="description">The description associated with the current instance.</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodCompetitorResult.Id">
            <summary>
            Gets the competitor id
            </summary>
            <value>The competitor id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodCompetitorResult.CompetitorResults">
            <summary>
            Gets the competitor results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore">
            <summary>
            Represents a score of a sport event period
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore._matchStatusesCache">
            <summary>
            The match statuses cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore._homeScore">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.HomeScore"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore._awayScore">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.AwayScore"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore._type">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.Type"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore._number">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.Number"/> property backing field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodScoreDto,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore"/> class.
            </summary>
            <param name="dto">The data-transfer-object for period score</param>
            <param name="matchStatusesCache">The match statuses cache</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.HomeScore">
            <summary>
            Gets the score of the home team in the period represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.AwayScore">
            <summary>
            Gets the score of the away team in the period represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.Type">
            <summary>
            Gets the type value of the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.Number">
            <summary>
            Gets the sequence number of the period represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.MatchStatusCode">
            <summary>
            Gets the match status code
            </summary>
            <value>The match status code</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the match status
            </summary>
            <param name="culture">The culture used to get match status id and description</param>
            <returns>Returns the match status id and description in selected culture</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodScore.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodStatistics.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodStatus.Number">
            <summary>
            Gets the number of the specific lap.
            </summary>
            <value>The number of the specific lap.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodStatus.Type">
            <summary>
            Gets the type
            </summary>
            <value>The type</value>
            <remarks>Possible values: lap</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodStatus.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
            <remarks>Possible values: not_started, started, completed.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PeriodStatus.PeriodResults">
            <summary>
            Gets the period results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher">
            <summary>
            Provides information about pitcher
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> used to uniquely identify the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.Name">
            <summary>
            Gets the name of the pitcher represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.Hand">
            <summary>
            Gets the hand with which player pitches
            </summary>
            <value>The hand with which player pitches</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.Competitor">
            <summary>
            Gets the indicator if the competitor is Home or Away
            </summary>
            <value>The indicator if the competitor is Home or Away</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher"/> class
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PitcherCacheItem"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Pitcher.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Player">
            <summary>
            Represents a player or a racer in a sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Player.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Player"/> class
            </summary>
            <param name="id">the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor" /> instance</param>
            <param name="names">A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing player names in different languages</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile">
            <summary>
            Represents player's profile information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Type">
            <summary>
            Gets a value describing the type(e.g. forward, defense, ...) of the player represented by current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.DateOfBirth">
            <summary>
            Gets a <see cref="T:System.DateTime" /> specifying the date of birth of the player associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Height">
            <summary>
            Gets the height in centimeters of the player represented by the current instance or a null reference if height is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Weight">
            <summary>
            Gets the weight in kilograms of the player represented by the current instance or a null reference if weight is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Nationalities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing player nationality in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Gender">
            <summary>
            Gets the gender
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.CountryCode">
            <summary>
            Gets the country code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.FullName">
            <summary>
            Gets the full name of the player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.Nickname">
            <summary>
            Gets the nickname of the player
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile"/> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.PlayerProfileCacheItem"/> representing cached player profile info</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.ICollection`1"/> specifying supported languages of the constructed instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the player represented by the current instance in the specified language or a null reference
            </summary>
            <param name="culture">The culture</param>
            <returns>The nationality of the player represented by the current instance in  the language specified by <c>culture</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.PlayerProfile.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo">
            <summary>
            Providing information about a specific product
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._isAutoTraded">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsAutoTraded"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._isInHostedStatistics">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInHostedStatistics"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._isInLiveCenterSoccer">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveCenterSoccer"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._isInLiveMatchTracker">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveMatchTracker"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._isInLiveScore">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveScore"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._links">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.Links"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo._channels">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.Channels"/> property backing field
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsAutoTraded">
            <summary>
            Gets a value indicating whether the sport event is auto traded
            </summary>
            <value><c>true</c> if this instance is automatic traded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInHostedStatistics">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in hosted solutions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveCenterSoccer">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveCenterSoccer solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveMatchTracker">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveMatchTracker solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.IsInLiveScore">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveScore solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.Links">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1" /> representing links to the product represented by current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.Channels">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1" /> representing streaming channel associated with product
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProductInfoDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo"/> class
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ProductInfoDto"/> data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfo" /> representing the current item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfo.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink">
            <summary>
            Represents a product info link
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink._reference">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.Reference"/> property backing field.
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink._name">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.Name"/> property backing field.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink"/> class.
            </summary>
            <param name="reference">the reference to the product info represented by the current instance</param>
            <param name="name">the name of the product link represented by the current instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfoLink)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableProductInfoLink"/> representing the current item</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.Reference">
            <summary>
            Gets the reference to the product info represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.Name">
            <summary>
            Gets the name of the product link represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ProductInfoLink.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RaceDriverProfile">
            <summary>
            Represents a race drive profile
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RaceDriverProfile.RaceDriverId">
            <summary>
            Gets the race driver id
            </summary>
            <value>The race driver id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RaceDriverProfile.RaceTeamId">
            <summary>
            Gets the race team id
            </summary>
            <value>The race team id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RaceDriverProfile.Car">
            <summary>
            Gets the car info
            </summary>
            <value>The car info</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee">
            <summary>
            Represents a sport event referee
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee.Id">
            <summary>
            Gets a value used to uniquely identify the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee.Name">
            <summary>
            Gets the name of the referee represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee.Nationalities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing referee nationality in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee"/> class.
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RefereeCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Referee.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the referee nationality in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language.</param>
            <returns>The referee nationality in the specified language.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference">
            <summary>
            A implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReference" /> used to return results to user
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.BetradarId">
            <summary>
            Gets the Betradar id for this instance if provided amount reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.BetfairId">
            <summary>
            Gets the Betfair id for this instance if provided amount reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.RotationNumber">
            <summary>
            Gets the rotation number if provided among reference ids
            </summary>
            <value>If exists among reference ids, result is greater then 0</value>
            <remarks>This id only exists for US leagues</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.References">
            <summary>
            Gets all the reference ids associated with this instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.AamsId">
            <summary>
            Returns the AAMS id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The AAMS id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.LugasId">
            <summary>
            Returns the Lugas id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The Lugas id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference"/> class
            </summary>
            <param name="referenceCacheItem">The reference cache item</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Reference.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RestMessage">
            <summary>
            Represents a base class for classes representing messages received from the REST API
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RestMessage.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RestMessage"/> class
            </summary>
            <param name="generatedAt">a <see cref="T:System.DateTime" /> instance specifying when the message represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage" /> was generated</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.RestMessage.GeneratedAt">
            <summary>
            Gets a <see cref="T:System.DateTime" /> instance specifying when the message represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage" />
            was generated, or a null reference if time of generation is not defined
            </summary>
            <value>The generated at.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange">
            <summary>
            Provides information about result changes
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange"/> class
            </summary>
            <param name="dto">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ResultChangeDto"/> used to create new instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ResultChange.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round">
            <summary>
            Provides basic tournament round information
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.Type">
            <summary>
            Gets the type of the round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.Number">
            <summary>
            Gets a value specifying the round number or a null reference if round number is not defined
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.Group">
            <summary>
            Gets the group associated with the current round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.Names">
            <summary>
            Gets the name of the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" />
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.PhaseOrGroupLongNames">
            <summary>
            Gets the phase or group long name of the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> per language
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.GroupId">
            <summary>
            Gets the id of the group associated with the current round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.OtherMatchId">
            <summary>
            Gets the id of the other match
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.CupRoundMatches">
            <summary>
            Gets a value specifying the number of matches in the current cup round or a null reference
            if number of matches is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.CupRoundMatchNumber">
            <summary>
            Gets a value specifying the number of the match in the current cup round or a null reference
            if match number is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.BetradarId">
            <summary>
            Gets the betradar identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.Phase">
            <summary>
            Gets the phase of the associated round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.BetradarName">
            <summary>
            A betradar name
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round"/> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.RoundCacheItem"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific language
            </summary>
            <param name="culture">The cultures</param>
            <returns>Return the Name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.GetPhaseOrGroupLongName(System.Globalization.CultureInfo)">
            <summary>
            Gets the phase or group long name for specific language
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the phase or group long name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Round.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.OldTime">
            <summary>
            Gets the old time
            </summary>
            <value>The old time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.NewTime">
            <summary>
            Gets the new time
            </summary>
            <value>The new time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.ChangedAt">
            <summary>
            Gets the changed at
            </summary>
            <value>The changed at</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto"/> class
            </summary>
            <param name="dto">The time change</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableScheduledStartTimeChange)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.ScheduledStartTimeChangeDto"/> class
            </summary>
            <param name="exportable">The exportable</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.ScheduledStartTimeChange.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season">
            <summary>
            Represents a season
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.ExecutionLogPrivate">
            <summary>
            This <see cref="T:Microsoft.Extensions.Logging.ILogger"/> should not be used since it is also exposed by the base class
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season._sportDataCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic information about the tournament(sport, category, names)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season._sportEventCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to retrieve tournament schedule
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season._sportEntityFactory">
            <summary>
            An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the tournament associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport associated with the current instance</param>
            <param name="sportEntityFactory">An instance of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instances</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to retrieve tournament schedule</param>
            <param name="sportDataCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic tournament information</param>
            <param name="cultures">A list of all languages for this instance</param>
            <param name="exceptionStrategy">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> indicating how to handle potential exceptions thrown during execution</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetSportAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> representing the sport to which the tournament belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetTournamentCoverage">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance
            </summary>
            <returns>Task&lt;ITournamentCoverage&gt;.</returns>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetCompetitorsReferencesAsync">
            <summary>
            Asynchronously get the list of available team <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing an async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetSeasonCoverageAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage"/> representing the season coverage
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetGroupsAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetCurrentRoundAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying groups of tournament associated with the current instance
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetYearAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetTournamentInfoAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo"/> representing the tournament info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetCompetitorsAsync">
            <summary>
            Asynchronously gets the list of competitors
            </summary>
            <value>The list of competitors</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Season.GetScheduleAsync">
            <summary>
            Gets the list of all events that belongs to the tournament schedule
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage">
            <summary>
            Provides information about season coverage
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.MaxCoverageLevel">
            <summary>
            Gets the string representation of the maximum coverage available for the season associated with the current instance
            </summary>
            <value>The maximum coverage level.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.MinCoverageLevel">
            <summary>
            Gets the name of the minimum coverage guaranteed for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.MaxCovered">
            <summary>
            Gets the max covered value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.Played">
            <summary>
            Gets the played value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.Scheduled">
            <summary>
            Gets the scheduled value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.SeasonId">
            <summary>
            Gets the identifier of the season.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonCoverage"/> class.
            </summary>
            <param name="cacheItem">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCoverageCacheItem"/> instance containing information about tournament coverage</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo">
            <summary>
            Class SeasonInfo
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo.TournamentId">
            <summary>
            Gets the associated tournament identifier.
            </summary>
            <value>The associated tournament identifier.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SeasonCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SeasonInfo"/> class
            </summary>
            <param name="seasonCacheItem"></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport">
            <summary>
            Represents a sport
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportSummary" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.Categories">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing categories
            which belong to the sport represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String},System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.ICategory})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport"/> class
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport represented by the current instance</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated sport names</param>
            <param name="categories"> a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing categories
            which belong to the sport represented by the current instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Sport.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent">
            <summary>
            Represents all sport events(races, matches, tournaments, ....)
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.EntityPrinter" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.SportId">
            <summary>
            The sport identifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.ExecutionLog">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.ExceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the instance will handle potential exceptions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.Cultures">
            <summary>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> specifying languages the current instance supports
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.SportEventCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance containing <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Microsoft.Extensions.Logging.ILogger,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport current instance belong to</param>
            <param name="executionLog">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging</param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> instance containing <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventCacheItem"/></param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying languages the current instance supports</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the instance will handle potential exceptions</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetFetchErrorMessage(System.String)">
            <summary>
            Constructs and returns an error message for errors which occur while retrieving cached values
            </summary>
            <param name="propertyName">The name of the property being retrieved</param>
            <returns>An error message for errors which occur while retrieving cached values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetNameAsync(System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetSportIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance
            </summary>
            <returns>Returns the sport id</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetScheduledTimeAsync">
            <summary>
            When overridden in derived class, it asynchronously gets a <see cref="T:System.DateTime" /> instance specifying for when the sport event associated with the current instance is
            scheduled or a null reference if the value is not known
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetScheduledEndTimeAsync">
            <summary>
            When overridden in derived class, it asynchronously gets a <see cref="T:System.DateTime" /> instance specifying for when the sport event associated with the current instance is
            scheduled to end or a null reference if the value is not known
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetStartTimeTbdAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the start time to be determined is set for the associated sport event.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the start time to be determined is set for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEvent.GetReplacedByAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions">
            <summary>
            Provides information about sport event conditions
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.Attendance">
            <summary>
            Gets a <see cref="T:System.String" /> specifying the attendance of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.EventMode">
            <summary>
            Gets the event mode property
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.Referee">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee" /> instance representing the referee presiding over the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.WeatherInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo" /> instance representing the expected weather on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.Pitchers">
            <summary>
            Gets the pitchers
            </summary>
            <value>The pitchers</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem,System.Collections.Generic.ICollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions"/> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.SportEventConditionsCacheItem"/> used to create new instance</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.ICollection`1"/> specifying the supported languages of the constructed instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventConditions.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus">
            <summary>
            Represents a status of a sport event
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus"/> class
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem"/> containing information about sport event status, which will be used to initialize a new instance</param>
            <param name="matchStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache"/> used to retrieve event status</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus" /> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.IsReported">
            <summary>
            Gets a value indicating whether a data journalist is present in the associated sport event, or a null reference if the information is not available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing additional event status values
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.GetMatchStatusAsync">
            <summary>
            Get match status as an asynchronous operation
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportEventStatus.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportSummary">
            <summary>
            A implementation of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/>
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.SportSummary.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.Globalization.CultureInfo,System.String})">
            <summary>
            Creates new instance of sport summary
            </summary>
            <param name="id">a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport represented by the constructed instance</param>
            <param name="names">a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing translated sport names</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StageStatus">
            <summary>
            Class StageStatus
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.CompetitionStatus" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStageStatus" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StageStatus.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.SportEventStatusCacheItem,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ILocalizedNamedValueCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.MatchStatus"/> class
            </summary>
            <param name="ci">The cache item</param>
            <param name="matchStatusesCache">The match statuses cache</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StageStatus.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Get match status as an asynchronous operation
            </summary>
            <param name="culture">The culture used to fetch status id and description</param>
            <returns>ILocalizedNamedValue</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel">
            <summary>
            Represents a streaming channel
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel._id">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.Id"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel._name">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.Name"/> property backing field
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel"/> class.
            </summary>
            <param name="id">a value uniquely identifying the current streaming channel</param>
            <param name="name">the name of the streaming channel represented by the current instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStreamingChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel"/> class.
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableStreamingChannel"/> representing the current item</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.Id">
            <summary>
            Gets a value uniquely identifying the current streaming channel
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.Name">
            <summary>
            Gets the name of the streaming channel represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.StreamingChannel.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor">
            <summary>
            Represents a competing team
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Competitor" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor"/> class
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/></param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to retrieve <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer"/></param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> used in sport entity factory</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> used for fetching profile data</param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor.Qualifier">
            <summary>
            Gets the qualifier value
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamCompetitor.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TeamStatistics.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament">
            <summary>
            Represents a sport tournament
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.ExecutionLogPrivate">
            <summary>
            This <see cref="T:Microsoft.Extensions.Logging.ILogger"/> should not be used since it is also exposed by the base class
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament._sportDataCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic information about the tournament(sport, category, names)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.#ctor(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament"/> class
            </summary>
            <param name="id">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the tournament associated with the current instance</param>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the sport associated with the current instance</param>
            <param name="sportEntityFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory"/> used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></param>
            <param name="sportEventCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventCache"/> used to retrieve tournament schedule</param>
            <param name="sportDataCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportDataCache"/> instance used to retrieve basic tournament information</param>
            <param name="cultures">A list of all languages for this instance</param>
            <param name="exceptionStrategy">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> indicating how to handle potential exceptions thrown during execution</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetSportAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> representing the sport to which the tournament belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetTournamentCoverage">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance
            </summary>
            <returns>Task&lt;ITournamentCoverage&gt;.</returns>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" /> instance representing the tournament coverage associated with the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetCategoryAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> representing the category to which the tournament belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetCurrentSeasonAsync">
            <summary>
            Get current season as an asynchronous operation
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetSeasonsAsync">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason" /> associated with this tournament
            </summary>
            <returns>A list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason" /> associated with this tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetScheduleAsync">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetCompetitorsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <param name="culture">The culture in which we want to return competitor data</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.GetCompetitorIdsAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing competitors in the sport event associated with the current instance
            </summary>
            <param name="culture">Optional culture in which we want to fetch competitor data (otherwise default is used)</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Tournament.EnsureSummaryIsFetchedForLanguages(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Api.Internal.RequestOptions)">
            <summary>
            Asynchronously retrieves and populates the entity's data from the API.
            </summary>
            <param name="languages">Languages to fetch the summary for.</param>
            <param name="requestOptions">Options for the request.</param>
            <returns>A task that represents the asynchronous preload operation.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage">
            <summary>
            Class TournamentCoverage
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage.LiveCoverage">
            <summary>
            Gets a value indicating whether live coverage is available
            </summary>
            <value><c>true</c> if [live coverage]; otherwise, <c>false</c></value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage"/> class
            </summary>
            <param name="isLiveCoverage">if set to <c>true</c> [is live coverage]</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentCoverageCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentCoverage"/> class
            </summary>
            <param name="tournamentCoverageCacheItem">The tournament coverage ci</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo">
            <summary>
            Class TournamentInfo
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo.Category">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary" /> representing the category associated with the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary" /> representing the category associated with the current instance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo.CurrentSeason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo" /> which contains data for the season in which the current tournament is happening
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo" /> which contains data for the season in which the current tournament is happening</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TournamentInfoBasicCacheItem,Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary,Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo"/> class.
            </summary>
            <param name="cacheItem">The cache item</param>
            <param name="categorySummary">The category summary</param>
            <param name="currentSeasonInfo">The full current season info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TournamentInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel">
            <summary>
            Represents a TV channel
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel._name">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.Name"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel._startTime">
            <summary>
            The <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.StartTime"/> property backing field
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel._streamUrl">
            <summary>
            The stream URL
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel"/> class
            </summary>
            <param name="name">a name of the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel" /> instance</param>
            <param name="startTime">a <see cref="T:System.DateTime" /> specifying when the coverage on the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel" /> starts</param>
            <param name="streamUrl">The stream url</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel"/> class
            </summary>
            <param name="exportable">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableTvChannel"/> instance specifying the current item</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.Name">
            <summary>
            Gets a name of the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.StartTime">
            <summary>
            Gets a <see cref="T:System.DateTime" /> specifying when the coverage on the channel represented by the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel" /> starts, or a null reference if the time is not known.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.StreamUrl">
            <summary>
            Gets the stream url of the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String"/> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String"/> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String"/> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.TvChannel.ExportAsync">
            <summary>
            Asynchronous export item's properties
            </summary>
            <returns>An <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Caching.Exportable.ExportableBase"/> instance containing all relevant properties</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue">
            <summary>
            Represents a sport event venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Capacity">
            <summary>
            Gets the capacity of the venue associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance, or a null
            reference if the capacity is not specified
            </summary>
            <value>The capacity.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Coordinates">
            <summary>
            Gets a map coordinates specifying the exact location of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing venue's names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Countries">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing venue's country names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Cities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> containing venue's city names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.CountryCode">
            <summary>
            Gets a country code of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
            <value>The country code.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.State">
            <summary>
            Gets a state of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.Courses">
            <summary>
            Gets the list of courses
            </summary>
            <value>The list of courses</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue"/> class.
            </summary>
            <param name="ci">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.VenueCacheItem"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.PrintJ">
            <summary>
            Prints the JSON representation of the instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific locale
            </summary>
            <param name="culture">The culture.</param>
            <returns>Return the name if exists, or null.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.GetCity(System.Globalization.CultureInfo)">
            <summary>
            Gets the city name for specific locale
            </summary>
            <param name="culture">The culture.</param>
            <returns>Return the city name if exists, or null.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.Venue.GetCountry(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific locale
            </summary>
            <param name="culture">The culture.</param>
            <returns>Return the Country if exists, or null.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo">
            <summary>
            Provides information about weather conditions
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo"/> class
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.WeatherInfoCacheItem"/> used to create new instance</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.Pitch">
            <summary>
            Gets the pitch value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.Temperature">
            <summary>
            Gets the temperature in degrees Celsius or a null reference if the expected temperature is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.WeatherConditions">
            <summary>
            Gets a <see cref="T:System.String" /> specifying the weather conditions (cloudy, sunny, ...)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.Wind">
            <summary>
            Gets a <see cref="T:System.String" /> specifying the wind conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.WindAdvantage">
            <summary>
            Gets the wind advantage value
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.PrintI">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing the id of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing the id of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.PrintC">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing compacted representation of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing compacted representation of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.PrintF">
            <summary>
            Constructs and return a <see cref="T:System.String" /> containing details of the current instance
            </summary>
            <returns>A <see cref="T:System.String" /> containing details of the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EntitiesImpl.WeatherInfo.PrintJ">
            <summary>
            Constructs and returns a <see cref="T:System.String" /> containing a JSON representation of the current instance
            </summary>
            <returns>a <see cref="T:System.String" /> containing a JSON representation of the current instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType">
            <summary>
            The enumeration of possible cache item types
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Category">
            <summary>
            The category
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Competitor">
            <summary>
            The competitor
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Lottery">
            <summary>
            The lottery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.LotteryDraw">
            <summary>
            The lottery draw
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.MarketDescription">
            <summary>
            The market description
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Player">
            <summary>
            The player
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Sport">
            <summary>
            The sport
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.SportEvent">
            <summary>
            The sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.SportEventStatus">
            <summary>
            The sport event status
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.Tournament">
            <summary>
            The tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.CacheItemType.VariantDescription">
            <summary>
            The variant description
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType">
            <summary>
            The enumeration of types of data-transfer-object obtained via REST requests
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.BookingStatus">
            <summary>
            The booking status
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Category">
            <summary>
            The category
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Competitor">
            <summary>
            The competitor
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.CompetitorProfile">
            <summary>
            The competitor profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Fixture">
            <summary>
            The fixture
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Lottery">
            <summary>
            The lottery
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.LotteryDraw">
            <summary>
            The lottery draw
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.LotteryList">
            <summary>
            The lottery list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.MarketDescription">
            <summary>
            The market description (used for variant market description provider)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.MarketDescriptionList">
            <summary>
            The market descriptions list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.MatchSummary">
            <summary>
            The match summary
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.MatchTimeline">
            <summary>
            The match timeline
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.PlayerProfile">
            <summary>
            The player profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.RaceSummary">
            <summary>
            The race summary
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Sport">
            <summary>
            The sport
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SportList">
            <summary>
            The sport list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SportEventStatus">
            <summary>
            The sport event status
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SportEventSummary">
            <summary>
            The sport event summary
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SportEventSummaryList">
            <summary>
            The sport event summary list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Tournament">
            <summary>
            The tournament
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.TournamentInfo">
            <summary>
            The tournament information
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.TournamentSeasons">
            <summary>
            The tournament seasons
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.VariantDescription">
            <summary>
            The variant description
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.VariantDescriptionList">
            <summary>
            The variant description list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SportCategories">
            <summary>
            The sport categories
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.SimpleTeamProfile">
            <summary>
            The simple team profile
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.AvailableSelections">
            <summary>
            The custom bet available selections for the event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.TournamentInfoList">
            <summary>
            The tournament list
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.PeriodSummary">
            <summary>
            The period summary
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Enums.DtoType.Calculation">
            <summary>
            The custom bet calculation for the event
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EventArguments.TournamentReceivedEventArgs">
            <summary>
            An event argument used by events raised when a message from the feed is received
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EventArguments.TournamentReceivedEventArgs.Tournament">
            <summary>
            Gets a <see cref="T:System.String"/> representing deserialized message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EventArguments.TournamentReceivedEventArgs.Culture">
            <summary>
            Culture of the tournament data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EventArguments.TournamentReceivedEventArgs.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.EventArguments.TournamentReceivedEventArgs"/> class
            </summary>
            <param name="tournament">a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentDto"/> representing the received tournament</param>
            <param name="culture">Culture of the tournament data</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.FeedMapperHelper">
            <summary>
            Defines static methods used when parsing feed messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.FeedMapperHelper.CreateDictionary(System.String[],System.String[])">
            <summary>
            Creates and returns a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> by splitting values provided by the <c>valueParts</c>
            </summary>
            <param name="values">The values to be split</param>
            <param name="separators">The separators to be used for splitting </param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> obtained by splitting the provided values</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.FeedMapperHelper.GetValidForAttributes(System.String)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> from a <see cref="T:System.String"/> containing string representation of validity attributes
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of the validity attributes</param>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing validity attributes</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.FeedMapperHelper.GetSpecifiers(System.String)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> from a <see cref="T:System.String"/> containing market specifiers
            </summary>
            <param name="specifiers">A <see cref="T:System.String"/> containing market specifiers</param>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing market specifiers</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityFilteredProvider">
            <summary>
            Defines a contract implemented by classes used to provide data probability calculations
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityFilteredProvider.GetDataAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto"/> instance
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the probability calculation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityProvider">
            <summary>
            Defines a contract implemented by classes used to provide data probability calculations
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ICalculateProbabilityProvider.GetDataAsync(System.Collections.Generic.IEnumerable{Sportradar.OddsFeed.SDK.Entities.Rest.CustomBet.ISelection})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto"/> instance
            </summary>
            <param name="selections">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing selections for which the probability should be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the probability calculation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator">
            <summary>
            Defines an interface which validates a market mapping to ensure it can be used to map a specific market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator.Validate(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Validate the provided specifiers against current instance.
            </summary>
            <param name="specifiers">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <returns>True if the mapping associated with the current instance can be used to map associated market; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Validation cannot be performed against the provided specifiers</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory">
            <summary>
            A factory used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory.Build(System.String)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> from the provided string
            </summary>
            <param name="value">A value defining the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> to be constructed.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> build from the provided string.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription">
            <summary>
            Defines a contract implemented by classes representing variant description
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription.Id">
            <summary>
            Gets the id of the market described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription.Outcomes">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> describing the outcomes of the market
            described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.IVariantDescription.Mappings">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the mappings of the market
            described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketAttribute.Name">
            <summary>
            Gets the attribute name.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketAttribute.Description">
            <summary>
            Gets the attribute description.
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketAttribute.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketAttributeCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketAttribute"/> class.
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketAttributeCacheItem"/> containing attribute data.</param>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping._validator">
            <summary>
            The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> used to determine whether the current mapping can map specific market
            or a null reference if no restrictions apply to this mapping
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.ProducerIds">
            <summary>
            Gets the ids of the producers to which the associated market / outright belongs to
            </summary>
            <value>The producer ids</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.SportId">
            <summary>
            Gets the id of the sport to which the associated market / outright belongs to
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.MarketId">
            <summary>
            Gets the id of the market associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.MarketTypeId">
            <summary>
            Gets the market type identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.MarketSubTypeId">
            <summary>
            Gets the market sub type identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.SovTemplate">
            <summary>
            Gets the special odds value template value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.ValidFor">
            <summary>
            Gets the valid_for value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.OutcomeMappings">
            <summary>
            Gets the outcome mappings
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping"/> class
            </summary>
            <param name="cacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingCacheItem"/> containing mapping info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.CanMap(System.Int32,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Determines whether the current mapping can map market with provided specifiers associated with provided producer and sport
            </summary>
            <param name="producerId">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer" /> associated with the market</param>
            <param name="sportId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn" /> specifying the sport associated with the market</param>
            <param name="specifiers">The market specifiers</param>
            <returns>True if the current mapping can be used to map the specified market. False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The provided specifiers are not valid</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.MarketMapping.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping.OutcomeId">
            <summary>
            Gets the id of the outcome
            </summary>
            <value>The outcome identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping.ProducerOutcomeId">
            <summary>
            Gets the producer outcome identifier
            </summary>
            <value>The producer outcome identifier</value>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping._producerOutcomeNames">
            <summary>
            The producer outcome names
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping.GetProducerOutcomeName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the producer outcome in specified language
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping.MarketId">
            <summary>
            Gets the mapped market identifier
            </summary>
            <value>The mapped market identifier</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMappingCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.OutcomeMapping"/> class
            </summary>
            <param name="cacheItem">The cache item</param>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.Specifier.Name">
            <summary>
            Gets the name of the specifier represented by the current instance
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.Specifier.Type">
            <summary>
            Gets the type name of the specifier represented by the current instance
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.Specifier.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketSpecifierCacheItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.Specifier"/> class.
            </summary>
            <param name="cacheItem">The cache item.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.InternalEntities.Specifier.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory">
            <summary>
            Defines a contract implemented by classes used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildSportsAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> representing all sports supported by the feed
            </summary>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildSportAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport"/> representing the sport specified by its id
            </summary>
            <param name="sportId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the sport which will be represented by the constructed instance</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildPlayerAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer"/> representing the player or competitor profile specified by its id
            </summary>
            <param name="playerId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the player or competitor which will be represented by the constructed instance</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildPlayersAsync(System.Collections.Generic.IReadOnlyCollection{Sportradar.OddsFeed.SDK.Common.Urn},System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,System.Int32})">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer"/> representing the player and/or competitor profiles specified by ids
            </summary>
            <param name="playersIds">A list of <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the ids of the players or competitors which will be represented by the constructed instances</param>
            <param name="cultures">A list of all supported languages</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <param name="playersJerseyNumbers">The list of player id and associated jersey numbers</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildSportEvent``1(Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived class based on specified id
            </summary>
            <typeparam name="T">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></typeparam>
            <param name="eventId">The identifier</param>
            <param name="sportId">The sport identifier</param>
            <param name="cultures">The cultures used for returned instance</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> derived instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCompetitor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorCacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCompetitor(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> id used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="competitorsReferences">The dictionary of competitor references (associated with specific match)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCompetitor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorCacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="competitorsReferences">The dictionary of competitor references (associated with specific match)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildTeamCompetitor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> class
            </summary>
            <param name="teamCompetitorCacheItem">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Collections.Generic.IDictionary{Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.ReferenceIdCacheItem},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> class
            </summary>
            <param name="competitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A cultures of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.CompetitorCacheItem"/></param>
            <param name="competitorsReferences">The dictionary of competitor references (associated with specific match)</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildTeamCompetitorAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.ICompetitionCacheItem,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> class
            </summary>
            <param name="teamCompetitorId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.CI.TeamCompetitorCacheItem"/></param>
            <param name="rootCompetitionCacheItem">A root <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Caching.Events.CompetitionCacheItem"/> to which this competitor belongs to</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> enum member specifying how the build instance will handle potential exceptions</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ISportEntityFactory.BuildCategoryAsync(Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Builds the instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> class
            </summary>
            <param name="categoryId">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> used to create new instance</param>
            <param name="cultures">A culture of the current instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/></param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportAvailableTournamentProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve list of sport available tournament
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportAvailableTournamentProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportAvailableTournamentProvider"/> class
            </summary>
            <param name="baseUriFormat">An address format used to retrieve list of sport events</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportEventsProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve list of sport events
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportEventsProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.ListSportEventsProvider"/> class
            </summary>
            <param name="baseUriFormat">An address format used to retrieve list of sport events</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType"/> containing sport event data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType"/> containing available selections</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto" />
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.AvailableSelectionsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.AvailableSelectionsDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details"/> instance containing bookmaker details data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper._serverTimeDifference">
            <summary>
            The server time difference
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper"/> class
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details"/> instance containing bookmaker details data</param>
            <param name="serverTimeDifference">The server time difference</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapperFactory">
            <summary>
            Class BookmakerDetailsMapperFactory
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details)">
            <summary>
            Creates and returns an instance of Mapper for mapping <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details" />
            </summary>
            <param name="data">A input instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.BookmakerDetailsMapper" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType"/> containing sport event data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType"/> containing available selections</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto" />
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationFilteredMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.FilteredCalculationDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType"/> containing sport event data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType"/> containing available selections</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto" />
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CalculationMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CustomBet.CalculationDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> implementation used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> instance containing competitor profile data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> instance containing competitor profile data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> instance </returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.CompetitorProfileMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint" /> instance containing fixture data</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.CompetitorProfileDto"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule for a day
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapper"/> class.
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule for a day</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapperFactory">
            <summary>
            Creates mapper for schedule for a specific date
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.DateScheduleMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for schedule for a date
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint"/> instance containing fixture changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint"/> instance containing fixture changes</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapperFactory">
            <summary>
            Creates mapper for fixture changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureChangesMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for fixture changes
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> implementation used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint"/> instance containing fixture data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint"/> instance containing fixture data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instance </returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.FixtureMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint" /> instance containing fixture data</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.FixtureDto"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1">
            <summary>
            Defines a contract implemented by classes capable of map data to instance of type specified by out parameter
            </summary>
            <typeparam name="T">Specifies the target type of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/></typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1.Map">
            <summary>
            Maps it's data to instance of <typeparamref name="T"/>
            </summary>
            <returns>The created <typeparamref name="T"/> instance</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The mapping of the entity failed</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2">
            <summary>
            Defines a contract implemented by classes used to provide mappers used to map instances of one
            type to instances of another type
            </summary>
            <typeparam name="TIn">Specifies the type of data with which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances work with</typeparam>
            <typeparam name="TOut">Specifies the type returned by created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances </typeparam>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2.CreateMapper(`0)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A input instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint"/> instance containing schedule info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint"/> instance containing schedule info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapperFactory">
            <summary>
            Creates mapper for sport available tournament list
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportAvailableTournamentMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for schedule
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapperFactory">
            <summary>
            Creates mapper for sport event list
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ListSportEventsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for schedule
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapper._drawFixture">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture"/> containing rest data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapper"/> class
            </summary>
            <param name="drawFixture">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures"/> containing lottery draw data</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawFixtureMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.DrawDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapper._drawSummary">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary"/> containing rest data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapper"/> class
            </summary>
            <param name="drawSummary">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary"/> containing lottery draw data</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.DrawSummaryMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries"/> containing rest data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.lotteries)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapper"/> class
            </summary>
            <param name="lotteries">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery"/> containing list of lotteries</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteriesMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.lotteries)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.Lottery.LotteryDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapper._lotterySchedule">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule"/> containing rest data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapper"/> class
            </summary>
            <param name="lotterySchedule">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery"/> containing lottery schedule data (single lottery with schedule)</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.Lottery.LotteryScheduleMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapperFactory">
            <summary>
            Class MarketDescriptionMapperFactory
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> instance</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapper"/> class
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapper.Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Mapping#ISingleTypeMapper{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#EntityList{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#MarketDescriptionDto}}#Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>The created<see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapperFactory">
            <summary>
            Class MarketDescriptionsMapperFactory
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions)">
            <summary>
            Creates and returns an instance of Mapper for mapping <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions"/>
            </summary>
            <param name="data">A input instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapper"/> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapper" /> instance</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionsMapper"/> class
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MarketDescriptionMapper.Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Mapping#ISingleTypeMapper{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#MarketDescriptionDto}#Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> instance
            </summary>
            <returns>The created<see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> containing sport event data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> containing sport event data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" />
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchSummaryMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint"/> instance containing match timeline info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint"/> instance containing match timeline info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchTimelineDto"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapperFactory">
            <summary>
            Creates mapper for match timeline
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.MatchTimelineMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for match timeline
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> implementation used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> instance containing data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> instance containing fixture data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> instance </returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PeriodSummaryMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint" /> instance containing fixture data</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PeriodSummaryDto"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> implementation used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint"/> instance containing player profile data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint"/> instance containing player profile data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> instance </returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.PlayerProfileMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint" /> instance containing fixture data</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.PlayerProfileDto"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> implementation used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instances
            from <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instance containing data about available producers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.producers)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper"/> class
            </summary>
            <param name="data">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instance containing data about available producers.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/>
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapper.Create(Sportradar.OddsFeed.SDK.Messages.Rest.producers)">
            <summary>
            Constructs and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instance containing tournaments data</param>
            <returns>a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ProducersMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.producers)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint"/> instance containing result changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint"/> instance containing result changes</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapperFactory">
            <summary>
            Creates mapper for result changes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ResultChangesMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for result changes
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> implementation used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> instance containing simple team profile data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> instance containing simple team profile data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> instance </returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SimpleTeamProfileMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint" /> instance containing profile data</param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SimpleTeamProfileDto"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint"/> instance containing sport categories
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint"/> instance containing sport categories</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportCategoriesDto"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapperFactory">
            <summary>
            Creates mapper for sport categories
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportCategoriesMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for sport categories
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint" /> instances to list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule for a day
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> instance containing schedule information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint"/> to instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/>
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventsScheduleMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint" /> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MatchDto" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper._matchSummaryData">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> containing match data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper._stageSummaryData">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint"/> containing stage data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper._tournamentInfoData">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint"/> containing tournament data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper"/> class.
            </summary>
            <param name="matchSummaryData">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint"/> containing match data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper"/> class.
            </summary>
            <param name="stageSummaryData">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint"/> containing stage data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapper"/> class.
            </summary>
            <param name="tournamentInfoData">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint"/> containing tournament data</param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportEventSummaryMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> implementation used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instances
            from <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instance containing data about available sports
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper"/> class.
            </summary>
            <param name="data">The <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instance containing data about available sports.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/>
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapper.Create(Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint)">
            <summary>
            Constructs and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instance containing tournaments data</param>
            <returns>a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.SportsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint"/> instance containing detailed tournament info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapper"/> class
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint"/> instance containing tournament detail information</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapper.Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Mapping#ISingleTypeMapper{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#TournamentInfoDto}#Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/>
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentInfoDto"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentInfoMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint"/> instance containing tournament schedule info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapper"/> class.
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint"/> instance containing tournament schedule info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapperFactory">
            <summary>
            Creates mapper for race tournament schedule
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentRaceScheduleMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for tournament schedule
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule"/> instance containing tournament schedule info
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapper"/> class.
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule"/> instance containing tournament schedule info</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapperFactory">
            <summary>
            Creates mapper for tournament schedule
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentScheduleMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for tournament schedule
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapper">
            <summary>
            Maps <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons"/> instances to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto" /> instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons"/> instance containing tournament seasons
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapper"/> class
            </summary>
            <param name="data">>A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons"/> instance containing tournament seasons</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapper.Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto"/> instance
            </summary>
            <returns>Constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.TournamentSeasonsDto"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapperFactory">
            <summary>
            Creates mapper for tournament seasons
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentSeasonsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance for tournament seasons
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> implementation used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1" /> instances
            from <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper.EqualityComparer">
            <summary>
            A <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> used to compare different <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instance containing tournaments data
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper"/> class.
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instance containing tournaments data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper.Map">
            <summary>
            Maps it's data to instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/>
            </summary>
            <returns>The created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapper.Create(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint)">
            <summary>
            Constructs and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instance containing tournaments data</param>
            <returns>a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instances
            to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapperFactory">
            <summary>
            A factory used to create <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1"/> instances used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.TournamentsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint)">
            <summary>
            Creates and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance used to map <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint"/> instances to
            <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instances
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint" /> instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> will map</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /> instance</returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper._data">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper.#ctor(Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper"/> class
            </summary>
            <param name="data">A <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions"/> instance containing data used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper.Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Mapping#ISingleTypeMapper{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#EntityList{Sportradar#OddsFeed#SDK#Entities#Rest#Internal#Dto#VariantDescriptionDto}}#Map">
            <summary>
            Maps it's data to <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance
            </summary>
            <returns>The created<see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList`1"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapperFactory">
            <summary>
            Class VariantDescriptionsMapperFactory
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapperFactory.CreateMapper(Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions)">
            <summary>
            Creates and returns an instance of Mapper for mapping <see cref="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions"/>
            </summary>
            <param name="data">A input instance which the created <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper"/> will map</param>
            <returns>New <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.VariantDescriptionsMapper" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MappingValidatorFactory">
            <summary>
            A factory used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> from their string definition
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MappingValidatorFactory.DecimalPattern">
            <summary>
            A regex pattern used to match specifiers requiring specific decimal value (e.g. x.5)
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MappingValidatorFactory.BuildSingle(System.String,System.String)">
            <summary>
            Builds a single <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/>
            </summary>
            <param name="name">The name of the specifier</param>
            <param name="value">The value defining required value(s) of the specifier</param>
            <returns>IMappingValidator</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MappingValidatorFactory.Build(System.String)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> from the provided string
            </summary>
            <param name="value">A value defining the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> to be constructed</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> build from the provided string</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.CardinalNameExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation supporting cardinal expressions (i.e. {period_nr})
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.CardinalNameExpression._operand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.CardinalNameExpression.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.CardinalNameExpression"/> class
            </summary>
            <param name="operand">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.CardinalNameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Market specifiers do not contain required specifier</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation supporting '$' (i.e. {$competitor1} ) name expressions
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression._propertyName">
            <summary>
            The operand extracted from the provided expression
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression._sportEvent">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> related to the @event associated with the current instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression.SupportedOperands">
            <summary>
            Lists the supported operand names
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression.#ctor(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression"/> class
            </summary>
            <param name="propertyName">The name <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> property</param>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> related to the entity associated with the current instance.</param>
            <param name="profileCache">A profile cache to get the competitor name</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.EntityNameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">The culture information.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating name expression</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> implementation which can handle simple expression based operators
            i.e. specifier +/- static value
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SpecifierBasedOperator" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand._specifiers">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand._operandString">
            <summary>
            The <see cref="T:System.String"/> representation of the operand - i.e. name of the specifier
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand._staticValue">
            <summary>
            A <see cref="T:System.Int32"/> static value of the expression
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand._specifierIsFirst">
            <summary>
            Indicates if the specifier is first in the operandString
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand._operation">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation"/> specifying the operation between static value and the value of the specifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand"/> class.
            </summary>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers</param>
            <param name="operandString">The <see cref="T:System.String"/> representation of the operand - i.e. name of the specifier</param>
            <param name="operation">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation"/> specifying the operation</param>
            <param name="staticValue">The value to be added to the value of the specifier</param>
            <param name="specifierIsFirst">Indicates if the specifier is first is operandString</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand.GetIntValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Int32" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the value of the operand as a <see cref="T:System.Int32" /></returns>
            <exception cref="T:System.InvalidOperationException">
            Static int value was not provided to the constructor
            or
            </exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand.GetDecimalValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Decimal" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the value of the operand as a <see cref="T:System.Int32" /></returns>
            <exception cref="T:System.InvalidOperationException">
            Static decimal value was not provided to the constructor
            or
            </exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand.GetStringValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.String" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the integer value of the operand as a <see cref="T:System.String" /></returns>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.FlexMarketHelper.SpecifierName">
            <summary>
            The name of the specifier required by the flex score markets
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.FlexMarketHelper.GetSpecifier(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Gets the value of the specified specifier
            </summary>
            <param name="specifierName">Name of the specifier to parse</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers</param>
            <exception cref="T:System.InvalidOperationException">The specified specifier does not exist</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.FlexMarketHelper.GetName(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Gets the name of the flex score market outcome
            </summary>
            <param name="nameDescription">The descriptor of the outcome name</param>
            <param name="specifiers">The market specifiers</param>
            <returns>The name of the outcome</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">The generation of the name failed due to missing specifier or due to wrong format of the name descriptor </exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression">
            <summary>
            Defines a contract implemented by classes used to generate market / selection names from their name formats / patterns
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating name expression</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory">
            <summary>
            Defines a contract implemented by classes used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances from string expressions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory.BuildExpression(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instance which can be used to generate name from the provided expression
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance representing associated sport @event</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market</param>
            <param name="operator">A <see cref="T:System.String"/> specifying the operator for which to build the expression</param>
            <param name="operand">An operand for the built expression</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider">
            <summary>
            Defines a contract implemented by classes used to provide names of markets and outcomes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider.GetMarketNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the specified market in the requested language
            </summary>
            <param name="culture">The language of the returned name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider.GetOutcomeNameAsync(System.String,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the specified outcome in the requested language
            </summary>
            <param name="outcomeId">The outcome identifier.</param>
            <param name="culture">The language of the returned name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProviderFactory">
            <summary>
            Defines a contract implemented by factories used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProviderFactory.BuildNameProvider(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/>
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance representing associated sport @event</param>
            <param name="marketId">A market identifier, identifying the market associated with the returned instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market</param>
            <returns>INameProvider.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand">
            <summary>
            Defines a contract implemented by classes representing mathematical operands
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand.GetIntValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Int32"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the value of the operand as a <see cref="T:System.Int32"/></returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating value of the operand</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand.GetDecimalValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Decimal"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the value of the operand as a <see cref="T:System.Int32"/></returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating value of the operand</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand.GetStringValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.String"/>
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the value of the operand as a <see cref="T:System.String"/></returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating value of the operand</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory">
            <summary>
            A factory used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory.BuildOperand(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> instance
            </summary>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers for the market associated with the constructed operand.</param>
            <param name="operandExpression">A <see cref="T:System.String"/> representation of the operand.</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> instance.</returns>
            <exception cref="T:System.FormatException">The format of the <c>operandExpression</c> is not correct</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.MinusNameExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation supporting '-' based expressions (i.e. {-reply_nr})
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.MinusNameExpression._operand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.MinusNameExpression.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.MinusNameExpression"/> class.
            </summary>
            <param name="operand">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.MinusNameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">The specified specifier does not exist or it's value is not string representation of decimal</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory">
            <summary>
            Factory used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory.SequencedCompetitorOperandRegexPattern">
            <summary>
            A regex pattern used to detect '{$competitor1} expression operands
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory._operandFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory"/> used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> instances required by name expressions
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory._profileCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> used to fetch profiles
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory"/> class
            </summary>
            <param name="operandFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory"/> used to build <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> instances required by name expressions</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> used to fetch profiles</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory.EnsureSpecifiersNotNullOrEmpty(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Ensures that the provided <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> is not a null reference or empty dictionary
            </summary>
            <param name="specifiers">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> to be checked.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory.BuildEntityNameExpression(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> specified by the passed <c>operand</c>
            </summary>
            <param name="operand">The operand of the name expression</param>
            <param name="sportEvent">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance associated with the target</param>
            <returns></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionFactory.BuildExpression(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Builds and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" /> instance which can be used to generate name from the provided expression
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> instance representing associated sport @event</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> representing specifiers of the associated market</param>
            <param name="operator">A <see cref="T:System.String" /> specifying the operator for which to build the expression</param>
            <param name="operand">An operand for the built expression</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" /> instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionHelper">
            <summary>
            Contains various helper methods for parsing of name descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionHelper.DefinedOperators">
            <summary>
            Lists supported operators
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionHelper.ParseDescriptor(System.String,System.String@)">
            <summary>
            Parses the market / outcome descriptor and returns a <see cref="T:System.Collections.Generic.IList`1"/> containing name expressions
            </summary>
            <param name="descriptor">The name descriptor</param>
            <param name="descriptorFormat">When the call is completed it contains a provided descriptor where names are replaced with format placeholders e.g. {0}</param>
            <returns>a <see cref="T:System.Collections.Generic.IList`1"/> containing name expressions</returns>
            <exception cref="T:System.FormatException">The descriptor could not be parsed due to incorrect format</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameExpressionHelper.ParseExpression(System.String,System.String@,System.String@)">
            <summary>
            Parses the expression and verifies its format
            </summary>
            <param name="expression">The name expression.</param>
            <param name="operator">When the call returns it specifies the operator parsed from the <c>expression</c></param>
            <param name="operand">When the call returns it specifies the operand parsed from the <c>expression</c></param>
            <exception cref="T:System.FormatException">The <c>expression</c> couldn't be parsed due to incorrect format</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider">
            <summary>
            Provides names of markets and outcomes
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._executionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._marketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._profileCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to retrieve player and competitor profiles
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._expressionFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory"/> instance used to built <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._sportEvent">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance representing associated sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._marketId">
            <summary>
            A market identifier of the market associated with the constructed instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._specifiers">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._exceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._competitorProfilesLoaded">
            <summary>
            Indicates if the competitors was already fetched
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory,Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider"/> class
            </summary>
            <param name="marketCacheProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to retrieve player and competitor profiles</param>
            <param name="expressionFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory"/> instance used to built <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances</param>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance representing associated sport @event</param>
            <param name="marketId">A market identifier of the market associated with the constructed instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running</param>
            <param name="logger">A logger used to log to execution log</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.GetMarketNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the specified market in the requested language
            </summary>
            <param name="culture">The language of the returned name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.GetOutcomeNameAsync(System.String,System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the specified outcome in the requested language
            </summary>
            <param name="outcomeId">The outcome identifier</param>
            <param name="culture">The language of the returned name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.GetOutcomeNameFromProfileAsync(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the outcome name from profile
            </summary>
            <param name="outcomeId">The outcome identifier</param>
            <param name="culture">The language of the returned name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">The name of the specified outcome could not be generated</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.GetMarketDescriptorAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription"/> instance describing the specified market in the specified language
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned descriptor</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.HandleErrorCondition(System.String,System.String,System.String,System.Globalization.CultureInfo,System.Exception)">
            <summary>
            Handles the error condition occurred during name generation either by logging or throwing an exception - depending on the <see cref="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._exceptionStrategy"/>
            </summary>
            <param name="message">The message describing the condition</param>
            <param name="outcomeId">The id of the outcome or a null reference if name was being generated for a market</param>
            <param name="nameDescriptor">The retrieved nameDescriptor or a null reference if name descriptor could not be retrieved</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> specifying the language associated with the generated name</param>
            <param name="innerException">The exception which caused the error condition or a null reference</param>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameGenerationException">If so specified by the <see cref="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider._exceptionStrategy"/> field</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider.GetNameExpressions(System.String,System.String@)">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IList`1"/> constructed from the provided descriptor
            </summary>
            <param name="nameDescriptor">The name descriptor</param>
            <param name="nameDescriptorFormat">When the call completes, the <c>nameDescriptor</c> replaced with string format placeholders</param>
            <returns>a <see cref="T:System.Collections.Generic.IList`1"/> constructed from the provided descriptor</returns>
            <exception cref="T:System.FormatException">Provided <c>nameDescriptor</c> couldn't be parsed due to incorrect format</exception>
            <exception cref="T:System.ArgumentException">One of the operators specified in the <c>nameDescriptor</c> is not supported</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory">
            <summary>
            A factory used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory._marketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory._profileCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to retrieve player and competitor profiles
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory._expressionFactory">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory"/> instance used to built <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory._exceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory"/> class.
            </summary>
            <param name="marketCacheProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors</param>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to retrieve player and competitor profiles</param>
            <param name="expressionFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpressionFactory"/> instance used to built <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> instances</param>
            <param name="exceptionHandlingStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> to specifying how to handle potential exceptions thrown to the user code</param>
            <param name="loggerFactory">A logger factory to create logs when creating <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider"/></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory.BuildNameProvider(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider" />
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> instance representing associated sport @event</param>
            <param name="marketId">A market identifier, identifying the market associated with the returned instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> representing specifiers of the associated market</param>
            <returns>INameProvider</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SpecifierBasedOperator">
            <summary>
            Represents a base class for <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> implementations which deal with market specifiers
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SpecifierBasedOperator.ParseSpecifier(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32@)">
            <summary>
            Parses the value of the specified specifier
            </summary>
            <param name="specifierName">Name of the specifier to parse</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers</param>
            <param name="specifierValue">When the call is completed it contains the value of the specified specifier</param>
            <exception cref="T:System.InvalidOperationException">The specified specifier does not exist or it's value is not string representation of int</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SpecifierBasedOperator.ParseSpecifier(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Decimal@)">
            <summary>
            Parses the value of the specified specifier
            </summary>
            <param name="specifierName">Name of the specifier to parse</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers</param>
            <param name="specifierValue">When the call is completed it contains the value of the specified specifier</param>
            <exception cref="T:System.InvalidOperationException">The specified specifier does not exist or it's value is not string representation of decimal</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OperandFactory">
            <summary>
            A default implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperandFactory"/> contract
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OperandFactory.BuildOperand(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand" /> instance
            </summary>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> representing specifiers for the market associated with the constructed operand.</param>
            <param name="operandExpression">A <see cref="T:System.String" /> representation of the operand.</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand" /> instance.</returns>
            <exception cref="T:System.FormatException">The format of the <c>operandExpression</c> is not correct</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation supporting '!' based expressions (e.g. {!reply_nr})
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression._operand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression"/> class
            </summary>
            <param name="operand">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating name expression</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlayerProfileExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation supporting ! based expressions (e.g. {!reply_nr})
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlayerProfileExpression._profileCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to fetch player profiles
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlayerProfileExpression._operand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlayerProfileExpression.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.OrdinalNameExpression"/> class.
            </summary>
            <param name="profileCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IProfileCache"/> instance used to fetch player profiles</param>
            <param name="operand">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlayerProfileExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">Error occurred while evaluating name expression</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlusNameExpression">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression"/> implementation support '+' based expressions (i.e. {+period_nr})
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameExpression" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlusNameExpression._operand">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlusNameExpression.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlusNameExpression"/> class.
            </summary>
            <param name="operand">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> representing part of the name expression</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.PlusNameExpression.BuildNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously builds a name of the associated instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> specifying the language of the constructed name</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.NameExpressionException">The specified specifier does not exist or it's value is not string representation of decimal</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score">
            <summary>
            Represents a match score
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.HomeScore">
            <summary>
            A score of the home team
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.AwayScore">
            <summary>
            A score of the away team
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> class
            </summary>
            <param name="homeScore">A score of the home team</param>
            <param name="awayScore">A score of the away team</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.op_Addition(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score)">
            <summary>
            Overrides the + operator
            </summary>
            <param name="score1">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> representing the first operand of the operation</param>
            <param name="score2">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> representing the second operand of the operation.</param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> instance representing the result of the addition.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.Parse(System.String)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> instance constructed from it's string representation
            </summary>
            <param name="value">A string representation of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/></param>
            <returns>a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> instance constructed from it's string representation</returns>
            <exception cref="T:System.FormatException">The format of <c>value</c> is not correct</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.TryParse(System.String,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score@)">
            <summary>
            Attempts to construct a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> instance from it's string representation
            </summary>
            <param name="value">A <see cref="T:System.String"/> representation of a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/>.</param>
            <param name="score">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score"/> instance if method returned true, otherwise null.</param>
            <returns>True if the provided value could be parsed, otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.Score.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation">
            <summary>
            Enumerates simple math operations supported by <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.ExpressionOperand"/>
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation.Add">
            <summary>
            Specifies an addition (+)
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleMathOperation.Subtract">
            <summary>
            Specifies an subtraction (-)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand">
            <summary>
            Represents a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand"/> capable of handling simple operand - i.e. the operand is the value of a specifier
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.IOperand" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand._specifiers">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand._operandString">
            <summary>
            The <see cref="T:System.String"/> representation of the operand - i.e. name of the specifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand"/> class.
            </summary>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <param name="operandString">The <see cref="T:System.String"/> representation of the operand - i.e. name of the specifier.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand.GetIntValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Int32" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the value of the operand as a <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand.GetDecimalValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.Decimal" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the value of the operand as a <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.SimpleOperand.GetStringValue">
            <summary>
            Gets the value of the operand as a <see cref="T:System.String" />
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> containing the value of the operand as a <see cref="T:System.String" />.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider">
            <summary>
            Defines a contract implemented by classes used to market cache provider
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider.GetMarketDescriptionAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance for the market specified by <c>id</c> and <c>specifiers</c>
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="specifiers">Dictionary of the specifiers</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1" /> specifying required translations</param>
            <param name="fetchVariantDescriptions">Should variant should be fetched</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async retrieval operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider.ReloadMarketDescriptionAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Reload data for market descriptions
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="specifiers">A dictionary specifying market specifiers or a null reference if market is invariant</param>
            <returns>True if succeeded, false otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider">
            <summary>
            Defines a contract implemented by classes used to provide mapping ids of markets and outcomes
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider.GetMappedMarketIdAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the market mapping Id of the specified market
            </summary>
            <param name="cultures">The list of <see cref="T:System.Globalization.CultureInfo"/> to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider.GetMappedOutcomeIdAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the mapping Id of the specified outcome
            </summary>
            <param name="outcomeId">The outcome identifier used to get mapped outcomeId</param>
            <param name="cultures">The list of <see cref="T:System.Globalization.CultureInfo"/> to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProviderFactory">
            <summary>
            Defines a contract implemented by factories used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instances
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProviderFactory.BuildMarketMappingProvider(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/>
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance representing associated sport @event</param>
            <param name="marketId">A market identifier, identifying the market associated with the returned instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market</param>
            <param name="producerId">An id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></param>
            <param name="sportId">A sportId of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></param>
            <returns>Returns an instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> implementation which provides access to correct cache by examining the market specifiers
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider._invariantMarketsCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> used to cache market descriptors for invariant markets
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider._variantDescriptionSingleCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> used to cache market descriptors for single variant markets
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider._variantDescriptionListCache">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache"/> used to cache variant descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider.#ctor(Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache,Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache,Microsoft.Extensions.Logging.ILogger{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider"/> class
            </summary>
            <param name="invariantMarketsCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionsCache"/> used to cache market descriptors for invariant markets</param>
            <param name="variantDescriptionSingleCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IMarketDescriptionCache"/> used to cache market descriptors for variant markets</param>
            <param name="variantDescriptionListCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.IVariantDescriptionsCache"/> used to cache variant descriptions</param>
            <param name="logger">The execution logger</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider.GetMarketDescriptionAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo},System.Boolean)">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance for the market specified by <c>id</c> and <c>specifiers</c>
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="specifiers">A dictionary specifying market specifiers or a null reference if market is invariant</param>
            <param name="cultures">A <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> specifying required translations</param>
            <param name="fetchVariantDescriptions"></param>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription" /> instance describing the specified markets</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketCacheProvider.ReloadMarketDescriptionAsync(System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Reload data for market descriptions
            </summary>
            <param name="marketId">The market identifier</param>
            <param name="specifiers">A dictionary specifying market specifiers or a null reference if market is invariant</param>
            <returns>True if succeeded, false otherwise</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,System.Globalization.CultureInfo,System.String)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> from the provided Dto
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketDescriptionDto"/> containing market description data.</param>
            <param name="factory">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> instance used to build market mapping validators .</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided Dto.</param>
            <param name="source">The source cache where <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> is built</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The cache item could not be build from the provided Dto</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingCacheItem.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketMappingDto,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,System.Globalization.CultureInfo)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingCacheItem"/> from the provided Dto
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketMappingDto"/> containing mapping data</param>
            <param name="factory">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> used to construct mapping validator</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> </param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingCacheItem"/></returns>
            <exception cref="T:System.InvalidOperationException">The format of <see cref="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.MarketMappingDto.ValidFor"/> is not correct</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider">
            <summary>
            Provides mapping ids of markets and outcomes
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.ExecutionLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.CacheLog">
            <summary>
            A <see cref="T:Microsoft.Extensions.Logging.ILogger"/> instance used for execution logging
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._marketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._eventStatusCache">
            <summary>
            The event status cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._sportEvent">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> instance representing associated sport event
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._marketId">
            <summary>
            A market identifier of the market associated with the constructed instance
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._specifiers">
            <summary>
            A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider._exceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,Sportradar.OddsFeed.SDK.Common.Urn,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProvider"/> class
            </summary>
            <param name="marketCacheProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors</param>
            <param name="eventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> instance used to retrieve event status data</param>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/> instance representing associated sport @event</param>
            <param name="marketId">A market identifier of the market associated with the constructed instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing specifiers of the associated market</param>
            <param name="producerId">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> used to get market/outcome mappings</param>
            <param name="sportId">A sportId used to get market/outcome mappings</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.GetMarketDescriptorAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription"/> instance describing the specified market in the specified language
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CacheItemNotFoundException">The requested key was not found in the cache and could not be loaded</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.GetMappedMarketIdAsync(System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the market mapping Id of the specified market
            </summary>
            <param name="cultures">The list of <see cref="T:System.Globalization.CultureInfo"/> to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProvider.GetMappedOutcomeIdAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Globalization.CultureInfo})">
            <summary>
            Asynchronously gets the mapping Id of the specified outcome
            </summary>
            <param name="outcomeId">The outcome identifier used to get mapped outcomeId</param>
            <param name="cultures">The list of <see cref="T:System.Globalization.CultureInfo"/> to fetch <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping"/></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory">
            <summary>
            A factory used to construct <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/> instances
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory._marketCacheProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory._eventStatusCache">
            <summary>
            The event status cache
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory._exceptionStrategy">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> describing the mode in which the SDK is running
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory.#ctor(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider,Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache,Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.NameProviderFactory"/> class.
            </summary>
            <param name="marketCacheProvider">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketCacheProvider"/> instance used to retrieve market descriptors</param>
            <param name="eventStatusCache">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.Caching.ISportEventStatusCache"/> instance used to retrieve event status data</param>
            <param name="exceptionStrategy">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Enums.ExceptionHandlingStrategy"/> specifying how to handle potential exceptions thrown to the user code</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketMappingProviderFactory.BuildMarketMappingProvider(Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},System.Int32,Sportradar.OddsFeed.SDK.Common.Urn)">
            <summary>
            Builds and returns a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNameGeneration.INameProvider" />
            </summary>
            <param name="sportEvent">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent" /> instance representing associated sport @event</param>
            <param name="marketId">A market identifier, identifying the market associated with the returned instance</param>
            <param name="specifiers">A <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> representing specifiers of the associated market</param>
            <param name="producerId">An id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></param>
            <param name="sportId">A sportId of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent"/></param>
            <returns>Returns an instance of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.IMarketMappingProvider"/></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMapping">
            <summary>
            A implementation of outcome mapping for the market
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMapping.Id">
            <summary>
            Gets the identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMapping.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the outcome in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language in which to get the name</param>
            <returns>The name in the specific language</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMapping.MarketId">
            <summary>
            Gets the id of the mapped market
            </summary>
            <value>The id of the mapped market</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.OutcomeMapping.#ctor(System.String,System.Collections.Generic.IDictionary{System.Globalization.CultureInfo,System.String},System.String)">
            <summary>
            Constructs the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping"/>
            </summary>
            <param name="id">The Id used for the construction</param>
            <param name="names">The translatable name used for the construction</param>
            <param name="marketId">The id of the mapped market</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem.Build(Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VariantDescriptionDto,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory,System.Globalization.CultureInfo,System.String)">
            <summary>
            Constructs and returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/> from the provided Dto
            </summary>
            <param name="dto">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.VariantDescriptionDto"/> containing variant description data</param>
            <param name="factory">The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidatorFactory"/> instance used to build market mapping validators</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the provided Dto</param>
            <param name="source">The source cache where <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.MarketDescriptionCacheItem"/> is built</param>
            <returns>The constructed <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MarketNames.VariantDescriptionCacheItem"/></returns>
            <exception cref="T:System.InvalidOperationException">The cache item could not be build from the provided Dto</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper">
            <summary>
            Defines static methods used when parsing feed messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetVoidFactor(System.Boolean,System.Double)">
            <summary>
            Returns a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.VoidFactor"/> member based on information received from the feed
            </summary>
            <param name="specified">Value indicating whether the void factor field was specified in the feed message</param>
            <param name="value">Value of the void factor specified in the feed message</param>
            <returns></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.IsEnumMember``1(System.Object)">
            <summary>
            Determines whether the provided value is member of the specified enumeration
            </summary>
            <typeparam name="TEnum">The enumeration whose members are to be checked</typeparam>
            <param name="value">The value to check.</param>
            <returns>True if the provided value is member of the specified enumeration. Otherwise false.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.Int32)">
            <summary>
            Converts the provided <c>value</c> to the member of the specified enum
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="value">The value to be converted</param>
            <returns>The member of the specified enum</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.Boolean,System.Int32,``0)">
            <summary>
            Converts the provided int <c>value</c> to the member of the specified enum, or returns <c>defaultValue</c> if value of <c>specified</c> is false
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="specified">Value indicating whether the value field was specified in the feed message</param>
            <param name="value">The value in the feed message</param>
            <param name="defaultValue">A structure member to be returned if <c>specified</c> is false</param>
            <returns>The <c>value</c> converted to enum structure member</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.Boolean,System.Int32,``0,``0)">
            <summary>
            Converts the provided int <c>value</c> to the member of the specified enum, or returns <c>defaultValue</c>
            if value of <c>specified</c> is false
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="specified">Value indicating whether the value field was specified in the feed message</param>
            <param name="value">The value in the feed message</param>
            <param name="unknownValue">A structure member to be returned if value is not known, but specified</param>
            <param name="naValue">A structure member to be returned if value is not specified</param>
            <returns>The <c>value</c> converted to enum structure member</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.Int32,``0)">
            <summary>
            Converts the provided int <c>value</c> to the member of the specified enum, or returns <c>defaultValue</c>
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="value">The value in the feed message</param>
            <param name="defaultValue">A structure member to be returned if unknown <c>value</c></param>
            <returns>The <c>value</c> converted to enum structure member</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.String)">
            <summary>
            Converts the provided string <c>value</c> (enum value name) to the member of the specified enum
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="value">The value name to be converted</param>
            <returns>The member of the specified enum</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.String,``0)">
            <summary>
            Converts the provided string <c>value</c> (enum value name) to the member of the specified enum
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="value">The value name to be converted</param>
            <param name="defaultValue">A structure member to be returned if <c>value</c> is not member of enum</param>
            <returns>The member of the specified enum</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.MessageMapperHelper.GetEnumValue``1(System.String,``0,System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Converts the provided string <c>value</c> (enum value name) to the member of the specified enum
            </summary>
            <typeparam name="T">The type of enum to which to convert the <c>value</c></typeparam>
            <param name="value">The value name to be converted</param>
            <param name="defaultValue">A struct member to be returned if <c>value</c> is not member of enum</param>
            <param name="predefinedPairs">The predefined pairs of string value to enum</param>
            <returns>The member of the specified enum</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider">
            <summary>
            Provider for match status descriptions
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider.#ctor(System.String,System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" /> class
            </summary>
            <param name="dataProviderName">Name of data provider</param>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="xmlElementName">The name of the XML element containing id / description attributes</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider.GetDataAsync(System.String)">
            <summary>
            Asynchronously gets a <see cref="!:T" /> instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider.GetDataAsync(System.String[])">
            <summary>
            Asynchronously gets a <see cref="!:T" /> instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo" />
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider.GetData(System.String)">
            <summary>
            Gets a <see cref="!:T" /> instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NamedValueDataProvider.GetData(System.String[])">
            <summary>
            Gets a <see cref="!:T" /> instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo" />
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1">
            <summary>
            An implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> which fetches the data and deserializes it
            </summary>
            <typeparam name="T">Specifies the type of Dto instance which will be obtained by deserialization and returned</typeparam>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="E:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.RawApiDataReceived">
            <summary>
            Event raised when the data provider receives the api message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.DataFetcher">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher"/> used to fetch the data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1._deserializer">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1"/> used to deserialize the fetch data
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1._uriFormat">
            <summary>
            The url format specifying the url of the resources fetched by the fetcher
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" /> class
            </summary>
            <param name="uriFormat">The url format specifying the url of the resources fetched by the fetcher</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetDataAsyncInternal(System.Uri)">
            <summary>
            Fetches and deserializes the data from the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the data location</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the ongoing operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetDataInternal(System.Uri)">
            <summary>
            Fetches and deserializes the data from the provided <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> specifying the data location</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the ongoing operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetRequestUri(System.Object[])">
            <summary>
            Constructs and returns an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>id</c>
            </summary>
            <param name="identifiers">Identifiers uniquely identifying the data to fetch</param>
            <returns>an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>identifiers</c></returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetDataAsync(System.String)">
            <summary>
            get data as an asynchronous operation.
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetDataAsync(System.String[])">
            <summary>
            Asynchronously gets a <typeparamref name="T"/> instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo"/>
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the async operation</returns>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.CommunicationException">Failed to execute http get</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.DeserializationException">The deserialization failed</exception>
            <exception cref="T:Sportradar.OddsFeed.SDK.Common.Exceptions.MappingException">The deserialized entity could not be mapped to entity used by the SDK</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetData(System.String)">
            <summary>
            Gets a <see cref="!:T" /> instance in language specified by the provided <c>languageCode</c>
            </summary>
            <param name="languageCode">A two letter language code of the <see cref="T:System.Globalization.CultureInfo" /></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.NonMappingDataProvider`1.GetData(System.String[])">
            <summary>
            Gets a <see cref="!:T" /> instance specified by the provided identifiersA two letter language code of the <see cref="T:System.Globalization.CultureInfo" />
            </summary>
            <param name="identifiers">A list of identifiers uniquely specifying the instance to fetch</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the async operation</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.IMappingValidator"/> which checks the specified market specifier against specific value
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator._specifierName">
            <summary>
            The name of the specifier in the valid for attribute
            </summary>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator._specifierValue">
            <summary>
            The required value of the specifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator"/> class.
            </summary>
            <param name="specifierName">The name of the specifier in the valid for attribute.</param>
            <param name="specifierValue">The required value of the specifier.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator.Validate(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Validate the provided specifiers against current instance.
            </summary>
            <param name="specifiers">The <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing market specifiers.</param>
            <returns>True if the mapping associated with the current instance can be used to map associated market; False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">Validation cannot be performed against the provided specifiers</exception>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SpecificValueMappingValidator.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SportEventSummaryProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve sport event summary
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SportEventSummaryProvider._sportEventSummaryUriFormat">
            <summary>
            An address format used to retrieve sport event summary
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SportEventSummaryProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SportEventSummaryProvider"/> class
            </summary>
            <param name="sportEventSummaryUriFormat">An address format used to retrieve sport event summary</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.SportEventSummaryProvider.GetRequestUri(System.String[])">
            <summary>
            Constructs and returns an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>id</c>
            </summary>
            <param name="identifiers">Identifiers uniquely identifying the data to fetch</param>
            <returns>an <see cref="T:System.Uri"/> instance used to retrieve resource with specified <c>identifiers</c></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentRaceScheduleProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve sport events scheduled for a specified date
            or currently live sport events
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentRaceScheduleProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentRaceScheduleProvider"/> class
            </summary>
            <param name="dateScheduleUriFormat">An address format used to retrieve sport events for a specified date</param>
            <param name="fetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentScheduleProvider">
            <summary>
            A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1"/> used to retrieve sport events scheduled for a specified date
            or currently live sport events
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.DataProvider`2" />
            <seealso cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataProvider`1" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentScheduleProvider.#ctor(System.String,Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher,Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer{Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule},Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory{Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule,Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.EntityList{Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Dto.SportEventSummaryDto}})">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.TournamentScheduleProvider"/> class
            </summary>
            <param name="dateScheduleUriFormat">An address format used to retrieve sport events for a specified date</param>
            <param name="dataFetcher">A <see cref="T:Sportradar.OddsFeed.SDK.Api.Internal.ApiAccess.IDataFetcher" /> used to fetch the data</param>
            <param name="deserializer">A <see cref="T:Sportradar.OddsFeed.SDK.Common.Internal.IDeserializer`1" /> used to deserialize the fetch data</param>
            <param name="mapperFactory">A <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapperFactory`2" /> used to construct instances of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Internal.Mapping.ISingleTypeMapper`1" /></param>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodCompetitorResult">
            <summary>
            Defines a contract implemented by classes representing competitor result per period
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodCompetitorResult.Id">
            <summary>
            Gets the competitor id
            </summary>
            <value>The competitor id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodCompetitorResult.CompetitorResults">
            <summary>
            Gets the competitor results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore">
            <summary>
            Defines a contract implemented by classes representing a score of a sport event period
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore.HomeScore">
            <summary>
            Gets the score of the home team in the period represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore.AwayScore">
            <summary>
            Gets the score of the away team in the period represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore.Type">
            <summary>
            Type of the period
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore.Number">
            <summary>
            Number of the period
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodScore.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the match status
            </summary>
            <param name="culture">The culture used to get match status id and description</param>
            <returns>Returns the match status id and description in selected culture</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatistics">
            <summary>
            Defines a contract for classes implementing period statistics
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatistics.PeriodName">
            <summary>
            Gets the name of the period
            </summary>
            <value>The name of the period</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatistics.TeamStatistics">
            <summary>
            Gets the list of team statistics for specific period
            </summary>
            <value>The list of team statistics for specific period</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatus">
            <summary>
            Defines a contract implemented by classes representing period status
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatus.Number">
            <summary>
            Gets the number of the specific lap.
            </summary>
            <value>The number of the specific lap.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatus.Type">
            <summary>
            Gets the type
            </summary>
            <value>The type</value>
            <remarks>Possible values: lap</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatus.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
            <remarks>Possible values: not_started, started, completed.</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPeriodStatus.PeriodResults">
            <summary>
            Gets the period results
            </summary>
            <value>The results</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher">
            <summary>
            Defines a contract implemented by classes representing sport event pitcher
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> used to uniquely identify the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher.Name">
            <summary>
            Gets the name of the referee represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher.Hand">
            <summary>
            Gets the hand with which player pitches
            </summary>
            <value>The hand with which player pitches</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPitcher.Competitor">
            <summary>
            Gets the indicator if the competitor is Home or Away
            </summary>
            <value>The indicator if the competitor is Home or Away</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer">
            <summary>
            Defines a contract implemented by classes representing players or racers in a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitor" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing player names in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayer.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the player in the specified language or a null reference
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>The name of the player in the specified language or a null reference.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile">
            <summary>
            Defines a contract implemented by classes representing a player profile
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Type">
            <summary>
            Gets a value describing the type(e.g. forward, defense, ...) of the player represented by current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.DateOfBirth">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying the date of birth of the player associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Height">
            <summary>
            Gets the height in centimeters of the player represented by the current instance or a null reference if height is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Weight">
            <summary>
            Gets the weight in kilograms of the player represented by the current instance or a null reference if weight is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Nationalities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing player nationality in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the nationality of the player represented by the current instance in  the language specified by <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned nationality</param>
            <returns>The nationality of the player represented by the current instance in  the language specified by <c>culture</c></returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Gender">
            <summary>
            Gets the gender
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.CountryCode">
            <summary>
            Gets the country code
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.FullName">
            <summary>
            Gets the full name of the player
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IPlayerProfile.Nickname">
            <summary>
            Gets the nickname of the player
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo">
            <summary>
            Defines a contract implemented by classes providing product information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.IsAutoTraded">
            <summary>
            Gets a value indicating whether the sport event is auto traded
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.IsInHostedStatistics">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in hosted solutions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.IsInLiveCenterSoccer">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveCenterSoccer solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.IsInLiveMatchTracker">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveMatchTracker solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.IsInLiveScore">
            <summary>
            Gets a value indicating whether the sport event associated with the current instance is available in LiveScore solution
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.Links">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing links to the product represented by current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfo.Channels">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing streaming channel associated with product
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfoLink">
            <summary>
            Defines a contract implemented by classes representing product info links
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfoLink.Reference">
            <summary>
            Gets the reference to the product info represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IProductInfoLink.Name">
            <summary>
            Gets the name of the product link represented by the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRaceDriverProfile">
            <summary>
            Represents a race driver profile
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRaceDriverProfile.RaceDriverId">
            <summary>
            Gets the race driver id
            </summary>
            <value>The race driver id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRaceDriverProfile.RaceTeamId">
            <summary>
            Gets the race team id
            </summary>
            <value>The race team id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRaceDriverProfile.Car">
            <summary>
            Gets the car info
            </summary>
            <value>The car info</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee">
            <summary>
            Defines a contract implemented by classes representing sport event referee
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> used to uniquely identify the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee.Name">
            <summary>
            Gets the name of the referee represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee.Nationalities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing referee nationality in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee.GetNationality(System.Globalization.CultureInfo)">
            <summary>
            Gets the referee nationality in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language.</param>
            <returns>The referee nationality in the specified language.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReference">
            <summary>
            A contract for classes implementing array a+of references
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReference.BetradarId">
            <summary>
            Gets the Betradar id for this instance if provided amount reference ids
            </summary>
            <returns>If exists among reference ids, result is greater then 0</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReference.BetfairId">
            <summary>
            Gets the Betfair id for this instance if provided amount reference ids
            </summary>
            <returns>If exists among reference ids, result is greater then 0</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReference.RotationNumber">
            <summary>
            Gets the rotation number if provided among reference ids
            </summary>
            <value>If exists among reference ids, result is greater then 0</value>
            <remarks>This id only exists for US leagues</remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReference.References">
            <summary>
            Gets all the reference ids
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReference.AamsId">
            <summary>
            Returns the AAMS id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The AAMS id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferenceV1">
            <summary>
            A contract for classes implementing array a+of references
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IReferenceV1.LugasId">
            <summary>
            Returns the Lugas id for this instance if provided among reference ids, null otherwise
            </summary>
            <returns>The Lugas id for this instance if provided among reference ids, null otherwise</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage">
            <summary>
            Defines a contract implemented by all classes representing messages received from the feed's REST interface
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage.GeneratedAt">
            <summary>
            Gets a <see cref="T:System.DateTime"/> instance specifying when the message represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRestMessage"/>
            was generated, or a null reference if time of generation is not defined
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange">
            <summary>
            Defines a contract implemented by classes representing result change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange.SportEventId">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IResultChange.UpdateTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> specifying the last update time
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound">
            <summary>
            Defines a contract implemented by classes providing basic tournament round information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.Type">
            <summary>
            Gets the type of the round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.Number">
            <summary>
            Gets a value specifying the round number or a null reference if round number is not defined
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.Group">
            <summary>
            Gets the group associated with the current round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.OtherMatchId">
            <summary>
            Gets the id of the other match
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.Names">
            <summary>
            Gets the name of the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> per language
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.PhaseOrGroupLongNames">
            <summary>
            Gets the phase or group long name of the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> per language
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.CupRoundMatches">
            <summary>
            Gets a value specifying the number of matches in the current cup round or a null reference
            if number of matches is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.CupRoundMatchNumber">
            <summary>
            Gets a value specifying the number of the match in the current cup round or a null reference
            if match number is not applicable to current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.BetradarId">
            <summary>
            Gets the betradar identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific language
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the Name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.GetPhaseOrGroupLongName(System.Globalization.CultureInfo)">
            <summary>
            Gets the phase or group long name for specific language
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the phase or group long name if exists, or null</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.GroupId">
            <summary>
            Gets the id of the group associated with the current round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.Phase">
            <summary>
            Gets the phase of the associated round
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IRound.BetradarName">
            <summary>
            A betradar name
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IScheduledStartTimeChange">
            <summary>
            Defines a contract implemented by classes providing schedule start time change
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IScheduledStartTimeChange.OldTime">
            <summary>
            Gets the old time
            </summary>
            <value>The old time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IScheduledStartTimeChange.NewTime">
            <summary>
            Gets the new time
            </summary>
            <value>The new time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IScheduledStartTimeChange.ChangedAt">
            <summary>
            Gets the changed at
            </summary>
            <value>The changed at</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason">
            <summary>
            Defines a contract implemented by classes representing a tournament season
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetSeasonCoverageAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage"/> representing the season coverage
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetGroupsAsync">
            <summary>
            Asynchronously gets the list of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IGroup"/> instances belonging to the season
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetScheduleAsync">
            <summary>
            Asynchronously gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the season schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the season schedule</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetCurrentRoundAsync">
            <summary>
            Asynchronously gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> specifying the current round of the tournament associated with the current instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IRound"/> specifying the current round of the tournament associated with the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetYearAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
            <returns>Asynchronously returns a <see cref="T:System.String"/> representation of the season year</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetTournamentInfoAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo"/> representing the tournament info
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason.GetCompetitorsAsync">
            <summary>
            Asynchronously gets the list of competitors
            </summary>
            <returns>The list of competitors</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage">
            <summary>
            Defines an interface representing season coverage info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.SeasonId">
            <summary>
            Gets the identifier of the season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.MaxCoverageLevel">
            <summary>
            Gets the string representation of the maximum coverage available for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.MinCoverageLevel">
            <summary>
            Gets the name of the minimum coverage guaranteed for the season associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.MaxCovered">
            <summary>
            Gets the max covered value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.Played">
            <summary>
            Gets the played value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonCoverage.Scheduled">
            <summary>
            Gets the scheduled value
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo">
            <summary>
            Defines a contract for classes implementing
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.Id">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> identifying the current instance</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name.
            </summary>
            <param name="culture">The culture</param>
            <returns>System.String</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.Names">
            <summary>
            Gets the list of translated names
            </summary>
            <value>The list of translated names</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.StartDate">
            <summary>
            Gets the start date of the season represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.EndDate">
            <summary>
            Gets the end date of the season represented by the current instance
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.Year">
            <summary>
            Gets a <see cref="T:System.String"/> representation of the current season year
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISeasonInfo.TournamentId">
            <summary>
            Gets the associated tournament identifier.
            </summary>
            <value>The associated tournament identifier.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISport">
            <summary>
            Defines a contract implemented by classes representing a sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISport.Categories">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing categories
            which belong to the sport represented by the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent">
            <summary>
            Defines a contract implemented by classes representing the target(tournament, match, race) of feed messages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport event associated with the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetNameAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the name of the sport event
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the returned name</param>
            <returns>Return a name of the race, or match</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetSportIdAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance
            </summary>
            <returns>Returns a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport associated with the current instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetScheduledTimeAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.DateTime" /> instance specifying for when the sport event associated with the current instance is scheduled or a null reference if the value is not known
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetScheduledEndTimeAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.DateTime" /> instance specifying for when the sport event associated with the current instance is scheduled to end or a null reference if the value is not known
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the retrieval operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetStartTimeTbdAsync">
            <summary>
            Asynchronously gets a value specifying if the start time to be determined is set for the associated sport event.
            </summary>
            <returns>A value specifying if the start time to be determined is set for the associated sport event.</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEvent.GetReplacedByAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.
            </summary>
            <returns>A <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the replacement sport event for the associated sport event.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions">
            <summary>
            Defines a contract implemented by classes representing sport event conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions.Attendance">
            <summary>
            Gets a <see cref="T:System.String"/> specifying the attendance of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions.EventMode">
            <summary>
            TODO: Add comments
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions.Referee">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IReferee"/> instance representing the referee presiding over the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions.WeatherInfo">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo"/> instance representing the expected weather on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventConditions.Pitchers">
            <summary>
            Gets the pitchers
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus">
            <summary>
            Defines a contract implemented by classes representing the status of a sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.Status">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.Enums.EventStatus"/> describing the high-level status of the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.IsReported">
            <summary>
            Gets a value indicating whether a data journalist is present in the associated sport event, or a
            null reference if the information is not available
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.HomeScore">
            <summary>
            Gets the score of the home competitor competing on the associated sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.AwayScore">
            <summary>
            Gets the score of the away competitor competing on the associated sport event
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property specified by it's name
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>A <see cref="T:System.Object"/> representation of the value of the specified property, or a null reference
            if the value of the specified property was not specified</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values
            </summary>
            <value>a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing additional event status values</value>
            <remarks><para>List of possible keys:</para>
            <list type="bullet">
            <item><description>AggregateAwayScore</description></item>
            <item><description>AggregateHomeScore</description></item>
            <item><description>AggregateWinnerId</description></item>
            <item><description>AwayBatter</description></item>
            <item><description>AwayDismissals</description></item>
            <item><description>AwayGameScore</description></item>
            <item><description>AwayLegScore</description></item>
            <item><description>AwayPenaltyRuns</description></item>
            <item><description>AwayRemainingBowls</description></item>
            <item><description>AwayScore</description></item>
            <item><description>AwaySuspend</description></item>
            <item><description>Balls</description></item>
            <item><description>Bases</description></item>
            <item><description>Clock_MatchTime</description></item>
            <item><description>Clock_RemainingTime</description></item>
            <item><description>Clock_RemainingTimeInPeriod</description></item>
            <item><description>Clock_StoppageTime</description></item>
            <item><description>Clock_StoppageTimeAnnounced</description></item>
            <item><description>Clock_Stopped</description></item>
            <item><description>Clock{ClockNumber}_MatchTime</description></item>
            <item><description>Clock{ClockNumber}_StoppageTime</description></item>
            <item><description>Clock{ClockNumber}_StoppageTimeAnnounced</description></item>
            <item><description>CurrentCtTeam</description></item>
            <item><description>CurrentEnd</description></item>
            <item><description>CurrentServer</description></item>
            <item><description>DecidedByFed</description></item>
            <item><description>Delivery</description></item>
            <item><description>ExpeditedMode</description></item>
            <item><description>HomeBatter</description></item>
            <item><description>HomeDismissals</description></item>
            <item><description>HomeGameScore</description></item>
            <item><description>HomeLegScore</description></item>
            <item><description>HomePenaltyRuns</description></item>
            <item><description>HomeRemainingBowls</description></item>
            <item><description>HomeScore</description></item>
            <item><description>HomeSuspend</description></item>
            <item><description>Innings</description></item>
            <item><description>Outs</description></item>
            <item><description>Over</description></item>
            <item><description>Period</description></item>
            <item><description>PeriodScore{PeriodScoreNumber}_AwayScore</description></item>
            <item><description>PeriodScore{PeriodScoreNumber}_HomeScore</description></item>
            <item><description>PeriodScore{PeriodScoreNumber}_MatchStatusCode</description></item>
            <item><description>PeriodScore{PeriodScoreNumber}_Number</description></item>
            <item><description>Position</description></item>
            <item><description>Possession</description></item>
            <item><description>RemainingReds</description></item>
            <item><description>Reporting</description></item>
            <item><description>Result{ResultNumber}_AwayScore</description></item>
            <item><description>Result{ResultNumber}_Climber</description></item>
            <item><description>Result{ResultNumber}_ClimberRanking</description></item>
            <item><description>Result{ResultNumber}_HomeScore</description></item>
            <item><description>Result{ResultNumber}_Id</description></item>
            <item><description>Result{ResultNumber}_MatchStatusCode</description></item>
            <item><description>Result{ResultNumber}_Points</description></item>
            <item><description>Result{ResultNumber}_Sprint</description></item>
            <item><description>Result{ResultNumber}_SprintRanking</description></item>
            <item><description>Result{ResultNumber}_Status</description></item>
            <item><description>Result{ResultNumber}_StatusComment</description></item>
            <item><description>Result{ResultNumber}_Time</description></item>
            <item><description>Result{ResultNumber}_TimeRanking</description></item>
            <item><description>Status</description></item>
            <item><description>Strikes</description></item>
            <item><description>Throw</description></item>
            <item><description>Tiebreak</description></item>
            <item><description>Try</description></item>
            <item><description>Visit</description></item>
            <item><description>WinnerId</description></item>
            <item><description>WinningReason</description></item>
            <item><description>Yards</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportEventStatus.GetMatchStatusAsync">
            <summary>
            Gets the match status for specific locale
            </summary>
            <returns>Returns the match status for specific locale</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary">
            <summary>
            Defines a contract implemented by classes representing a sport
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the sport represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary.Names">
            <summary>
            Gets the name of the sport represented by the current instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name in specified culture language
            </summary>
            <param name="culture">The culture.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStage">
            <summary>
            Defines methods implemented by classes representing sport events of stage type
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetSportAsync">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStage"/> instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISportSummary"/> instance associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStage"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetCategoryAsync">
            <summary>
            Asynchronously get the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> instance associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStage"/> instance
            </summary>
            <returns>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> instance associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStage"/> instance</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetParentStageAsync">
            <summary>
            Asynchronously get the parent stage
            </summary>
            <returns>The parent stage</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetStagesAsync">
            <summary>
            Asynchronously get the list of stages representing stages of the multi-stage stage
            </summary>
            <returns>The list of stages representing stages of the multi-stage stage</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetStageTypeAsync">
            <summary>
            Asynchronously get the type of the stage
            </summary>
            <returns>The type of the stage</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetAdditionalParentStagesAsync">
            <summary>
            Asynchronously gets a list of additional ids of the parent stages of the current instance or a null reference if the represented stage does not have the parent stages
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStage.GetStatusAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStageStatus"/> containing information about the progress of the stage
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing information about the progress of the stage</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStageStatus">
            <summary>
            Defines a contract implemented by classes representing a stage status
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetitionStatus" />
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IStageStatus.GetMatchStatusAsync(System.Globalization.CultureInfo)">
            <summary>
            Asynchronously gets the stage match status
            </summary>
            <param name="culture">The culture used to get stage match status id and description</param>
            <returns>Returns the stage match status id and description in selected culture</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IStreamingChannel">
            <summary>
            Defines a contract implemented by classes representing streaming channels
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IStreamingChannel.Id">
            <summary>
            Gets a value uniquely identifying the current streaming channel
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IStreamingChannel.Name">
            <summary>
            Gets the name of the streaming channel represented by the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor">
            <summary>
            Defines a contract implemented by classes representing a competing team
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamCompetitor.Qualifier">
            <summary>
            Gets a qualifier additionally describing the competitor (e.g. home, away, ...)
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics">
            <summary>
            Defines a contract for classes implementing team statistics
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.HomeAway">
            <summary>
            Gets an indication if the statistics are for the home or away team
            </summary>
            <value>An indication if the statistics are for the home or away team</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.Cards">
            <summary>
            Gets the total count of received cards
            </summary>
            <value>The total count of received cards</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.YellowCards">
            <summary>
            Gets the total count of yellow cards
            </summary>
            <value>The total count of yellow cards</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.RedCards">
            <summary>
            Gets the total count of red cards
            </summary>
            <value>The total count of red cards</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.YellowRedCards">
            <summary>
            Gets the total count of yellow-red cards
            </summary>
            <value>The total count of yellow-red cards</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.CornerKicks">
            <summary>
            Gets the total count of corner kicks
            </summary>
            <value>The total count of corner kicks</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.TeamId">
            <summary>
            Gets the team id
            </summary>
            <value>The team id</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.Name">
            <summary>
            Gets the name
            </summary>
            <value>The name</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITeamStatistics.GreenCards">
            <summary>
            Gets the total count of green cards
            </summary>
            <value>The total count of green cards</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent">
            <summary>
            Defines a contract for classes implementing timeline event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Id">
            <summary>
            Gets the timeline event identifier
            </summary>
            <value>The id of timeline event</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.HomeScore">
            <summary>
            Gets the home score
            </summary>
            <value>The home score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.AwayScore">
            <summary>
            Gets the away score
            </summary>
            <value>The away score</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.MatchTime">
            <summary>
            Gets the match time
            </summary>
            <value>The match time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Period">
            <summary>
            Gets the period
            </summary>
            <value>The period</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.PeriodName">
            <summary>
            Gets the name of the period
            </summary>
            <value>The name of the period</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Points">
            <summary>
            Gets the points
            </summary>
            <value>The points</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.StoppageTime">
            <summary>
            Gets the stoppage time
            </summary>
            <value>The stoppage time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Team">
            <summary>
            Gets the team
            </summary>
            <value>The team</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Type">
            <summary>
            Gets the type
            </summary>
            <value>The type</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Value">
            <summary>
            Gets the value
            </summary>
            <value>The value</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.X">
            <summary>
            Gets the x
            </summary>
            <value>The x</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Y">
            <summary>
            Gets the y
            </summary>
            <value>The y</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Time">
            <summary>
            Gets the time
            </summary>
            <value>The time</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Assists">
            <summary>
            Gets the list of assists
            </summary>
            <value>The assists</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.GoalScorer">
            <summary>
            Gets the goal scorer
            </summary>
            <value>The goal scorer</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.Player">
            <summary>
            Gets the player
            </summary>
            <value>The player</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.MatchStatusCode">
            <summary>
            Gets the match status code
            </summary>
            <value>The match status code</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITimelineEvent.MatchClock">
            <summary>
            Gets the match clock
            </summary>
            <value>The match clock</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament">
            <summary>
            Defines a contract implemented by classes providing information about tournament schedule
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament.GetCategoryAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> representing the category to which the tournament belongs to
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament.GetCurrentSeasonAsync">
            <summary>
            Asynchronously gets <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo"/> instance containing detailed information about the current season of the tournament
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament.GetSeasonsAsync">
            <summary>
            Asynchronously gets a list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason"/> associated with this tournament
            </summary>
            <returns>A list of <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ISeason"/> associated with this tournament</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament.GetExhibitionGamesAsync">
            <summary>
            Asynchronously gets a <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game
            </summary>
            <returns>A <see cref="T:System.Boolean"/> specifying if the tournament is exhibition game</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournament.GetScheduleAsync">
            <summary>
            Gets the list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule
            </summary>
            <returns>The list of all <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICompetition"/> that belongs to the basic tournament schedule</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage">
            <summary>
            Defines a contract for classes implementing tournament coverage information
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentCoverage.LiveCoverage">
            <summary>
            Gets a value indicating whether live coverage is available
            </summary>
            <value><c>true</c> if [live coverage]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo">
            <summary>
            Defines a contract for classes representing tournament info
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current season
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing names of the season in different languages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific culture
            </summary>
            <param name="culture">The culture</param>
            <returns>the name in specific culture</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo.Category">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> representing the category associated with the current instance
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICategorySummary"/> representing the category associated with the current instance</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITournamentInfo.CurrentSeason">
            <summary>
            Gets the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo"/> which contains data for the season in which the current tournament is happening
            </summary>
            <value>The <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ICurrentSeasonInfo"/> which contains data for the season in which the current tournament is happening</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel">
            <summary>
            Defines a contract implemented by classes representing TV channels
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel.Name">
            <summary>
            Gets a name of the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel.StartTime">
            <summary>
            Gets a <see cref="T:System.DateTime"/> specifying when the coverage on the channel represented by the
            current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel"/> starts, or a null reference if the time is not known.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel.StreamUrl">
            <summary>
            Gets the stream url of the channel represented by the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.ITvChannel"/> instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue">
            <summary>
            Defines a contract implemented by classes representing a sport event venue
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Id">
            <summary>
            Gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> uniquely identifying the current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Names">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing venue's names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Cities">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing venue's city names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Countries">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> containing venue's country names in different languages
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Capacity">
            <summary>
            Gets the capacity of the venue associated with current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue"/> instance, or a null
            reference if the capacity is not specified
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Coordinates">
            <summary>
            Gets a map coordinates specifying the exact location of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue"/> instance
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.GetCity(System.Globalization.CultureInfo)">
            <summary>
            Gets the city name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the city name if exists, or null</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.GetCountry(System.Globalization.CultureInfo)">
            <summary>
            Gets the country name for specific locale
            </summary>
            <param name="culture">The culture</param>
            <returns>Return the country name if exists, or null</returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.CountryCode">
            <summary>
            Gets a country code of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.State">
            <summary>
            Gets a state of the venue represented by current <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue" /> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IVenue.Courses">
            <summary>
            Gets the list of courses
            </summary>
            <value>The list of courses</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo">
            <summary>
            Defines a contract implemented by classes representing weather conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo.Pitch">
            <summary>
            Get the pitch
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo.Temperature">
            <summary>
            Gets the temperature in degrees Celsius or a null reference if the expected temperature is not known
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo.WeatherConditions">
            <summary>
            Gets a <see cref="T:System.String"/> specifying the weather conditions (cloudy, sunny, ...)
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo.Wind">
            <summary>
            Gets a <see cref="T:System.String"/> specifying the wind conditions
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.IWeatherInfo.WindAdvantage">
            <summary>
            Get the wind advantage
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketAttribute">
            <summary>
            Represents market attribute used to provide additional information about a market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketAttribute.Name">
            <summary>
            Gets the attribute name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketAttribute.Description">
            <summary>
            Gets the attribute description
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription">
            <summary>
            Defines a contract implemented by classes representing market description
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Id">
            <summary>
            Gets the id of the market described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Outcomes">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> describing the outcomes of the market
            described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Specifiers">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the specifiers of the market
            described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Mappings">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing the mappings of the market
            described by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Attributes">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> representing market attributes providing
            additional information about the market.
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.OutcomeType">
            <summary>
            Gets the outcome_type market attribute - an indication of which type of outcomes the market includes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.Groups">
            <summary>
            Gets a list of groups to which the market belongs to
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the market description in the language specified by the passed <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved name</param>
            <returns>Returns the name in specific language</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IMarketDescription.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description of the market description in the language specified by the passed <c>culture</c>
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved description</param>
            <returns>Returns the description of the market description in the language specified by the passed <c>culture</c></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IOutcomeDescription">
            <summary>
            Defines a contract implemented by classes representing betting outcome description
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IOutcomeDescription.Id">
            <summary>
            Gets a value uniquely identifying the current outcome within the market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IOutcomeDescription.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the betting outcome represented by the current instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved name</param>
            <returns>Returns the name in specific language</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.Market.IOutcomeDescription.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the description of the betting outcome represented by the current instance
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved description</param>
            <returns>Returns the description of the outcome description in the language specified by the passed <c>culture</c></returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier">
            <summary>
            Defines a contract implemented by classes representing market / outright / outcome specifiers
            representing a part of unique identifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier.Type">
            <summary>
            Gets the type name of the specifier represented by the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.Market.ISpecifier.Name">
            <summary>
            Gets the name of the specifier represented by the current instance
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping">
            <summary>
            Defines a contract implemented by classes representing mapping ids of markets and outcomes
            </summary>
            <remarks>The result is <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping"/> or <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping"/></remarks>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping.TypeId">
            <summary>
            Gets the type identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping.Sov">
            <summary>
            Gets the special odds value
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData">
            <summary>
            Represents mapping information used to map markets and outright to the sport / producer to which they belong
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.ProducerIds">
            <summary>
            Gets the ids of the producers to which the associated market / outright belongs to
            </summary>
            <value>The producer ids</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.SportId">
            <summary>
            Gets the id of the sport to which the associated market / outright belongs to
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.MarketId">
            <summary>
            Gets the id of the market associated with the current instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.MarketTypeId">
            <summary>
            Gets the market type identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.MarketSubTypeId">
            <summary>
            Gets the market sub type identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.SovTemplate">
            <summary>
            Gets the special odds value template value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.ValidFor">
            <summary>
            Gets the valid_for value
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.OutcomeMappings">
            <summary>
            Gets the outcome mappings
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMappingData.CanMap(System.Int32,Sportradar.OddsFeed.SDK.Common.Urn,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Determines whether the current mapping can map market with provided specifiers associated with provided producer and sport
            </summary>
            <param name="producerId">The id of the <see cref="T:Sportradar.OddsFeed.SDK.Api.IProducer"/> associated with the market</param>
            <param name="sportId">The <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the sport associated with the market</param>
            <param name="specifiers">The market specifiers</param>
            <returns>True if the current mapping can be used to map the specified market. False otherwise</returns>
            <exception cref="T:System.InvalidOperationException">The provided specifiers are not valid</exception>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping">
            <summary>
            Defines a contract implemented by classes representing mapping id of outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping.Id">
            <summary>
            Gets the identifier
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping.MarketId">
            <summary>
            Gets the id of the mapped market
            </summary>
            <value>The id of the mapped market</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMapping.GetName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the outcome in the specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language in which to get the name</param>
            <returns>The name in the specific language</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMappingData">
            <summary>
            Represents mapping information used to map market outcomes
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMappingData.OutcomeId">
            <summary>
            Gets the id of the outcome
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMappingData.ProducerOutcomeId">
            <summary>
            Gets the producer outcome identifier
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMappingData.GetProducerOutcomeName(System.Globalization.CultureInfo)">
            <summary>
            Gets the name of the producer outcome in specified language
            </summary>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> specifying the language of the retrieved producer outcome name</param>
            <returns>Returns the producer outcome name in the language specified by the passed <c>culture</c></returns>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IOutcomeMappingData.MarketId">
            <summary>
            Gets the mapped market identifier
            </summary>
            <value>The mapped market identifier</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping">
            <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping"/> for the LiveCycleOfOdds feed
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping.TypeId">
            <summary>
            Gets the TypeId of the Lcoo market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping.Sov">
            <summary>
            Gets the special odds value for the Lcoo market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LcooMarketMapping.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping">
            <summary>
            Implementation of the <see cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping"/> for the LiveOdds feed
            </summary>
            <seealso cref="T:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.IMarketMapping" />
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping.TypeId">
            <summary>
            Gets the TypeId for the LO market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping.SubTypeId">
            <summary>
            Gets the sub type identifier for the LO market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping.Sov">
            <summary>
            Gets the special odds value for the LO market
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Entities.Rest.MarketMapping.LoMarketMapping.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket">
            <summary>
            The base class for feed market
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket.Specifiers">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing parsed specifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket.ValidationFailed">
            <summary>
            Gets or sets a indicating whether the validation of the market has failed and should not be mapped to exposed entity
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMarket.SpecifierString">
            <summary>
            Gets the specifiers string
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.SpecifierString">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing parsed specifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.extended_specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.void_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.market.void_reasonSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.SpecifierString">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing parsed specifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.Items">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.extended_specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.void_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.void_reasonSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarket.result">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.SpecifierString">
            <summary>
            Gets or sets a <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> representing parsed specifiers
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.market_metadata">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.extended_specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.favourite">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.favouriteSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.cashout_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarket.cashout_statusSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage">
            <summary>
            Represents a base class for messages received from the feed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.SportId">
            <summary>
            Gets or sets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> representing the id of the sport associated with the current <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/> instance
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.EventUrn">
            <summary>
            When overridden in derived class, it gets a <see cref="T:Sportradar.OddsFeed.SDK.Common.Urn"/> specifying the id of the associated sport event
            </summary>
            <value>The event urn</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.Name">
            <summary>
            When overridden in derived class, gets the name of the current message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.ProducerId">
            <summary>
            When overridden in derived class, it gets a value indicating the producer associated with current <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.RequestId">
            <summary>
            Gets a value specified when making a request which generated this message, or null reference if this messages is not resulted with the request
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.RequestIdUsage">
            <summary>
            When overridden in derived class, it gets a value specifying the usage requirements of the <see cref="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.RequestId"/> property
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.IsEventRelated">
            <summary>
            When overridden in derived class, it gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage"/>
            instance is related to sport event
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.IsStateful">
            <summary>
            When override in derived class, it gets a value indicating whether current message is state-ful
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.EventId">
            <summary>
            When overridden in derived class it gets the event identifier.
            </summary>
            <value>The event identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.GeneratedAt">
            <summary>
            Gets the timestamp of when the message was generated
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.SentAt">
            <summary>
            Gets the timestamp of when the message was sent
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.ReceivedAt">
            <summary>
            Gets the timestamp of when the message was received (picked up) by the sdk
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.alive">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.alive.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.alive.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.alive.subscribed">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.snapshot_complete.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.odds_generation_properties">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.odds_change_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_change.odds_change_reasonSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.groups">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.market_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_stop.market_statusSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.outcomes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_settlement.certainty">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_settlement.request_idSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.start_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.end_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.end_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.bet_cancel.superceded_by">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.start_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.end_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.rollback_bet_cancel.end_timeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.request_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.change_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.change_typeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.next_live_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.fixture_change.next_live_timeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.clock">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.period_scores">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.results">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.statistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.reporting">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.reportingSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.match_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_scoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_scoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_penalty_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_penalty_scoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_penalty_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_penalty_scoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_gamescore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_gamescoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_gamescore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_gamescoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_legscore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_legscoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_legscore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_legscoreSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_server">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_serverSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.expedite_mode">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.expedite_modeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.tiebreak">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.tiebreakSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_suspend">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_suspendSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_suspend">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_suspendSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.balls">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.ballsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.strikes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.strikesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.outs">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.outsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.bases">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_batter">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_batterSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_batter">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_batterSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.pitcher">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.batter">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.pitch_count">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.pitch_countSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.pitches_seen">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.pitches_seenSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.total_hits">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.total_hitsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.total_pitches">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.total_pitchesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.possession">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.possessionSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.position">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.positionSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.try">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.trySpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.yards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.yardsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.throw">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.throwSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.visit">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.visitSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.remaining_reds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.remaining_redsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.delivery">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.deliverySpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_remaining_bowls">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_remaining_bowlsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_remaining_bowls">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_remaining_bowlsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_end">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_endSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.innings">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.inningsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.over">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.overSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_penalty_runs">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_penalty_runsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_penalty_runs">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_penalty_runsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_dismissals">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_dismissalsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_dismissals">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_dismissalsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_ct_team">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.current_ct_teamSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.period_of_leader">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.period_of_leaderSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_drive_count">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_drive_countSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_drive_count">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_drive_countSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_play_count">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.home_play_countSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_play_count">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.sportEventStatus.away_play_countSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.clockType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.match_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.stoppage_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.stoppage_time_announced">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.remaining_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.remaining_time_in_period">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.stopped">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.clockType.stoppedSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.void_factor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.void_factorSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.dead_heat_factor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.betSettlementMarketOutcome.dead_heat_factorSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.next_betstop">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.next_betstopSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.start_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.end_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.end_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.aams_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.marketMetadata.aams_idSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.oddsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.win_probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.win_probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.lose_probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.lose_probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.refund_probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.refund_probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.half_win_probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.half_win_probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.half_lose_probabilities">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.half_lose_probabilitiesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.active">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.activeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.team">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsChangeMarketOutcome.teamSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties.expected_totals">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties.expected_totalsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties.expected_supremacy">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.oddsGenerationProperties.expected_supremacySpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsScoreType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsScoreType.home">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsScoreType.away">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType.yellow_cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType.red_cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType.yellow_red_cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType.corners">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.statisticsType.green_cards">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.resultType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.resultType.match_status_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.resultType.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.resultType.away_score">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType.match_status_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.periodScoreType.away_score">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds.betting_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds.betting_statusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds.betstop_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Feed.odds_changeOdds.betstop_reasonSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData">
            <summary>
            A class used to hold basic information about the received message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.MessageType">
            <summary>
            A <see cref="P:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.MessageType"/> specifying the type of the message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.ProducerId">
            <summary>
            A <see cref="T:System.String"/> representation of the producer id
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.EventId">
            <summary>
            A <see cref="T:System.String"/> representation of the event id
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.#ctor(Sportradar.OddsFeed.SDK.Common.Enums.MessageType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData"/> class.
            </summary>
            <param name="messageType">A <see cref="P:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.MessageType"/> specifying the type of the message.</param>
            <param name="producerId">A <see cref="T:System.String"/> representation of the producer id.</param>
            <param name="eventId">A <see cref="T:System.String"/> representation of the event id.</param>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.BasicMessageData.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute">
            <summary>
            Attributes providing additional information to deserializers. This is only required to overcome problems
            caused by XSD schema issues and will be removed when the schemes are fixed
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute.IgnoreNamespace">
            <summary>
            Gets or sets a value indicating whether the xml namespace should be ignored when deserializing the
            xml message
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute.DocumentNamespace">
            <summary>
            Gets or sets the document namespace.
            </summary>
            <value>The document namespace.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute.RootElementName">
            <summary>
            Gets or sets the name of the root xml element in the associated xml messages
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sportradar.OddsFeed.SDK.Messages.Internal.OverrideXmlNamespaceAttribute"/> class
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Internal.RestMessageBuilder">
            <summary>
            A helper class providing an easier way of constructing instances which have only default constructor
            </summary>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.RestMessageBuilder.BuildCoverageRecord(System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
            Builds the coverage record
            </summary>
            <param name="maxCoverageLevel">The maximum coverage level</param>
            <param name="minCoverageLevel">The minimum coverage level</param>
            <param name="maxCovered">The maximum covered</param>
            <param name="played">The played</param>
            <param name="scheduled">The scheduled</param>
            <param name="seasonId">The season identifier</param>
            <returns>seasonCoverageInfo</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.RestMessageBuilder.BuildSeasonExtendedRecord(System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Builds the season extended record
            </summary>
            <param name="id">The identifier</param>
            <param name="name">The name</param>
            <param name="startDate">The start date</param>
            <param name="endDate">The end date</param>
            <param name="year">The year</param>
            <returns>seasonExtended</returns>
        </member>
        <member name="M:Sportradar.OddsFeed.SDK.Messages.Internal.RestMessageBuilder.BuildBookmakerDetails(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{Sportradar.OddsFeed.SDK.Messages.Rest.response_code},System.String)">
            <summary>
            Builds the bookmaker details
            </summary>
            <param name="id">The identifier</param>
            <param name="expiresAt">The expires at</param>
            <param name="responseCode">The response code</param>
            <param name="virtualHost">The virtual host</param>
            <returns>bookmaker_details</returns>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashout">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.product">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.timestamp">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.request_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.request_idSpecified">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.MessageName">
            <summary>
            The message name
            </summary>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.IsEventRelated">
            <summary>
            When overridden in derived class, it gets a value indicating whether the current <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" />
            instance is related to sport event
            </summary>
            <value><c>true</c> if this instance is event related; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.ProducerId">
            <summary>
            When overridden in derived class, it gets a value indicating the producer associated with current <see cref="T:Sportradar.OddsFeed.SDK.Messages.Feed.FeedMessage" />
            </summary>
            <value>The producer identifier.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.RequestId">
            <summary>
            Gets a value specified when making a request which generated this message, or null reference if this messages is not resulted with the request
            </summary>
            <value>The request identifier.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.RequestIdUsage">
            <summary>
            When overridden in derived class, it gets a value specifying the usage requirements of the <see cref="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.RequestId" /> property
            </summary>
            <value>The request identifier usage.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.IsStateful">
            <summary>
            When override in derived class, it gets a value indicating whether current message is state-ful
            </summary>
            <value><c>true</c> if this instance is stateful; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.EventId">
            <summary>
            When overridden in derived class it gets the event identifier.
            </summary>
            <value>The event identifier</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.Name">
            <summary>
            When overridden in derived class, gets the name of the current message
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.GeneratedAt">
            <summary>
            Gets the timestamp of the message
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.SentAt">
            <summary>
            Gets the timestamp of when the message was sent
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashout.ReceivedAt">
            <summary>
            Gets the timestamp of when the message was received (picked up) by the sdk
            </summary>
            <value>The timestamp of the message</value>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds.betting_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds.betting_statusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds.betstop_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.cashoutOdds.betstop_reasonSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.response">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.response.action">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.response.message">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.response.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.response.response_codeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.response_code">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.OK">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.CREATED">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.ACCEPTED">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.FORBIDDEN">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.NOT_FOUND">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.CONFLICT">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.SERVICE_UNAVAILABLE">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.NOT_IMPLEMENTED">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.MOVED_PERMANENTLY">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.response_code.BAD_REQUEST">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant.outcomes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant.mappings">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant_outcomesOutcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant_outcomesOutcome.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_variant_outcomesOutcome.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.mapping_outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.product_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.product_ids">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.sport_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.market_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.sov_template">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.valid_for">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMapping.product_market_id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMappingMapping_outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMappingMapping_outcome.outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMappingMapping_outcome.product_outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_mappingsMappingMapping_outcome.product_outcome_name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.producer">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.description">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.api_url">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.active">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.scope">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producer.stateful_recovery_window_in_minutes">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_void_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_void_reason.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_void_reason.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status.sports">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status.description">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status.period_number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_status.period_numberSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_statusSports">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_statusSports.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_statusSports.all">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_statusSportsSport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_match_statusSportsSport.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betting_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betting_status.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betting_status.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcome_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcome_reason.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcome_reason.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betstop_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betstop_reason.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_betstop_reason.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.outcomes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.mappings">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.attributes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.groups">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.description">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.includes_outcomes_of_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.variant">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_market.outcome_type">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcomesOutcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcomesOutcome.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcomesOutcome.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_outcomesOutcome.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.desc_specifiersSpecifier.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.mapping_outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.product_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.product_ids">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.sport_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.market_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.sov_template">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMapping.valid_for">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMappingMapping_outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMappingMapping_outcome.outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMappingMapping_outcome.product_outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.mappingsMappingMapping_outcome.product_outcome_name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.attributesAttribute">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.attributesAttribute.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.attributesAttribute.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.message">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.expire_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.expire_atSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.bookmaker_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.bookmaker_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.bookmaker_details.virtual_host">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.market_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.betstop_reasons_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betstop_reasons_descriptions.betstop_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betstop_reasons_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betstop_reasons_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betstop_reasons_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.outcome_reasons_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.outcome_reasons_descriptions.outcome_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.outcome_reasons_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.outcome_reasons_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.outcome_reasons_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.betting_status_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betting_status_descriptions.betting_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betting_status_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betting_status_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.betting_status_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.match_status_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.match_status_descriptions.match_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.match_status_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.match_status_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.match_status_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.void_reasons_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.void_reasons_descriptions.void_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.void_reasons_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.void_reasons_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.void_reasons_descriptions.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.producers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producers.producer">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producers.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producers.response_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.producers.location">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions.variant">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.variant_descriptions.response_codeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.RestMessage">
            <summary>
            Represents all messages (entities) received from the feed REST API
            </summary>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint.fixture">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixturesEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduleEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule.sport_events">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSchedule.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.sport_event_conditions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.statistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchSummaryEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint.categories">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportCategoriesEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSummaryEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentsEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportsEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.season">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.round">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.season_coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.groups">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.competitors">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.children">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentInfoEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint.player">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerProfileEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint">
            <inheritdoc />
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.jerseys">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.manager">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.players">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.race_driver_profile">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorProfileEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTeamProfileEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary.draw_fixture">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary.draw_result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_summary.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.lottery">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.draw_date">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.draw_dateSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.display_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixture.display_idSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures.draw_fixture">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_fixtures.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries.lottery">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteries.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule.lottery">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule.draw_events">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery_schedule.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons.seasons">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentSeasons.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.sport_event_conditions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.timeline">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchTimelineEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.simpleTournamentInfoEndpoint">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.standardTournamentInfoEndpoint">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceTournamentInfoEndpoint">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.aggregate_home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.aggregate_away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.aggregate_winner_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.status_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.status_codeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.match_status_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatus.match_status_codeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint.period_statuses">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stagePeriodEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint.sport_events">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceScheduleEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType.event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.AvailableSelectionsType.generated_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType.calculation">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType.available_selections">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResponseType.generated_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType.calculation">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType.available_selections">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResponseType.generated_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint.fixture_change">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChangesEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint.tournaments">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportTournamentsEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint.result_change">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultChangesEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.teamExtended">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamExtended.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamExtended.category">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sport.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sport.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.car">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.car.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.car.chassis">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.car.engine_name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriverProfile">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriverProfile.race_driver">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriverProfile.car">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriverProfile.race_team">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriver">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriver.date_of_birth">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.raceDriver.nationality">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.team">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.reference_ids">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.players">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.abbreviation">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.short_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.country">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.country_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.virtual">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.virtualSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.age_group">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.gender">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.state">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.division">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.divisionSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.team.division_name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.competitorReferenceIdsReference_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorReferenceIdsReference_id.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.competitorReferenceIdsReference_id.value">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor.abbreviation">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerCompetitor.nationality">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.raceTeam">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.teamCompetitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamCompetitor.qualifier">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.player">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.player.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.player.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerSubstitute">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerSubstitute.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerSubstitute.jersey_number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerSubstitute.jersey_numberSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerLineup">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerLineup.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerLineup.position">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerLineup.jersey_number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerLineup.jersey_numberSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.date_of_birth">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.nationality">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.country_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.height">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.heightSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.weight">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.weightSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.jersey_number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.jersey_numberSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.full_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.nickname">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.playerExtended.gender">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.manager">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.manager.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.manager.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.manager.nationality">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.manager.country_code">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.jersey">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.base">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.sleeve">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.stripes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.stripesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.stripes_color">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.horizontal_stripes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.horizontal_stripesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.horizontal_stripes_color">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.squares">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.squaresSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.squares_color">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.split">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.splitSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.split_color">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.shirt_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.jersey.sleeve_detail">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.hole">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.hole.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.hole.par">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.course">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.course.hole">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.course.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.course.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.course">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.capacity">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.capacitySpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.city_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.country_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.country_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.map_coordinates">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venue.state">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.category">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.category.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.category.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.category.country_code">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.lottery">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.category">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.draw_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.bonus_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lottery.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info.draw_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info.draw_typeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info.time_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info.time_typeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryDraw_info.game_type">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.drawType">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawType.drum">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawType.rng">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.timeType">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.timeType.interval">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.timeType.fixed">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info.bonus_balls">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info.bonus_ballsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info.bonus_drum">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info.bonus_drumSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.lotteryBonus_info.bonus_range">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.bonusDrumType">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.bonusDrumType.same">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.bonusDrumType.additional">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus.open">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus.closed">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus.finished">
            <remarks/>
        </member>
        <member name="F:Sportradar.OddsFeed.SDK.Messages.Rest.drawStatus.canceled">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_result.draws">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDraws">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDraws.draw">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDraws.chronological">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDraws.chronologicalSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDrawsDraw">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDrawsDraw.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDrawsDraw.value">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_resultDrawsDraw.valueSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChange">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChange.sport_event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixtureChange.update_time">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.fixture">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.delayed_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.tv_channels">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.extra_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.product_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.reference_ids">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.scheduled_start_time_changes">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.start_time_confirmed">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.start_time_confirmedSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.fixture.start_timeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.delayedInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.delayedInfo.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.delayedInfo.description">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel.start_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tvChannel.stream_url">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.info.key">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.info.value">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.coverageInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.coverageInfo.coverage">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.coverageInfo.level">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.coverageInfo.live_coverage">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.coverageInfo.covered_from">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.coverage">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.coverage.includes">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.streaming">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.is_in_live_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.is_in_hosted_statistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.is_in_live_center_soccer">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.is_in_live_match_tracker">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.is_auto_traded">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfo.links">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.streamingChannel">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.streamingChannel.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.streamingChannel.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.productInfoItem">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.productInfoLink">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfoLink.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.productInfoLink.ref">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.referenceIdsReference_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.referenceIdsReference_id.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.referenceIdsReference_id.value">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.scheduledStartTimeChange">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduledStartTimeChange.old_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduledStartTimeChange.new_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.scheduledStartTimeChange.changed_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.tournament_round">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.season">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.parent">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.additional_parents">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.sport_event_conditions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.competitors">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.races">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.stage_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.scheduledSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.start_time_tbd">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.start_time_tbdSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.scheduled_end">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.scheduled_endSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.replaced_by">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.liveodds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEvent.next_live_time">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.numberSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.group_long_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.group">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.group_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.cup_round_matches">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.cup_round_matchesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.cup_round_match_number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.cup_round_match_numberSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.other_match_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.betradar_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.betradar_idSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.betradar_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchRound.phase">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.start_date">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.end_date">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.start_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.start_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.end_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.end_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.year">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonExtended.tournament_id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.season">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.season.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.season.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.currentSeason">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.stage_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.scheduledSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.start_time_tbd">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.start_time_tbdSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.scheduled_end">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.scheduled_endSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.parentStage.replaced_by">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournament">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.tournament_length">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.sport">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.category">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.exhibition_games">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.exhibition_gamesSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.scheduledSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.scheduled_end">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournament.scheduled_endSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLength">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLength.start_date">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLength.start_dateSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLength.end_date">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLength.end_dateSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended.current_season">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended.season_coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentExtended.competitors">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.season_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.played">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.max_coverage_level">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.max_covered">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.max_coveredSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.seasonCoverageInfo.min_coverage_level">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.referee">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.pitchers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.pitcherHistory">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.weather_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.attendance">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventConditions.match_mode">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.referee">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.referee.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.referee.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.referee.nationality">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.hand">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.short_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.changed_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.pitcher.changed_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.temperature_celsius">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.temperature_celsiusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.wind">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.wind_advantage">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.pitch">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.weatherInfo.weather_conditions">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.stage_type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.scheduledSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.start_time_tbd">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.start_time_tbdSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.scheduled_end">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.scheduled_endSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.sportEventChildrenSport_event.replaced_by">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.scheduled">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.scheduledSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.statusSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.display_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.draw_event.display_idSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.clock">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.period_scores">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.results">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.match_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.winner_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.winning_reason">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.decided_by_fed">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.decided_by_fedSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.period">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.restSportEventStatusBase.periodSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.clock">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.clock.match_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.clock.stoppage_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.clock.stoppage_time_announced">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.periodScore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScore.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScore.away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScore.match_status_code">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.periodScoreBase">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScoreBase.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScoreBase.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodScoreBase.numberSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultScore">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultScore.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultScore.away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultScore.match_status_code">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchStatistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchStatistics.totals">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchStatistics.periods">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatistics.statistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatistics.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatistics.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics.cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics.corner_kicks">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics.yellow_cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics.yellow_red_cards">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.teamStatisticsStatistics.red_cards">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.matchPeriod">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchPeriod.teams">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.matchPeriod.name">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.goal_scorer">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.player">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.assist">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.period_name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.match_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.match_timeSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.match_clock">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.team">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.x">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.xSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.y">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.ySpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.home_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.away_score">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.period">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.stoppage_time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.value">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.points">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.match_status_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.basicEvent.match_status_codeSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer.method">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayer.bench">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayerAssist">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.eventPlayerAssist.type">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus.number">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus.numberSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatus.status">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitor.result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitor.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitorResult">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitorResult.value">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitorResult.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.periodStatusCompetitorResult.specifiers">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus.results">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus.winner_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus.period_of_leader">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageSportEventStatus.period_of_leaderSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageResult">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResult.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResult.coverage">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.position">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.positionSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.points">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.pointsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.distance">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.distanceSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.wc_points">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.wc_pointsSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.time">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.time_ranking">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.time_rankingSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.status_comment">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.sprint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.sprintSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.sprint_ranking">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.sprint_rankingSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.climber">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.climberSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.climber_ranking">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.climber_rankingSpecified">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.grid">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitor.gridSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitorResult">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitorResult.value">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitorResult.type">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.stageResultCompetitorResult.specifiers">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.sport_event_conditions">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.sport_event_status">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.coverage_info">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultChange">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultChange.sport_event_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultChange.update_time">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.resultsEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultsEndpoint.result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultsEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.resultsEndpoint.generated_atSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.result">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.result.sport_event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.result.sport_event_status">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLiveCoverageInfo">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentLiveCoverageInfo.live_coverage">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentGroup">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentGroup.competitor">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentGroup.name">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.tournamentGroup.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.venueSummaryEndpoint">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venueSummaryEndpoint.venue">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venueSummaryEndpoint.home_teams">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.venueSummaryEndpoint.generated_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.EventType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventType.markets">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventType.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.MarketType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.MarketType.outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.MarketType.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.MarketType.specifiers">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.OutcomeType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.OutcomeType.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResultType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResultType.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResultType.probability">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResultType.harmonization">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.CalculationResultType.harmonizationSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.ResponseType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.ResponseType.message">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.ResponseType.errors">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.ResponseType.response_code">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.ResponseType.generated_at">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResultType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResultType.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResultType.probability">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResultType.harmonization">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredCalculationResultType.harmonizationSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredEventType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredEventType.markets">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredEventType.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType.outcome">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType.conflict">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredMarketType.conflictSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredOutcomeType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredOutcomeType.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredOutcomeType.conflict">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilteredOutcomeType.conflictSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionsType.selection">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionType.market">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionType.id">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType.market_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType.outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.FilterSelectionMarketType.oddsSpecified">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsType.event">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsType.requested_recommendations">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.EventRecommendationsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventRecommendationsType.recommendations">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventRecommendationsType.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventRecommendationsType.provided_recommendation">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.EventRecommendationsType.source">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.RecommendationsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.RecommendationsType.selection">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.RecommendationsType.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.RecommendationsType.probability">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsSelectionType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsSelectionType.market_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsSelectionType.outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.PreBuiltBetsSelectionType.specifiers">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionsType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionsType.selection">
            <remarks/>
        </member>
        <member name="T:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.market_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.specifiers">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.outcome_id">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.odds">
            <remarks/>
        </member>
        <member name="P:Sportradar.OddsFeed.SDK.Messages.Rest.SelectionType.oddsSpecified">
            <remarks/>
        </member>
    </members>
</doc>
