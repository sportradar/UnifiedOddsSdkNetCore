@startuml

interface ITranslatable {
  +IReadOnlyDictionary<CultureInfo, string> Translations
  +string GetTranslation(CultureInfo culture)
  +string GetDefault()
}

interface ISportEvent {
  +Urn Id
  +**Task<ITranslatable> GetNamesAsync()**
  +Task<Urn> GetSportIdAsync()
  +Task<DateTime?> GetScheduledTimeAsync()
  +Task<DateTime?> GetScheduledEndTimeAsync()
  +Task<bool?> GetStartTimeTbdAsync()
  +Task<Urn> GetReplacedByAsync()
}

interface ICompetition {
  +Task<ICompetitionStatus> GetStatusAsync()
  +Task<BookingStatus?> GetBookingStatusAsync()
  +Task<IVenue> GetVenueAsync()
  +Task<ISportEventConditions> GetConditionsAsync()
  +Task<IEnumerable<ICompetitor>> GetCompetitorsAsync()
  +Task<EventStatus?> GetEventStatusAsync()
  +Task<SportEventType?> GetSportEventTypeAsync()
  +Task<string> GetLiveOddsAsync()
  +Task<IEnumerable<ICompetitor>> GetCompetitorsAsync(CultureInfo culture)
}

interface IStage {
  +Task<ISportSummary> GetSportAsync()
  +Task<ICategorySummary> GetCategoryAsync()
  +Task<IStage> GetParentStageAsync()
  +Task<IEnumerable<IStage>> GetStagesAsync()
  +Task<StageType?> GetStageTypeAsync()
  +Task<IEnumerable<IStage>> GetAdditionalParentStagesAsync()
  +Task<IStageStatus> GetStatusAsync()
}

interface IMatch {
  +Task<IMatchStatus> GetStatusAsync()
  +Task<ITeamCompetitor> GetHomeCompetitorAsync()
  +Task<ITeamCompetitor> GetAwayCompetitorAsync()
  +Task<ISeasonInfo> GetSeasonAsync()
  +Task<IRound> GetTournamentRoundAsync()
  +Task<ILongTermEvent> GetTournamentAsync()
  +Task<IFixture> GetFixtureAsync()
  +Task<IEventTimeline> GetEventTimelineAsync()
  +Task<IEventTimeline> GetEventTimelineAsync(CultureInfo culture)
  +Task<IDelayedInfo> GetDelayedInfoAsync()
  +Task<ICoverageInfo> GetCoverageInfoAsync()
}

interface IDraw {
  +Task<Urn> GetLotteryIdAsync()
  +Task<DrawStatus> GetStatusAsync()
  +Task<IEnumerable<IDrawResult>> GetResultsAsync()
  +Task<int?> GetDisplayIdAsync()
}

interface ILottery {
  +Task<ICategorySummary> GetCategoryAsync()
  +Task<IBonusInfo> GetBonusInfoAsync()
  +Task<IDrawInfo> GetDrawInfoAsync()
  +Task<IEnumerable<Urn>> GetScheduledDrawsAsync()
  +Task<IEnumerable<IDraw>> GetDrawsAsync()
}

interface ILongTermEvent {
  +Task<ISportSummary> GetSportAsync()
  +Task<ITournamentCoverage> GetTournamentCoverage()
}

interface IBasicTournament {
  +Task<ICategorySummary> GetCategoryAsync()
  +Task<IEnumerable<ICompetitor>> GetCompetitorsAsync()
  +Task<bool?> GetExhibitionGamesAsync()
  +Task<IEnumerable<ISportEvent>> GetScheduleAsync()
}

interface ITournament {
  +Task<ICategorySummary> GetCategoryAsync()
  +Task<ICurrentSeasonInfo> GetCurrentSeasonAsync()
  +Task<IEnumerable<ISeason>> GetSeasonsAsync()
  +Task<bool?> GetExhibitionGamesAsync()
  +Task<IEnumerable<ISportEvent>> GetScheduleAsync()
}

interface ISeason {
  +Task<ISeasonCoverage> GetSeasonCoverageAsync()
  +Task<IEnumerable<IGroup>> GetGroupsAsync()
  +Task<IEnumerable<ICompetition>> GetScheduleAsync()
  +Task<IRound> GetCurrentRoundAsync()
  +Task<string> GetYearAsync()
  +Task<ITournamentInfo> GetTournamentInfoAsync()
  +Task<IEnumerable<ICompetitor>> GetCompetitorsAsync()
}

interface ICurrentSeasonInfo {
  +Urn Id
  +**ITranslatable Names**
  +string Year
  +DateTime StartDate
  +DateTime EndDate
  +<s>string GetName(CultureInfo culture)</s>
  +ISeasonCoverage Coverage
  +IEnumerable<IGroup> Groups
  +IRound CurrentRound
  +IEnumerable<ICompetitor> Competitors
  +IEnumerable<ISportEvent> Schedule
}

interface ITournamentInfo {
  +Urn Id
  +**ITranslatable Names**
  +string GetName(CultureInfo culture)
  +ICategorySummary Category
  +ICurrentSeasonInfo CurrentSeason
}

ISportEvent <|-- ICompetition
ISportEvent <|-- IDraw
ISportEvent <|-- ILongTermEvent
ICompetition <|-- IStage
ICompetition <|-- IMatch
ILongTermEvent <|-- IBasicTournament
ILongTermEvent <|-- ITournament
ILongTermEvent <|-- ISeason
ILongTermEvent <|-- ILottery

@enduml