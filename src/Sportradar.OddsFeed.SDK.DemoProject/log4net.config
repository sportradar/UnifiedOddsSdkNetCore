<?xml version="1.0" encoding="utf-8" ?>
<log4net>
  <!-- Debug appender outputs data to the output (debug) console-->
  <appender name="DebugAppender" type="log4net.Appender.DebugAppender">
	<immediateFlush value="true"/>
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <!-- Console appender writes to console -->
  <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
	<filter type="log4net.Filter.StringMatchFilter">
	  <stringToMatch value="Registering performance counter" />
		<stringToMatch value="App.Metrics" />
	  <acceptOnMatch value="false" />
	</filter>
  </appender>

  <appender name="ColoredConsoleAppender" type="log4net.Appender.ManagedColoredConsoleAppender">
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
	<filter type="log4net.Filter.StringMatchFilter">
	  <stringToMatch value="Registering performance counter" />
	  <acceptOnMatch value="false" />
	</filter>
	  <filter type="log4net.Filter.LoggerMatchFilter">
		  <loggerToMatch value="System.Net.Http" />
		  <acceptOnMatch value="false" />
	  </filter>
	  <filter type="log4net.Filter.LoggerMatchFilter">
		  <loggerToMatch value="Microsoft.Extensions.Http" />
		  <acceptOnMatch value="false" />
	  </filter>
	  <mapping>
	  <level value="DEBUG" />
	  <foreColor value="Green" />
	</mapping>
	<mapping>
	  <level value="INFO" />
	  <foreColor value="White" />
	</mapping>
	<mapping>
	  <level value="WARN" />
	  <foreColor value="Yellow" />
	</mapping>
	<mapping>
	  <level value="ERROR" />
	  <foreColor value="Red" />
	</mapping>
  </appender>

  <appender name="FileAppenderExample" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logExample-%date{yyyyMMdd}.log" />
	</file>
	  <filter type="log4net.Filter.LoggerMatchFilter">
		  <loggerToMatch value="System.Net.Http" />
		  <acceptOnMatch value="false" />
	  </filter>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderExec" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logExec-%date{yyyyMMdd}.log" />
	</file>
	<filter type="log4net.Filter.StringMatchFilter">
	  <stringToMatch value="Registering performance counter" />
	  <acceptOnMatch value="false" />
	</filter>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderFeed" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logFeed-%date{yyyyMMdd}.log" />
	</file>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderRest" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logRest-%date{yyyyMMdd}.log" />
	</file>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderInteraction" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logInteraction-%date{yyyyMMdd}.log" />
	</file>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderCache" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logCache-%date{yyyyMMdd}.log" />
	</file>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <appender name="FileAppenderStats" type="log4net.Appender.RollingFileAppender">
	<file type="log4net.Util.PatternString">
	  <conversionPattern value="../../../Logs/logStats-%date{yyyyMMdd}.log" />
	</file>
	<appendToFile value="true" />
	<rollingStyle value="Composite" />
	<datePattern value="yyyyMMdd" />
	<maxSizeRollBackups value="10" />
	<maximumFileSize value="100MB" />
	<staticLogFileName value="true" />
	<preserveLogFileNameExtension value="true" />
	<layout type="log4net.Layout.PatternLayout">
	  <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff}&#9; %level&#9; [%thread]&#9; %logger{1}&#9; %message %newline" />
	</layout>
  </appender>

  <!-- ALL, DEBUG, INFO, WARN, ERROR, FATAL, OFF - the levels are defined in order of increasing priority -->
  <root name="RootLog">
	<level value="ALL" />
	<appender-ref ref="ColoredConsoleAppender"/>
	<appender-ref ref="FileAppenderExample"/>
  </root>

  <!-- Logs from the DemoProject are logged only to debug output & console -->
  <logger name="Sportradar.OddsFeed.SDK.DemoProject" additivity="false">
	<level value="DEBUG"/>
	<appender-ref ref="DebugAppender"/>
	<appender-ref ref="ColoredConsoleAppender"/>
	<appender-ref ref="FileAppenderExample" />
  </logger>

  <!-- This section configures the log where execution message are written. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK" additivity="false">
	<level value="DEBUG"/>
	<!-- <appender-ref ref="DebugAppender"/> -->
	<!-- <appender-ref ref="ColoredConsoleAppender"/> -->
	<appender-ref ref="FileAppenderExec"/>
  </logger>

  <!-- This section configures AMQP traffic log. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK.FeedTraffic"  additivity="false">
	<level value="DEBUG"/>
	<appender-ref ref="FileAppenderFeed"/>
  </logger>

  <!-- This section configures REST traffic log. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK.RestTraffic" additivity="false">
	<level value="DEBUG"/>
	<appender-ref ref="FileAppenderRest"/>
  </logger>

  <!-- This section configures the log for client interaction log. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK.ClientInteraction" additivity="false">
	<level value="INFO"/>
	<appender-ref ref="FileAppenderInteraction"/>
  </logger>

  <!-- This section configures the log used by the caching component within the SDK. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK.Cache" additivity="false">
	<level value="INFO"/>
	<appender-ref ref="FileAppenderCache"/>
  </logger>

  <!-- This section configures the log statistic component within the SDK. You can set the level and appender which will process the log entries. Please note that each appender 
	referenced by the <appender-ref /> tag has to be defined first. If either the level or the appender list is not specified it will be taken from the RootLog -->
  <logger name="Sportradar.OddsFeed.SDK.Stats" additivity="false">
	<level value="INFO"/>
	<appender-ref ref="FileAppenderStats"/>
  </logger>
</log4net>